
CREATE TABLE CESEC_AL_BARRERA_APRENDIZAJES
(
	N_ID_BARRERA_APRENDIZAJE NUMBER(9) CONSTRAINT SYS_C00129914 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00129915 NOT NULL ,
	S_OBSERVACIONES      VARCHAR2(256 BYTE) NULL 
);



CREATE UNIQUE INDEX ALUMNO_BARRERAS_APRENDIZAJE_PK ON CESEC_AL_BARRERA_APRENDIZAJES
(N_ID_BARRERA_APRENDIZAJE   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_AL_BARRERA_APRENDIZAJES
	ADD CONSTRAINT  ALUMNO_BARRERAS_APRENDIZAJE_PK PRIMARY KEY (N_ID_BARRERA_APRENDIZAJE,N_ID_ALUMNO);



CREATE TABLE CESEC_ALUMNO_BARRERA_APOYOS
(
	N_ID_BARRERA_APOYO   NUMBER(9) CONSTRAINT SYS_C00129917 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00129918 NOT NULL ,
	S_INFORMACION_ADICIONAL VARCHAR2(255 BYTE) NULL 
);



CREATE UNIQUE INDEX ALUMNO_BARRERAS_APOYO_PK ON CESEC_ALUMNO_BARRERA_APOYOS
(N_ID_BARRERA_APOYO   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_ALUMNO_BARRERA_APOYOS
	ADD CONSTRAINT  ALUMNO_BARRERAS_APOYO_PK PRIMARY KEY (N_ID_BARRERA_APOYO,N_ID_ALUMNO);



CREATE TABLE CESEC_ALUMNO_CONTACTOS
(
	N_ID_ALUMNO_CONTACTOS NUMBER(9) CONSTRAINT SYS_C00129920 NOT NULL ,
	N_ID_CONTACTO_ALUMNO NUMBER(9) NULL ,
	N_RESPONSABLEALUMNO  NUMBER NULL ,
	N_PREFERENCIA_FIRMA  NUMBER(1) NULL ,
	N_RECOGEALUMNO       NUMBER NULL ,
	N_VIVE_CON           NUMBER(1) NULL ,
	N_ID_PARENTESCO      NUMBER NULL ,
	N_ID_ALUMNO          NUMBER(9) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ALUMNO_CONTACTOS ON CESEC_ALUMNO_CONTACTOS
(N_ID_ALUMNO_CONTACTOS   ASC);



ALTER TABLE CESEC_ALUMNO_CONTACTOS
	ADD CONSTRAINT  XPKCESEC_ALUMNO_CONTACTOS PRIMARY KEY (N_ID_ALUMNO_CONTACTOS);



CREATE TABLE CESEC_ALUMNO_LEC_EVALUA
(
	N_ID_LECTURA_EVALUACION NUMBER CONSTRAINT SYS_C00129922 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00129923 NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ALUMNO_LEC_EVALUA ON CESEC_ALUMNO_LEC_EVALUA
(N_ID_LECTURA_EVALUACION   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_ALUMNO_LEC_EVALUA
	ADD CONSTRAINT  XPKCESEC_ALUMNO_LEC_EVALUA PRIMARY KEY (N_ID_LECTURA_EVALUACION,N_ID_ALUMNO);



CREATE TABLE CESEC_ALUMNO_RENAPO_CRITICA
(
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00129925 NOT NULL ,
	N_CURP_INCORRECTO    NUMBER(1) NULL ,
	S_CURP_RENAPO        VARCHAR2(18 BYTE) NULL ,
	S_NOMBRE_RENAPO      VARCHAR2(56 BYTE) NULL ,
	S_PRIMER_APELLIDO_RENAPO VARCHAR2(120 BYTE) NULL ,
	S_SEGUNDO_APELLIDO_RENAPO VARCHAR2(120 BYTE) NULL ,
	D_FECHA_NAC_RENAPO   DATE NULL ,
	S_SEXO_RENAPO        VARCHAR2(2 BYTE) NULL 
);



CREATE UNIQUE INDEX PK_ALUM_RENAPO_CRIT ON CESEC_ALUMNO_RENAPO_CRITICA
(N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_ALUMNO_RENAPO_CRITICA
	ADD CONSTRAINT  PK_ALUM_RENAPO_CRIT PRIMARY KEY (N_ID_ALUMNO);



CREATE TABLE CESEC_ALUMNOS
(
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00129927 NOT NULL ,
	N_ID_ETNIA_INDIGENA  NUMBER NULL ,
	N_ID_DIALECTO_INDIGENA NUMBER NULL ,
	N_ID_OTRA_NACIONALIDAD NUMBER(3) NULL ,
	N_ID_NACIONALIDAD    NUMBER(3) NULL ,
	N_ID_EF_NACIMIENTO   NUMBER(6) CONSTRAINT SYS_C00129928 NOT NULL ,
	N_ID_SEXO            NUMBER NULL ,
	N_IDMATRICULA_UNICA  NUMBER(9) NULL ,
	S_CURP               VARCHAR2(18 BYTE) NULL ,
	S_NOMBRES            VARCHAR2(120 BYTE) NULL ,
	S_PRIMER_APELLIDO    VARCHAR2(120 BYTE) NULL ,
	S_SEGUNDO_APELLIDO   VARCHAR2(120 BYTE) NULL ,
	D_NACIMIENTO         DATE NULL ,
	N_IDSAID             NUMBER NULL ,
	N_UDEI_SI            NUMBER NULL ,
	S_CONDADO            VARCHAR2(56 BYTE) NULL ,
	N_ACTIVO             NUMBER NULL ,
	N_ID_MUNICIPIO       NUMBER NULL 
);



CREATE UNIQUE INDEX PKCESEC_ALUMNOS_GIS ON CESEC_ALUMNOS
(N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_ALUMNOS
	ADD CONSTRAINT  PKCESEC_ALUMNOS_GIS PRIMARY KEY (N_ID_ALUMNO);



CREATE TABLE CESEC_ASIGNACION_FOLIOS
(
	N_ID_ASIGNACION      NUMBER(9) NOT NULL ,
	S_PREFIJO_FOLIO      VARCHAR2(15) NULL ,
	N_FOLIO_INICIO       NUMBER(9) NULL ,
	N_FOLIO_FINAL        NUMBER(9) NULL ,
	N_ULTIMO_FOLIO_ASIGNADO NUMBER(9) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	D_FECHA_MODIFICACION DATE NULL ,
	D_FECHA_ASIGNACION   DATE NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ ON CESEC_ASIGNACION_FOLIOS
(N_ID_ASIGNACION   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_ASIGNACION_FOLIOS
	ADD CONSTRAINT  XPKCESEC_ PRIMARY KEY (N_ID_ASIGNACION,N_ID_CICLO_ESCOLAR,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_AULAS
(
	N_ID_AULA            NUMBER CONSTRAINT SYS_C00129930 NOT NULL ,
	N_CANTIDAD           NUMBER NULL ,
	N_CAPACIDAD          NUMBER NULL ,
	N_OCUPADA_MATUTINO   NUMBER NULL ,
	N_OCUPADA_VESPERTINO NUMBER NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_ID_MATERIAL_CONSTRUCCION NUMBER NULL ,
	N_ID_ESTADO_INMUEBLE NUMBER NULL 
);



CREATE UNIQUE INDEX AULA_PK ON CESEC_AULAS
(N_ID_AULA   ASC);



ALTER TABLE CESEC_AULAS
	ADD CONSTRAINT  AULA_PK PRIMARY KEY (N_ID_AULA);



CREATE TABLE CESEC_BARRERA_APOYOS
(
	N_ID_BARRERA_APOYO   NUMBER(9) CONSTRAINT SYS_C00129932 NOT NULL ,
	N_ID_PARENT          NUMBER(9) NULL ,
	S_APOYO              VARCHAR2(100 BYTE) CONSTRAINT SYS_C00129933 NOT NULL ,
	N_HOJA               NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX SYS_C00129936 ON CESEC_BARRERA_APOYOS
(N_ID_BARRERA_APOYO   ASC);



ALTER TABLE CESEC_BARRERA_APOYOS
	ADD CONSTRAINT  SYS_C00129936 PRIMARY KEY (N_ID_BARRERA_APOYO);



CREATE TABLE CESEC_BARRERA_APRENDIZAJES
(
	N_ID_BARRERA_APRENDIZAJE NUMBER(9) CONSTRAINT SYS_C00129937 NOT NULL ,
	N_ID_PARENT          NUMBER(9) NULL ,
	S_CLAVE              VARCHAR2(8 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) CONSTRAINT SYS_C00129938 NOT NULL ,
	N_HOJA               NUMBER(1) CONSTRAINT SYS_C00129939 NOT NULL 
);



CREATE UNIQUE INDEX PSYS_C0020500 ON CESEC_BARRERA_APRENDIZAJES
(N_ID_BARRERA_APRENDIZAJE   ASC);



ALTER TABLE CESEC_BARRERA_APRENDIZAJES
	ADD CONSTRAINT  PSYS_C0020500 PRIMARY KEY (N_ID_BARRERA_APRENDIZAJE);



CREATE TABLE CESEC_BECAS
(
	N_ID_BECA            NUMBER(9) CONSTRAINT SYS_C00129941 NOT NULL ,
	N_BECADO             NUMBER(1) CONSTRAINT SYS_C00129942 NOT NULL ,
	D_FECHACREACION      DATE CONSTRAINT SYS_C00129943 NOT NULL ,
	S_USUARIOCREACION    VARCHAR2(19 BYTE) NULL ,
	N_ID_ALUMNO          NUMBER(9) NULL 
);



CREATE UNIQUE INDEX BECA_PK ON CESEC_BECAS
(N_ID_BECA   ASC);



ALTER TABLE CESEC_BECAS
	ADD CONSTRAINT  BECA_PK PRIMARY KEY (N_ID_BECA);



CREATE TABLE CESEC_BID
(
	N_ID_BID             NUMBER(3) CONSTRAINT SYS_C00129945 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_ID_OPERACION_PLANTEL_TURNOS NUMBER(9) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_BID ON CESEC_BID
(N_ID_BID   ASC);



ALTER TABLE CESEC_BID
	ADD CONSTRAINT  XPKCESEC_BID PRIMARY KEY (N_ID_BID);



CREATE TABLE CESEC_BIOMETRICO_ALUMNOS
(
	N_ID_BIOMETRICO_ALUMNO NUMBER CONSTRAINT SYS_C00129947 NOT NULL ,
	N_PESO               NUMBER(10) NULL ,
	N_TALLA              NUMBER(3,2) NULL ,
	D_FECHA_REGISTRO     DATE NULL ,
	N_ID_ALUMNO          NUMBER(9) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_BIOMETRICO_ALUMNOS ON CESEC_BIOMETRICO_ALUMNOS
(N_ID_BIOMETRICO_ALUMNO   ASC);



ALTER TABLE CESEC_BIOMETRICO_ALUMNOS
	ADD CONSTRAINT  XPKCESEC_BIOMETRICO_ALUMNOS PRIMARY KEY (N_ID_BIOMETRICO_ALUMNO);



CREATE TABLE CESEC_BITACORA
(
	N_ID_BITACORA        NUMBER(9) NOT NULL ,
	D_FECHA              TIMESTAMP NULL ,
	S_ACCION             VARCHAR2(2048) NULL ,
	S_USUARIO            VARCHAR2(18) NULL ,
	S_TIPO_ACCION        VARCHAR2(20) NULL ,
	S_ERROR              VARCHAR2(2048) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_BITACORA ON CESEC_BITACORA
(N_ID_BITACORA   ASC);



ALTER TABLE CESEC_BITACORA
	ADD CONSTRAINT  XPKCESEC_BITACORA PRIMARY KEY (N_ID_BITACORA);



CREATE TABLE CESEC_BITACORA_ERRORES
(
	N_ID_BITACORA_ERROR  NUMBER(20) NOT NULL ,
	S_FOLIO              VARCHAR2(50) NOT NULL ,
	S_MESSAGE            NCLOB NOT NULL ,
	S_PLAYLOAD           NCLOB NOT NULL ,
	S_PLAYLOAD_TYPE      NCLOB NOT NULL ,
	S_ELEMENT            NCLOB NOT NULL ,
	S_ELEMENT_XML        NCLOB NOT NULL ,
	S_DETALLE_TRACK      NCLOB NOT NULL ,
	S_PARAMETROS         NCLOB NOT NULL ,
	S_CCT                VARCHAR2(15) NOT NULL ,
	S_USUARIO            VARCHAR2(24) NOT NULL ,
	D_APLICACION         TIMESTAMP NOT NULL ,
	S_IP                 VARCHAR2(20) NOT NULL ,
	S_URL                VARCHAR2(250) NULL ,
	N_ACTIVO             NUMBER(1) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_BITACORA_ERRORES ON CESEC_BITACORA_ERRORES
(N_ID_BITACORA_ERROR   ASC);



ALTER TABLE CESEC_BITACORA_ERRORES
	ADD CONSTRAINT  XPKCESEC_BITACORA_ERRORES PRIMARY KEY (N_ID_BITACORA_ERROR);



CREATE TABLE CESEC_BLOQUE_MATERIAS
(
	N_ID_BLOQUE_MATERIA  NUMBER(3) CONSTRAINT SYS_C00129949 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(15 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(56 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_BLOQUE_MATERIAS ON CESEC_BLOQUE_MATERIAS
(N_ID_BLOQUE_MATERIA   ASC);



ALTER TABLE CESEC_BLOQUE_MATERIAS
	ADD CONSTRAINT  XPKCESEC_BLOQUE_MATERIAS PRIMARY KEY (N_ID_BLOQUE_MATERIA);



CREATE TABLE CESEC_CICLO_ESCOLARES
(
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00129951 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(15 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ORDER              NUMBER() NULL ,
	D_ULTIMA_FECHA       DATE NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(20) NULL ,
	N_PROMOCION_SI       NUMBER(1) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_CICLO_ESCOLARES ON CESEC_CICLO_ESCOLARES
(N_ID_CICLO_ESCOLAR   ASC);



ALTER TABLE CESEC_CICLO_ESCOLARES
	ADD CONSTRAINT  XPKCESEC_CICLO_ESCOLARES PRIMARY KEY (N_ID_CICLO_ESCOLAR);



CREATE TABLE CESEC_CICLOE_TIPO_CAL
(
	N_ID_CICLOE_TIPO_CAL NUMBER(9) CONSTRAINT SYS_C00129953 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00129954 NOT NULL ,
	N_ID_TIPO_CALENDARIO NUMBER(6) CONSTRAINT SYS_C00129955 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	D_FECHA_INICIO       DATE NULL ,
	D_FECHA_FIN          DATE NULL 
);



CREATE UNIQUE INDEX XPKCESEC_CICLOE_TIPO_CAL ON CESEC_CICLOE_TIPO_CAL
(N_ID_CICLOE_TIPO_CAL   ASC);



ALTER TABLE CESEC_CICLOE_TIPO_CAL
	ADD CONSTRAINT  XPKCESEC_CICLOE_TIPO_CAL PRIMARY KEY (N_ID_CICLOE_TIPO_CAL);



CREATE TABLE CESEC_CODIGO_POSTALES
(
	N_ID_CODIGO_POSTAL   NUMBER(6) CONSTRAINT SYS_C00129957 NOT NULL ,
	N_ID_MUNICIPIOS_DELEGACIONES NUMBER(6) NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00129958 NOT NULL 
);



CREATE UNIQUE INDEX TC_CODIGOPOSTAL ON CESEC_CODIGO_POSTALES
(N_ID_CODIGO_POSTAL   ASC);



ALTER TABLE CESEC_CODIGO_POSTALES
	ADD CONSTRAINT  TC_CODIGOPOSTAL PRIMARY KEY (N_ID_CODIGO_POSTAL);



CREATE  INDEX TC_CODIGOPOSTAL_UK ON CESEC_CODIGO_POSTALES
(S_CLAVE   ASC);



CREATE TABLE CESEC_COL_COD_POSTALES
(
	N_ID_CODIGO_POSTAL   NUMBER(6) CONSTRAINT SYS_C00129960 NOT NULL ,
	N_ID_COLONIA         NUMBER(9) NULL 
);



CREATE TABLE CESEC_COLONIAS
(
	N_ID_COLONIA         NUMBER(9) CONSTRAINT SYS_C00129962 NOT NULL ,
	N_ID_MUNICIPIOS_DELEGACIONES NUMBER(6) NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00129963 NOT NULL 
);



CREATE UNIQUE INDEX TC_COLONIA_PK ON CESEC_COLONIAS
(N_ID_COLONIA   ASC);



ALTER TABLE CESEC_COLONIAS
	ADD CONSTRAINT  TC_COLONIA_PK PRIMARY KEY (N_ID_COLONIA);



CREATE  INDEX TC_COLONIA_UK ON CESEC_COLONIAS
(S_CLAVE   ASC);



CREATE TABLE CESEC_COMPRENSION_ASPECTOS
(
	N_ID_COMPRENSION_ASPECTO NUMBER CONSTRAINT SYS_C00129965 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(150 BYTE) NULL ,
	S_DESCRIPCION_CORTA  VARCHAR2(50 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_COMPRENSION_ASPECTOS ON CESEC_COMPRENSION_ASPECTOS
(N_ID_COMPRENSION_ASPECTO   ASC);



ALTER TABLE CESEC_COMPRENSION_ASPECTOS
	ADD CONSTRAINT  XPKCESEC_COMPRENSION_ASPECTOS PRIMARY KEY (N_ID_COMPRENSION_ASPECTO);



CREATE TABLE CESEC_CONF_MAT_NO_APLICA
(
	N_ID_CONF_EXENTA     NUMBER(6) CONSTRAINT SYS_C00129967 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_ID_MODALIDAD       NUMBER(9) NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_ID_ASIGNATURA      NUMBER(8) CONSTRAINT SYS_C00129968 NOT NULL ,
	N_ID_EXENTAS         NUMBER NULL 
);



CREATE UNIQUE INDEX XPKCESEC_CONF_MAT_NO_APLICA ON CESEC_CONF_MAT_NO_APLICA
(N_ID_CONF_EXENTA   ASC);



ALTER TABLE CESEC_CONF_MAT_NO_APLICA
	ADD CONSTRAINT  XPKCESEC_CONF_MAT_NO_APLICA PRIMARY KEY (N_ID_CONF_EXENTA);



CREATE TABLE CESEC_CONTACTO_ALUMNOS
(
	N_ID_CONTACTO_ALUMNO NUMBER(9) CONSTRAINT SYS_C00129970 NOT NULL ,
	N_ID_DOMICILIO       NUMBER(20) NULL ,
	N_ID_NACIONALIDAD    NUMBER(3) NULL ,
	N_ID_PAIS            NUMBER NULL ,
	N_ID_SEXO            NUMBER NULL ,
	N_ID_ESCOLARIDAD     NUMBER(3) NULL ,
	S_NOMBRES            VARCHAR2(65 BYTE) NULL ,
	S_PRIMER_APELLIDO    VARCHAR2(65 BYTE) NULL ,
	S_SEGUNDO_APELLIDO   VARCHAR2(65 BYTE) NULL ,
	D_NACIMIENTO         DATE NULL ,
	N_ID_OCUPACION       NUMBER CONSTRAINT SYS_C00129971 NOT NULL ,
	N_ID_DIALECTO_INDIGENA NUMBER CONSTRAINT SYS_C00129972 NOT NULL ,
	B_IMAGEN             BLOB NULL ,
	S_CURP               VARCHAR2(18 BYTE) NULL ,
	S_CORREO_ELECTRONICO VARCHAR2(160 BYTE) NULL ,
	S_TELEFONO_CASA      CHAR(18 BYTE) NULL ,
	S_TELEFONO_MOVIL     CHAR(18 BYTE) NULL ,
	S_TELEFONO_OFICINA   CHAR(18 BYTE) NULL ,
	S_TELEFONO_RECADOS   VARCHAR2(20 BYTE) NULL ,
	N_ESMIGRANTE         NUMBER(1) NULL ,
	N_ID_MIGRANTE_PAIS   NUMBER NULL ,
	N_ID_MIGRANTE_ESTADO NUMBER NULL ,
	N_ID_ETNIA_INDIGENA  NUMBER NOT NULL ,
	N_ID_TIPO_SANGUINEO  NUMBER NOT NULL ,
	N_ID_EF_NACIMIENTO   NUMBER(6) NOT NULL ,
	N_ACTIVO             VARCHAR2(2) NULL 
);



CREATE UNIQUE INDEX TW_ALUMNOCONTACTOS_PK ON CESEC_CONTACTO_ALUMNOS
(N_ID_CONTACTO_ALUMNO   ASC);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD CONSTRAINT  TW_ALUMNOCONTACTOS_PK PRIMARY KEY (N_ID_CONTACTO_ALUMNO);



CREATE TABLE CESEC_DERECHO_HABIENCIAS
(
	N_ID_DERECHOHABIENCIA NUMBER(3) CONSTRAINT SYS_C00129975 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) CONSTRAINT SYS_C00130764 NOT NULL ,
	S_CLAVE              VARCHAR2(50 BYTE) CONSTRAINT SYS_C00130762 NOT NULL ,
	N_ACTIVO             NUMBER CONSTRAINT SYS_C00130763 NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_DERECHO_HABIENCIAS ON CESEC_DERECHO_HABIENCIAS
(N_ID_DERECHOHABIENCIA   ASC);



ALTER TABLE CESEC_DERECHO_HABIENCIAS
	ADD CONSTRAINT  XPKCESEC_DERECHO_HABIENCIAS PRIMARY KEY (N_ID_DERECHOHABIENCIA);



CREATE TABLE CESEC_DIALECTO_INDIGENAS
(
	N_ID_DIALECTO_INDIGENA NUMBER CONSTRAINT SYS_C00129977 NOT NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00129978 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL 
);



CREATE UNIQUE INDEX TC_DIALECTOINDIGENA_PK ON CESEC_DIALECTO_INDIGENAS
(N_ID_DIALECTO_INDIGENA   ASC);



ALTER TABLE CESEC_DIALECTO_INDIGENAS
	ADD CONSTRAINT  TC_DIALECTOINDIGENA_PK PRIMARY KEY (N_ID_DIALECTO_INDIGENA);



CREATE  INDEX TC_DIALECTOINDIGENA_UK ON CESEC_DIALECTO_INDIGENAS
(S_CLAVE   ASC);



CREATE TABLE CESEC_DOCENTE_GRUPOS
(
	N_ID_GRUPO_DOCENTE   NUMBER(6) CONSTRAINT SYS_C00129980 NOT NULL ,
	N_ID_GRUPO           NUMBER(9) NULL ,
	N_ID_PERSONAL        NUMBER(9) NULL ,
	N_ASESOR             NUMBER NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_DOCENTE_GRUPOS ON CESEC_DOCENTE_GRUPOS
(N_ID_GRUPO_DOCENTE   ASC);



ALTER TABLE CESEC_DOCENTE_GRUPOS
	ADD CONSTRAINT  XPKCESEC_DOCENTE_GRUPOS PRIMARY KEY (N_ID_GRUPO_DOCENTE);



CREATE TABLE CESEC_DOMICILIOS
(
	N_ID_DOMICILIO       NUMBER(20) CONSTRAINT SYS_C00129982 NOT NULL ,
	N_ID_TIPO_ASENTAMIENTO NUMBER(20) NULL ,
	N_ID_COLONIA         NUMBER(20) NULL ,
	S_CALLE              VARCHAR2(200 BYTE) NULL ,
	S_NUMERO_EXTERIOR    VARCHAR2(130 BYTE) NULL ,
	S_NUMERO_INTERIOR    VARCHAR2(50 BYTE) NULL ,
	S_OTRA_COLONIA       VARCHAR2(120 BYTE) NULL ,
	N_ID_ALUMNO          NUMBER(20) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_DOMICILIOS ON CESEC_DOMICILIOS
(N_ID_DOMICILIO   ASC);



ALTER TABLE CESEC_DOMICILIOS
	ADD CONSTRAINT  XPKCESEC_DOMICILIOS PRIMARY KEY (N_ID_DOMICILIO);



CREATE TABLE CESEC_ENFASIS_MATERIAS
(
	N_ID_MATERIA         NUMBER(9) NOT NULL ,
	N_ID_ENFASIS_TALLER  INTEGER NOT NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ENFASIS_MATERIAS ON CESEC_ENFASIS_MATERIAS
(N_ID_ENFASIS_TALLER   ASC,N_ID_MATERIA   ASC);



ALTER TABLE CESEC_ENFASIS_MATERIAS
	ADD CONSTRAINT  XPKCESEC_ENFASIS_MATERIAS PRIMARY KEY (N_ID_ENFASIS_TALLER,N_ID_MATERIA);



CREATE TABLE CESEC_ENFASIS_TALLER
(
	N_ID_ENFASIS_TALLER  INTEGER NOT NULL ,
	S_CLAVE              VARCHAR2(10) NULL ,
	S_NOMBRE             VARCHAR2(100) NULL ,
	N_ACTIVO             INTEGER NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ENFASIS_TALLER ON CESEC_ENFASIS_TALLER
(N_ID_ENFASIS_TALLER   ASC);



ALTER TABLE CESEC_ENFASIS_TALLER
	ADD CONSTRAINT  XPKCESEC_ENFASIS_TALLER PRIMARY KEY (N_ID_ENFASIS_TALLER);



CREATE TABLE CESEC_ENTIDAD_FEDERATIVAS
(
	N_ID_ENT_FEDERATIVA  NUMBER(6) CONSTRAINT SYS_C00129984 NOT NULL ,
	N_ID_PAIS            NUMBER NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	S_CLAVE_ENTIDAD_CURP VARCHAR2(12 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00129985 NOT NULL ,
	N_ID_PAIS_SWM        NUMBER NULL ,
	N_ID_EF_SWM          NUMBER NULL 
);



CREATE UNIQUE INDEX TC_ENTIDADESFEDERATIVAS_PK ON CESEC_ENTIDAD_FEDERATIVAS
(N_ID_ENT_FEDERATIVA   ASC);



ALTER TABLE CESEC_ENTIDAD_FEDERATIVAS
	ADD CONSTRAINT  TC_ENTIDADESFEDERATIVAS_PK PRIMARY KEY (N_ID_ENT_FEDERATIVA);



CREATE TABLE CESEC_ESC_MODAL_PLN_EST
(
	N_ID_ESCUELA         NUMBER(9) CONSTRAINT SYS_C00130002 NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130003 NOT NULL ,
	N_ID_MODALIDAD       NUMBER(9) CONSTRAINT SYS_C00130004 NOT NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX PKCESEC_ESC_MOD_PLN_EST ON CESEC_ESC_MODAL_PLN_EST
(N_ID_ESCUELA   ASC,N_ID_PLAN_ESTUDIOS   ASC,N_ID_MODALIDAD   ASC);



ALTER TABLE CESEC_ESC_MODAL_PLN_EST
	ADD CONSTRAINT  PKCESEC_ESC_MOD_PLN_EST PRIMARY KEY (N_ID_ESCUELA,N_ID_PLAN_ESTUDIOS,N_ID_MODALIDAD);



CREATE TABLE CESEC_ESCOLARIDADES
(
	N_ID_ESCOLARIDAD     NUMBER(3) CONSTRAINT SYS_C00130006 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130007 NOT NULL ,
	N_NIVEL              NUMBER NULL 
);



CREATE UNIQUE INDEX TC_ESCOLARIDAD_PK ON CESEC_ESCOLARIDADES
(N_ID_ESCOLARIDAD   ASC);



ALTER TABLE CESEC_ESCOLARIDADES
	ADD CONSTRAINT  TC_ESCOLARIDAD_PK PRIMARY KEY (N_ID_ESCOLARIDAD);



CREATE  INDEX TC_ESCOLARIDAD_UK ON CESEC_ESCOLARIDADES
(S_CLAVE   ASC);



CREATE TABLE CESEC_ESCUELA_MODALIDADES
(
	N_ID_ESCUELA         NUMBER(9) CONSTRAINT SYS_C00130009 NOT NULL ,
	N_ID_MODALIDAD       NUMBER(9) CONSTRAINT SYS_C00130010 NOT NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ESCUELA_MODALIDADES ON CESEC_ESCUELA_MODALIDADES
(N_ID_ESCUELA   ASC,N_ID_MODALIDAD   ASC);



ALTER TABLE CESEC_ESCUELA_MODALIDADES
	ADD CONSTRAINT  XPKCESEC_ESCUELA_MODALIDADES PRIMARY KEY (N_ID_ESCUELA,N_ID_MODALIDAD);



CREATE TABLE CESEC_ESCUELAS
(
	N_ID_ESCUELA         NUMBER(9) CONSTRAINT SYS_C00130012 NOT NULL ,
	N_ID_SOSTENIMIENTO_ESCUELA NUMBER CONSTRAINT SYS_C00130338 NOT NULL ,
	N_ID_ZONA            NUMBER CONSTRAINT SYS_C00130339 NOT NULL ,
	N_ID_SERVICIO_ESCUELA NUMBER(3) CONSTRAINT SYS_C00130340 NOT NULL ,
	N_ID_TIPO_ESCUELA    NUMBER(3) CONSTRAINT SYS_C00130341 NOT NULL ,
	N_ID_TIPO_INCORPORACION_SEP NUMBER(3) CONSTRAINT SYS_C00130342 NOT NULL ,
	S_CCT                VARCHAR2(20 BYTE) NULL ,
	S_CORREO_ELECTRONICO VARCHAR2(326 BYTE) NULL ,
	S_PAGINA_WEB         VARCHAR2(250 BYTE) NULL ,
	S_NUM_INCORPORACION_SEP VARCHAR2(150 BYTE) NULL ,
	S_ACUERDO_SEP        VARCHAR2(30 BYTE) NULL ,
	D_ACUERDO            DATE NULL ,
	S_SAID_ORDEN_PROCESO NUMBER(6) NULL ,
	N_SAID_PREINSCRIBE   NUMBER(3) NULL ,
	S_NOMBRE_PLANTEL     VARCHAR2(110 BYTE) NULL ,
	N_PROGRAMA_DESAYUNOS NUMBER NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ID_TW_INMUEBLE     NUMBER NULL 
);



CREATE UNIQUE INDEX PKCESEC_ESCUELAS ON CESEC_ESCUELAS
(N_ID_ESCUELA   ASC);



ALTER TABLE CESEC_ESCUELAS
	ADD CONSTRAINT  PKCESEC_ESCUELAS PRIMARY KEY (N_ID_ESCUELA);



CREATE TABLE CESEC_ESTADISTICA_CUADRO_CONS
(
	N_ALUMNOS_INSCRITOS  NUMBER(10) NULL ,
	N_NUMERO_ALTAS       NUMBER(10) NULL ,
	N_NUMERO_BAJAS       NUMBER(10) NULL ,
	N_ALUMNOS_APROBADOS  NUMBER(10) NULL ,
	N_ALUMNOS_REPROBADOS NUMBER(19) NULL ,
	N_ID_PERIODO         NUMBER(9) NOT NULL ,
	N_ID_GRUPO           NUMBER(9) NOT NULL ,
	N_PROMEDIO_PERIODO   NUMBER(4) NULL ,
	S_USUARIO_CREACION   VARCHAR2(32) NULL ,
	D_FECHA_CREACION     DATE NULL ,
	N_POR_ALUMNOSAPROBADOS NUMBER(4) NULL ,
	N_POR_ALUMNOSREPROBADOS NUMBER(4) NULL 
);



CREATE UNIQUE INDEX XPKe ON CESEC_ESTADISTICA_CUADRO_CONS
(N_ID_GRUPO   ASC,N_ID_PERIODO   ASC);



ALTER TABLE CESEC_ESTADISTICA_CUADRO_CONS
	ADD CONSTRAINT  XPKe PRIMARY KEY (N_ID_GRUPO,N_ID_PERIODO);



CREATE TABLE CESEC_ESTATUS_ASIG_FOLIOS
(
	N_ID_ESTATUS_ASIG_FOLIOS NUMBER(9) NOT NULL ,
	S_DESCRIPCION        VARCHAR2(20) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ESTATUS_ ON CESEC_ESTATUS_ASIG_FOLIOS
(N_ID_ESTATUS_ASIG_FOLIOS   ASC);



ALTER TABLE CESEC_ESTATUS_ASIG_FOLIOS
	ADD CONSTRAINT  XPKCESEC_ESTATUS_ PRIMARY KEY (N_ID_ESTATUS_ASIG_FOLIOS);



CREATE TABLE CESEC_ESTATUS_INCIDENCIA
(
	N_ID_ESTATUS_INCIDENCIA NUMBER NOT NULL ,
	S_DESCRIPCION        VARCHAR2(25) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_ESTATUS_INCIDENCIA ON CESEC_ESTATUS_INCIDENCIA
(N_ID_ESTATUS_INCIDENCIA   ASC);



ALTER TABLE CESEC_ESTATUS_INCIDENCIA
	ADD CONSTRAINT  XPKCESEC_ESTATUS_INCIDENCIA PRIMARY KEY (N_ID_ESTATUS_INCIDENCIA);



CREATE TABLE CESEC_ETNIA_INDIGENAS
(
	N_ID_ETNIA_INDIGENA  NUMBER CONSTRAINT SYS_C00130014 NOT NULL ,
	S_CLAVE              VARCHAR2(50 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	N_ACTIVO             NUMBER NOT NULL 
);



CREATE UNIQUE INDEX TC_ETNIASINDIGENAS_PK ON CESEC_ETNIA_INDIGENAS
(N_ID_ETNIA_INDIGENA   ASC);



ALTER TABLE CESEC_ETNIA_INDIGENAS
	ADD CONSTRAINT  TC_ETNIASINDIGENAS_PK PRIMARY KEY (N_ID_ETNIA_INDIGENA);



CREATE TABLE CESEC_EVAL_CERTIFICACIONES
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NOT NULL ,
	N_ID_MATERIA         NUMBER(9) NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NOT NULL ,
	N_CALIF_RECUPERA     NUMBER(4,2) NULL ,
	D_APLICACION         DATE NOT NULL ,
	S_USUARIO            VARCHAR2(18) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_EVAL_CERTTIFICACIONES ON CESEC_EVAL_CERTIFICACIONES
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_EVAL_CERTIFICACIONES
	ADD CONSTRAINT  XPKCESEC_EVAL_CERTTIFICACIONES PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_EVAL_COMPRENSIONES
(
	N_ID_PERIODO         NUMBER(9) CONSTRAINT SYS_C00130022 NOT NULL ,
	N_ID_COMPRENSION_ASPECTO NUMBER CONSTRAINT SYS_C00130023 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130024 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130025 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130026 NOT NULL ,
	N_ID_NIVEL_AVANCE    NUMBER(6) CONSTRAINT SYS_C00130027 NOT NULL ,
	D_APLICACION         DATE NULL ,
	N_ORDEN              NUMBER(1) NULL 
);



CREATE UNIQUE INDEX PKCESEC_EVAL_COMPRENSIONES ON CESEC_EVAL_COMPRENSIONES
(N_ID_PERIODO   ASC,N_ID_COMPRENSION_ASPECTO   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD CONSTRAINT  PKCESEC_EVAL_COMPRENSIONES PRIMARY KEY (N_ID_PERIODO,N_ID_COMPRENSION_ASPECTO,N_ID_CICLO_ESCOLAR,N_ID_GRADO_ESCOLAR,N_ID_ALUMNO);



CREATE TABLE CESEC_EVAL_EXAMEN_GRAL_C
(
	N_ID_CICLO_ESCOLAR   NUMBER(3) CONSTRAINT SYS_C00130029 NOT NULL ,
	N_ID_ESCUELA         NUMBER(9) CONSTRAINT SYS_C00130030 NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130031 NOT NULL ,
	N_ID_MODALIDAD       NUMBER(9) CONSTRAINT SYS_C00130032 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130033 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130034 NOT NULL ,
	N_CALIFICACION       NUMBER(4,2) NULL ,
	D_APLICACION         DATE NULL 
);



CREATE UNIQUE INDEX PKCESEC_EVAL_EXAMEN_GRAL_C ON CESEC_EVAL_EXAMEN_GRAL_C
(N_ID_CICLO_ESCOLAR   ASC,N_ID_ESCUELA   ASC,N_ID_PLAN_ESTUDIOS   ASC,N_ID_MODALIDAD   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_EVAL_EXAMEN_GRAL_C
	ADD CONSTRAINT  PKCESEC_EVAL_EXAMEN_GRAL_C PRIMARY KEY (N_ID_CICLO_ESCOLAR,N_ID_ESCUELA,N_ID_PLAN_ESTUDIOS,N_ID_MODALIDAD,N_ID_GRADO_ESCOLAR,N_ID_ALUMNO);



CREATE TABLE CESEC_EVAL_HERR_FUNDAMENTALES
(
	N_ID_PERIODO         NUMBER(9) CONSTRAINT SYS_C00130036 NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130037 NOT NULL ,
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130038 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130039 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130040 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130041 NOT NULL ,
	S_OBSERVACION        VARCHAR2(120 BYTE) NULL ,
	S_REQUIERE_APOYO     VARCHAR2(120 BYTE) NULL ,
	D_APLICACION         DATE NULL 
);



CREATE UNIQUE INDEX PKCESEC_EVAL_HERR_FUNDAMENTAL ON CESEC_EVAL_HERR_FUNDAMENTALES
(N_ID_PERIODO   ASC,N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_EVAL_HERR_FUNDAMENTALES
	ADD CONSTRAINT  PKCESEC_EVAL_HERR_FUNDAMENTAL PRIMARY KEY (N_ID_PERIODO,N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_EVAL_REVALIDACIONES
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_TIPO_REVALIDACION NUMBER NOT NULL ,
	D_ULTIMA_MODIFICACION DATE NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(18) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_EVAL_ ON CESEC_EVAL_REVALIDACIONES
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_CICLO_ESCOLAR   ASC);



ALTER TABLE CESEC_EVAL_REVALIDACIONES
	ADD CONSTRAINT  XPKCESEC_EVAL_ PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR,N_ID_CICLO_ESCOLAR);



CREATE TABLE CESEC_EVALUACION_EXECIONES
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NOT NULL ,
	N_ID_MATERIA         NUMBER(9) NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NOT NULL ,
	N_ID_TIPO_EXENTO     NUMBER NOT NULL ,
	N_ORIGEN_TABLA       NUMBER NULL ,
	D_ULTIMA_MODIFICACION DATE NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(20) NULL 
);



CREATE UNIQUE INDEX XPKCESEC ON CESEC_EVALUACION_EXECIONES
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_TIPO_EXENTO   ASC);



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD CONSTRAINT  XPKCESEC PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR,N_ID_TIPO_EXENTO);



CREATE TABLE CESEC_EVALUACION_EXTRAS
(
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130043 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130044 NOT NULL ,
	N_ID_CICLO_ESOLAR_APLICA NUMERIC(9,0) NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130045 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130046 NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130047 NOT NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_CALIFICACION       NUMBER(2,2) NULL ,
	D_APLICACION         DATE NULL ,
	N_ORIGEN_TABLA       NUMBER NULL ,
	D_FECHA_CREACION     DATE NULL ,
	N_ID_PERIODO_APLICA  NUMBER(9) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_EVALUACION_EXTRAS ON CESEC_EVALUACION_EXTRAS
(N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_PLAN_ESTUDIOS   ASC);



ALTER TABLE CESEC_EVALUACION_EXTRAS
	ADD CONSTRAINT  XPKCESEC_EVALUACION_EXTRAS PRIMARY KEY (N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR,N_ID_PLAN_ESTUDIOS);



CREATE TABLE CESEC_EVALUACION_MATERIA
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130049 NOT NULL ,
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130050 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130051 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130052 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130053 NOT NULL ,
	N_CALIFICACION_PROMEDIO NUMBER(4,2) NULL ,
	N_ORIGEN_TABLA       NUMBER(2) NULL ,
	D_ULTIMA_MODIFICACION DATE NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(18 BYTE) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_EVALUACION_MATERIA ON CESEC_EVALUACION_MATERIA
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_EVALUACION_MATERIA
	ADD CONSTRAINT  XPKCESEC_EVALUACION_MATERIA PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_EVALUACION_REGULARES
(
	N_ID_PERIODO         NUMBER(9) CONSTRAINT SYS_C00130055 NOT NULL ,
	N_RECUPERACION       NUMBER CONSTRAINT SYS_C00130056 NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130057 NOT NULL ,
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130058 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130059 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130060 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130061 NOT NULL ,
	S_OBSERVACIONES      VARCHAR2(256 BYTE) NULL ,
	S_RECOMENDACIONES    VARCHAR2(256 BYTE) NULL ,
	N_INASISTENCIAS      NUMBER(2) NULL ,
	D_APLICACION         DATE NULL ,
	N_ORIGEN_TABLA       NUMBER NULL ,
	N_CALIFICACION       NUMBER(4) NULL ,
	N_EXISTE_RECUPERACION NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_EVALUACION_REGULARES ON CESEC_EVALUACION_REGULARES
(N_ID_PERIODO   ASC,N_RECUPERACION   ASC,N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_EVALUACION_REGULARES
	ADD CONSTRAINT  XPKCESEC_EVALUACION_REGULARES PRIMARY KEY (N_ID_PERIODO,N_RECUPERACION,N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_FAMILIA_MODALIDADES
(
	N_ID_FAMILIA_MODALIDAD NUMBER(9) NOT NULL ,
	S_FAMILIA            VARCHAR2(20) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_FAMILIA_MODALIDADES ON CESEC_FAMILIA_MODALIDADES
(N_ID_FAMILIA_MODALIDAD   ASC);



ALTER TABLE CESEC_FAMILIA_MODALIDADES
	ADD CONSTRAINT  XPKCESEC_FAMILIA_MODALIDADES PRIMARY KEY (N_ID_FAMILIA_MODALIDAD);



CREATE TABLE CESEC_FOLIO_CARTILLAS
(
	N_ID_FOLIO_CARTILLA  NUMBER(9) CONSTRAINT SYS_C00130063 NOT NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_ID_NIVEL_ESCOLAR   NUMBER(3) NULL ,
	N_ID_GRUPO           NUMBER(9) NULL ,
	S_FOLIO              VARCHAR2(15 BYTE) CONSTRAINT SYS_C00130064 NOT NULL ,
	N_GRADO              NUMBER(2) CONSTRAINT SYS_C00130065 NOT NULL ,
	D_FECHA_CREACION     DATE NULL ,
	S_USUARIO_CREACION   VARCHAR2(32 BYTE) NULL ,
	N_TIPO_FOLIO         NUMBER(1) NULL ,
	N_SEMESTRE           NUMBER(1) NULL ,
	N_ID_ALUMNO          NUMBER(9) NULL 
);



CREATE UNIQUE INDEX FOLIOCARTILLA_PK ON CESEC_FOLIO_CARTILLAS
(N_ID_FOLIO_CARTILLA   ASC);



ALTER TABLE CESEC_FOLIO_CARTILLAS
	ADD CONSTRAINT  FOLIOCARTILLA_PK PRIMARY KEY (N_ID_FOLIO_CARTILLA);



CREATE  INDEX IDXFOLIO ON CESEC_FOLIO_CARTILLAS
(S_FOLIO   ASC);



CREATE TABLE CESEC_FORMA_CALIF_MATERIAS
(
	N_ID_FORMA_CALIFICA_MATERIA NUMBER(2) CONSTRAINT SYS_C00130067 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(20 BYTE) NULL 
);



CREATE UNIQUE INDEX PKCESEC_FORMA_CALIF_MATERIAS ON CESEC_FORMA_CALIF_MATERIAS
(N_ID_FORMA_CALIFICA_MATERIA   ASC);



ALTER TABLE CESEC_FORMA_CALIF_MATERIAS
	ADD CONSTRAINT  PKCESEC_FORMA_CALIF_MATERIAS PRIMARY KEY (N_ID_FORMA_CALIFICA_MATERIA);



CREATE TABLE CESEC_FOTO_ALUMNO
(
	ID_FOTO_ALUMNO       NUMBER(9) CONSTRAINT SYS_C00130069 NOT NULL ,
	S_NOMBRE_ARCHIVO     VARCHAR2(256 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_FOTO_ALUMNO ON CESEC_FOTO_ALUMNO
(ID_FOTO_ALUMNO   ASC);



ALTER TABLE CESEC_FOTO_ALUMNO
	ADD CONSTRAINT  XPKCESEC_FOTO_ALUMNO PRIMARY KEY (ID_FOTO_ALUMNO);



CREATE TABLE CESEC_FUNCION_REALES
(
	N_ID_FUNCION_REAL    NUMBER(3) CONSTRAINT SYS_C00130071 NOT NULL ,
	S_CLAVE              VARCHAR2(8 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX TC_FUNCIONREAL_PK ON CESEC_FUNCION_REALES
(N_ID_FUNCION_REAL   ASC);



ALTER TABLE CESEC_FUNCION_REALES
	ADD CONSTRAINT  TC_FUNCIONREAL_PK PRIMARY KEY (N_ID_FUNCION_REAL);



CREATE TABLE CESEC_GASTO_ESCUELA
(
	N_ID_GASTO_ESCUELA   NUMBER(10) CONSTRAINT SYS_C00130073 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_CUOTAS             NUMBER NULL ,
	N_UNIFORMES          NUMBER NULL ,
	N_UTILES             NUMBER NULL 
);



CREATE UNIQUE INDEX GASTOSPLANTEL_PK ON CESEC_GASTO_ESCUELA
(N_ID_GASTO_ESCUELA   ASC);



ALTER TABLE CESEC_GASTO_ESCUELA
	ADD CONSTRAINT  GASTOSPLANTEL_PK PRIMARY KEY (N_ID_GASTO_ESCUELA);



CREATE TABLE CESEC_GRADO_ESCOLARES
(
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130075 NOT NULL ,
	N_ID_NIVEL_ESCOLAR   NUMBER(3) CONSTRAINT SYS_C00130076 NOT NULL ,
	S_CVE_GRADO          VARCHAR2(3 BYTE) NULL ,
	S_OBSERVACIONES      VARCHAR2(150 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_GRADO_ESCOLARES ON CESEC_GRADO_ESCOLARES
(N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_GRADO_ESCOLARES
	ADD CONSTRAINT  XPKCESEC_GRADO_ESCOLARES PRIMARY KEY (N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_GRUPOS
(
	N_ID_GRUPO           NUMBER(9) CONSTRAINT SYS_C00130078 NOT NULL ,
	N_ID_TIPO_GRUPO      NUMBER NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NULL ,
	N_ID_TURNO           NUMBER(3) NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_ID_SECCION         NUMBER(3) CONSTRAINT SYS_C00130079 NOT NULL ,
	S_NOMBRE_GRUPO       VARCHAR2(10 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NULL ,
	N_ID_MODALIDAD       NUMBER(9) NULL 
);



CREATE UNIQUE INDEX PKCESEC_GRUPOS ON CESEC_GRUPOS
(N_ID_GRUPO   ASC);



ALTER TABLE CESEC_GRUPOS
	ADD CONSTRAINT  PKCESEC_GRUPOS PRIMARY KEY (N_ID_GRUPO);



CREATE TABLE CESEC_HISTORICO_EVAL_EXTRAS
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NOT NULL ,
	N_ID_MATERIA         NUMBER(9) NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NOT NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_CALIFICACION       NUMBER(4,2) NULL ,
	D_APLICACION         DATE NULL ,
	N_ORIGEN_TABLA       INTEGER NULL ,
	D_FECHA_CREACION     DATE NULL ,
	N_ID_CICLO_ESCOLAR_APLICA NUMERIC(9,0) NOT NULL ,
	N_ID_PERIODO_APLICA  NUMBER(9) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_HISTORICO_EVAL_EXTRAS ON CESEC_HISTORICO_EVAL_EXTRAS
(N_ID_MATERIA   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_PLAN_ESTUDIOS   ASC,N_ID_PERIODO_APLICA   ASC,N_ID_CICLO_ESCOLAR_APLICA   ASC);



ALTER TABLE CESEC_HISTORICO_EVAL_EXTRAS
	ADD CONSTRAINT  XPKCESEC_HISTORICO_EVAL_EXTRAS PRIMARY KEY (N_ID_MATERIA,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR,N_ID_PLAN_ESTUDIOS,N_ID_PERIODO_APLICA,N_ID_CICLO_ESCOLAR_APLICA);



CREATE TABLE CESEC_INFO_SALUD
(
	N_ID_INFO_SALUD      NUMBER(19) CONSTRAINT SYS_C00130081 NOT NULL ,
	N_ID_TIPO_SANGUINEO  NUMBER(10) NULL ,
	N_ID_DERECHOHABIENCIA NUMBER(5) CONSTRAINT SYS_C00130082 NULL ,
	N_DESAYUNO           NUMBER(1) NULL ,
	S_ALERGIAS           VARCHAR2(1000 BYTE) NULL ,
	S_ENFERMEDADES       VARCHAR2(1000 BYTE) NULL ,
	S_OBSERVACIONES      VARCHAR2(1000 BYTE) NULL ,
	N_TODELETE           NUMBER(1) NULL ,
	D_FECHA_REGISTRO     DATE NULL ,
	N_ID_ALUMNO          NUMBER(9) NULL 
);



CREATE UNIQUE INDEX SYS_C00130083 ON CESEC_INFO_SALUD
(N_ID_INFO_SALUD   ASC);



ALTER TABLE CESEC_INFO_SALUD
	ADD CONSTRAINT  SYS_C00130083 PRIMARY KEY (N_ID_INFO_SALUD);



CREATE TABLE CESEC_INSCRIPCION_ALUMNOS
(
	N_ID_INSCRIPCION_ALUMNO NUMBER(9) CONSTRAINT SYS_C00130084 NOT NULL ,
	N_ID_OPERACION_PLANTEL_TURNOS NUMBER(9) NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	D_FECHA_INSCRIPCION  DATE NULL ,
	D_FECHA_REGISTRO     DATE NULL ,
	N_ID_MODALIDAD       NUMBER(9) NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130085 NOT NULL 
);



CREATE UNIQUE INDEX PKCESEC_INSC_ALUM_01 ON CESEC_INSCRIPCION_ALUMNOS
(N_ID_INSCRIPCION_ALUMNO   ASC);



ALTER TABLE CESEC_INSCRIPCION_ALUMNOS
	ADD CONSTRAINT  PKCESEC_INSC_ALUM_01 PRIMARY KEY (N_ID_INSCRIPCION_ALUMNO);



CREATE TABLE CESEC_INSCRIPCION_GRUPOS
(
	N_ID_INSCRIPCION_ALUMNO NUMBER(9) CONSTRAINT SYS_C00130087 NOT NULL ,
	N_ID_GRUPO           NUMBER(9) NOT NULL ,
	N_ACTIVO             NUMBER NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_INSCRIPCION_GRUPO ON CESEC_INSCRIPCION_GRUPOS
(N_ID_INSCRIPCION_ALUMNO   ASC,N_ID_GRUPO   ASC);



ALTER TABLE CESEC_INSCRIPCION_GRUPOS
	ADD CONSTRAINT  XPKCESEC_INSCRIPCION_GRUPO PRIMARY KEY (N_ID_INSCRIPCION_ALUMNO,N_ID_GRUPO);



CREATE TABLE CESEC_INSCRIPCION_TIPO_MOV
(
	N_ID_TIPO_MOV_INSCRIPCION NUMBER(3) CONSTRAINT SYS_C00130089 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_INSCRIPCION_TIPO_MOV ON CESEC_INSCRIPCION_TIPO_MOV
(N_ID_TIPO_MOV_INSCRIPCION   ASC);



ALTER TABLE CESEC_INSCRIPCION_TIPO_MOV
	ADD CONSTRAINT  XPKCESEC_INSCRIPCION_TIPO_MOV PRIMARY KEY (N_ID_TIPO_MOV_INSCRIPCION);



CREATE TABLE CESEC_LECTURA_EVALUACIONES
(
	N_ID_LECTURA_EVALUACION NUMBER CONSTRAINT SYS_C00130091 NOT NULL ,
	N_ID_LECTURA_HABILIDAD NUMBER NULL ,
	N_ID_GRUPO           NUMBER(9) NULL ,
	N_ID_PERIODO         NUMBER(9) NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_PUNTAJE            NUMBER NULL 
);



CREATE UNIQUE INDEX LECTURAEVALUACION_PK ON CESEC_LECTURA_EVALUACIONES
(N_ID_LECTURA_EVALUACION   ASC);



ALTER TABLE CESEC_LECTURA_EVALUACIONES
	ADD CONSTRAINT  LECTURAEVALUACION_PK PRIMARY KEY (N_ID_LECTURA_EVALUACION);



CREATE TABLE CESEC_LECTURA_HABILIDADES
(
	N_ID_LECTURA_HABILIDAD NUMBER CONSTRAINT SYS_C00130093 NOT NULL ,
	S_NOMBRE             VARCHAR2(300 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX LECTURAHABILIDAD_PK ON CESEC_LECTURA_HABILIDADES
(N_ID_LECTURA_HABILIDAD   ASC);



ALTER TABLE CESEC_LECTURA_HABILIDADES
	ADD CONSTRAINT  LECTURAHABILIDAD_PK PRIMARY KEY (N_ID_LECTURA_HABILIDAD);



CREATE TABLE CESEC_MAT_GPO_TALLER_ARTES
(
	N_ID_GRUPO           NUMBER(9) CONSTRAINT SYS_C00130096 NOT NULL ,
	S_OBSERVACIONES      VARCHAR2(156 BYTE) NULL ,
	N_ID_MATERIA         NUMBER(9) NOT NULL ,
	N_ID_ENFASIS_TALLER  INTEGER NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_MATERIA_TALLER_ARTES ON CESEC_MAT_GPO_TALLER_ARTES
(N_ID_GRUPO   ASC,N_ID_MATERIA   ASC,N_ID_ENFASIS_TALLER   ASC);



ALTER TABLE CESEC_MAT_GPO_TALLER_ARTES
	ADD CONSTRAINT  XPKCESEC_MATERIA_TALLER_ARTES PRIMARY KEY (N_ID_GRUPO,N_ID_MATERIA,N_ID_ENFASIS_TALLER);



CREATE TABLE CESEC_MATERIAS
(
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130098 NOT NULL ,
	S_CVE_ASIGNATURA     VARCHAR2(6 BYTE) NULL ,
	N_ID_FORMA_CALIFICA_MATERIA NUMBER(2) CONSTRAINT SYS_C00130099 NOT NULL ,
	N_ID_BLOQUE_ASIGNATURA NUMBER(2) CONSTRAINT SYS_C00130100 NOT NULL ,
	S_NOMBRE             VARCHAR2(50 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(56 BYTE) NULL ,
	N_HORAS_CICLO_ESCOLAR NUMBER(3) NULL ,
	N_HORAS_SEMANAL      NUMBER(2) NULL ,
	N_ORDEN              NUMBER(2) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_MATERIAS ON CESEC_MATERIAS
(N_ID_MATERIA   ASC);



ALTER TABLE CESEC_MATERIAS
	ADD CONSTRAINT  XPKCESEC_MATERIAS PRIMARY KEY (N_ID_MATERIA);



CREATE TABLE CESEC_MODALIDAD_PERIODOS
(
	N_ID_MODALIDAD_PERIODO NUMBER(19) CONSTRAINT SYS_C00130102 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NULL ,
	N_ID_MODALIDAD       NUMBER(9) CONSTRAINT SYS_C00130103 NOT NULL ,
	N_ID_PERIODO         NUMBER(9) NULL ,
	D_FECHA_INICIO       DATE NULL ,
	D_FECHA_FIN          DATE NULL ,
	D_FECHA_CREACION     DATE NULL 
);



CREATE UNIQUE INDEX SYS_C00130104 ON CESEC_MODALIDAD_PERIODOS
(N_ID_MODALIDAD_PERIODO   ASC);



ALTER TABLE CESEC_MODALIDAD_PERIODOS
	ADD CONSTRAINT  SYS_C00130104 PRIMARY KEY (N_ID_MODALIDAD_PERIODO);



CREATE TABLE CESEC_MODALIDADES
(
	N_ID_MODALIDAD       NUMBER(9) CONSTRAINT SYS_C00130105 NOT NULL ,
	N_ID_NIVEL_ESCOLAR   NUMBER(5) CONSTRAINT SYS_C00130106 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) NULL ,
	N_ACTIVO             NUMBER(2) NOT NULL ,
	NOMENCLATURA         VARCHAR(3) NULL ,
	N_ID_FAMILIA_MODALIDAD NUMBER(9) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_MODALIDADES ON CESEC_MODALIDADES
(N_ID_MODALIDAD   ASC);



ALTER TABLE CESEC_MODALIDADES
	ADD CONSTRAINT  XPKCESEC_MODALIDADES PRIMARY KEY (N_ID_MODALIDAD);



CREATE TABLE CESEC_MOTIVOS
(
	N_ID_MOTIVO          NUMBER CONSTRAINT SYS_C00130108 NOT NULL ,
	N_ID_TIPO_MOV_INSCRIPCION NUMBER(3) NULL ,
	S_DESCRIPCION        VARCHAR2(256 BYTE) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_MOTIVOS ON CESEC_MOTIVOS
(N_ID_MOTIVO   ASC);



ALTER TABLE CESEC_MOTIVOS
	ADD CONSTRAINT  XPKCESEC_MOTIVOS PRIMARY KEY (N_ID_MOTIVO);



CREATE TABLE CESEC_MOVIMIENTO_ALUMNOS
(
	N_ID_INSCRIPCION_MOVIMIENTOS NUMBER(9) CONSTRAINT SYS_C00130110 NOT NULL ,
	N_ID_MOTIVO          NUMBER NULL ,
	N_ID_INSCRIPCION_ALUMNO NUMBER(9) NULL ,
	D_FECHA_MOVIMIENTO   DATE NULL ,
	D_FECHA_REGISTRO     DATE NULL ,
	S_OBSERVACIONES      VARCHAR2(256 BYTE) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_MOVIMIENTO_ALUMNOS ON CESEC_MOVIMIENTO_ALUMNOS
(N_ID_INSCRIPCION_MOVIMIENTOS   ASC);



ALTER TABLE CESEC_MOVIMIENTO_ALUMNOS
	ADD CONSTRAINT  XPKCESEC_MOVIMIENTO_ALUMNOS PRIMARY KEY (N_ID_INSCRIPCION_MOVIMIENTOS);



CREATE TABLE CESEC_MUNICIPIO_DELEGACIONES
(
	N_ID_MUNICIPIOS_DELEGACIONES NUMBER(6) CONSTRAINT SYS_C00130112 NOT NULL ,
	N_ID_ENT_FEDERATIVA  NUMBER(6) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	N_ACTIVO             NUMBER CONSTRAINT SYS_C00130113 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL 
);



CREATE UNIQUE INDEX TC_MUNICIPIODELEGACIONES_PK ON CESEC_MUNICIPIO_DELEGACIONES
(N_ID_MUNICIPIOS_DELEGACIONES   ASC);



ALTER TABLE CESEC_MUNICIPIO_DELEGACIONES
	ADD CONSTRAINT  TC_MUNICIPIODELEGACIONES_PK PRIMARY KEY (N_ID_MUNICIPIOS_DELEGACIONES);



CREATE  INDEX TC_MUNICIPIODELEGACIONES_UK ON CESEC_MUNICIPIO_DELEGACIONES
(S_CLAVE   ASC);



CREATE TABLE CESEC_NACIONALIDADES
(
	N_ID_NACIONALIDAD    NUMBER(3) CONSTRAINT SYS_C00130115 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(255 BYTE) NULL ,
	S_ABREVIATURA        VARCHAR2(3 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX SYS_C00130116 ON CESEC_NACIONALIDADES
(N_ID_NACIONALIDAD   ASC);



ALTER TABLE CESEC_NACIONALIDADES
	ADD CONSTRAINT  SYS_C00130116 PRIMARY KEY (N_ID_NACIONALIDAD);



CREATE TABLE CESEC_NIVEL_AVANCES
(
	N_ID_NIVEL_AVANCE    NUMBER(6) CONSTRAINT SYS_C00130117 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(56 BYTE) NULL ,
	S_DESC_CORTO         VARCHAR2(50 BYTE) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_NIVEL_AVANCES ON CESEC_NIVEL_AVANCES
(N_ID_NIVEL_AVANCE   ASC);



ALTER TABLE CESEC_NIVEL_AVANCES
	ADD CONSTRAINT  XPKCESEC_NIVEL_AVANCES PRIMARY KEY (N_ID_NIVEL_AVANCE);



CREATE TABLE CESEC_NIVEL_ESCOLARES
(
	N_ID_NIVEL_ESCOLAR   NUMBER(3) CONSTRAINT SYS_C00130119 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(15 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(56 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_SW_TC_NIVEL_EDUCATIVO_ID NUMBER(3) NULL ,
	N_BDU_SNE_CVE_NIVEL_ESCOLAR NUMBER(3) NULL ,
	N_SC_NIVEL_EDUCATIVO_ID NUMBER(3) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_NIVEL_ESCOLARES ON CESEC_NIVEL_ESCOLARES
(N_ID_NIVEL_ESCOLAR   ASC);



ALTER TABLE CESEC_NIVEL_ESCOLARES
	ADD CONSTRAINT  XPKCESEC_NIVEL_ESCOLARES PRIMARY KEY (N_ID_NIVEL_ESCOLAR);



CREATE TABLE CESEC_OCUPACIONES
(
	N_ID_OCUPACION       NUMBER NOT NULL ,
	S_CLAVE              VARCHAR2(20) NULL ,
	S_DESCRIPCION        VARCHAR2(100) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_OPUPACION ON CESEC_OCUPACIONES
(N_ID_OCUPACION   ASC);



ALTER TABLE CESEC_OCUPACIONES
	ADD CONSTRAINT  XPKCESEC_OPUPACION PRIMARY KEY (N_ID_OCUPACION);



CREATE TABLE CESEC_PAISES
(
	N_ID_PAIS            NUMBER CONSTRAINT SYS_C00130121 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130122 NOT NULL ,
	N_ID_REGION          NUMBER NULL ,
	N_ID_SWM             NUMBER NULL 
);



CREATE UNIQUE INDEX TC_PAIS_PK ON CESEC_PAISES
(N_ID_PAIS   ASC);



ALTER TABLE CESEC_PAISES
	ADD CONSTRAINT  TC_PAIS_PK PRIMARY KEY (N_ID_PAIS);



CREATE TABLE CESEC_PARENTESCOS
(
	N_ID_PARENTESCO      NUMBER CONSTRAINT SYS_C00130124 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130125 NOT NULL 
);



CREATE UNIQUE INDEX TC_PARENTESCO_PK ON CESEC_PARENTESCOS
(N_ID_PARENTESCO   ASC);



ALTER TABLE CESEC_PARENTESCOS
	ADD CONSTRAINT  TC_PARENTESCO_PK PRIMARY KEY (N_ID_PARENTESCO);



CREATE  INDEX TC_PARENTESCO_UK ON CESEC_PARENTESCOS
(S_CLAVE   ASC);



CREATE TABLE CESEC_PASOS_TRANSFERENCIA
(
	N_ID_PASO            NUMBER(9) NOT NULL ,
	S_DESCRIPCION        VARCHAR2(50) NULL ,
	N_ACTIVO             NUMBER(1) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PASOS_TRANSFERENCIA ON CESEC_PASOS_TRANSFERENCIA
(N_ID_PASO   ASC);



ALTER TABLE CESEC_PASOS_TRANSFERENCIA
	ADD CONSTRAINT  XPKCESEC_PASOS_TRANSFERENCIA PRIMARY KEY (N_ID_PASO);



CREATE TABLE CESEC_PERIODO_EVALUACIONES
(
	D_FECHA_INICIO       DATE NULL ,
	D_FECHA_FIN          DATE NULL ,
	D_FECHA_CREACION     DATE NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ID_MODALIDAD_PERIODO NUMBER(19) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PERIODO_EVALUACIONES ON CESEC_PERIODO_EVALUACIONES
(N_ID_MODALIDAD_PERIODO   ASC);



ALTER TABLE CESEC_PERIODO_EVALUACIONES
	ADD CONSTRAINT  XPKCESEC_PERIODO_EVALUACIONES PRIMARY KEY (N_ID_MODALIDAD_PERIODO);



CREATE TABLE CESEC_PERIODO_INASISTENCIAS
(
	N_ID_PERIODO         NUMBER(9) CONSTRAINT SYS_C00130127 NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130128 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130129 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130130 NOT NULL ,
	N_INASISTENCIA       NUMBER NULL ,
	N_ID_TIPO_GRUPO      NUMBER NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PERIODO_INASISTENCIAS ON CESEC_PERIODO_INASISTENCIAS
(N_ID_PERIODO   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_GRADO_ESCOLAR   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_PERIODO_INASISTENCIAS
	ADD CONSTRAINT  XPKCESEC_PERIODO_INASISTENCIAS PRIMARY KEY (N_ID_PERIODO,N_ID_CICLO_ESCOLAR,N_ID_GRADO_ESCOLAR,N_ID_ALUMNO);



CREATE TABLE CESEC_PERIODOS
(
	N_ID_PERIODO         NUMBER(9) CONSTRAINT SYS_C00130132 NOT NULL ,
	S_DESC_PREESCOLAR    VARCHAR2(15 BYTE) NULL ,
	S_DESC_COMPRENSION_LECTORA VARCHAR2(150 BYTE) NULL ,
	S_DESC_EVALUACION    VARCHAR(35) NULL ,
	N_ID_NIVEL_ESCOLAR   NUMBER NULL ,
	N_NUMERO             INTEGER NULL ,
	S_MES_EVALUACION     VARCHAR2(15) NULL ,
	S_MESES_CUADRO_CONC  VARCHAR2(15) NULL ,
	N_ID_TIPO_PERIODO    NUMBER(9) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PERIODOS ON CESEC_PERIODOS
(N_ID_PERIODO   ASC);



ALTER TABLE CESEC_PERIODOS
	ADD CONSTRAINT  XPKCESEC_PERIODOS PRIMARY KEY (N_ID_PERIODO);



CREATE TABLE CESEC_PERSONA_PLANTELES
(
	ID_PERSONA_PLANTEL   NUMBER(9) CONSTRAINT SYS_C00130134 NOT NULL ,
	N_ID_PERSONA         NUMBER(9) NULL ,
	N_ID_PLANTEL         NUMBER(9) CONSTRAINT SYS_C00130135 NOT NULL ,
	N_ID_FUNCION_REAL    NUMBER(3) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PERSONA_PLANTELES ON CESEC_PERSONA_PLANTELES
(ID_PERSONA_PLANTEL   ASC);



ALTER TABLE CESEC_PERSONA_PLANTELES
	ADD CONSTRAINT  XPKCESEC_PERSONA_PLANTELES PRIMARY KEY (ID_PERSONA_PLANTEL);



CREATE TABLE CESEC_PERSONAL
(
	N_ID_PERSONA         NUMBER CONSTRAINT SYS_C00131005 NOT NULL ,
	S_RFC                VARCHAR2(13 BYTE) NULL ,
	S_CURP               VARCHAR2(18 BYTE) NULL ,
	S_TIPO               VARCHAR2(40 BYTE) CONSTRAINT SYS_C00131008 NOT NULL ,
	S_CLAVE_PRESUPUESTAL VARCHAR2(7 BYTE) NULL ,
	S_NOMBRE             VARCHAR2(60 BYTE) CONSTRAINT SYS_C00131010 NOT NULL ,
	S_PRIMER_APELLIDO    VARCHAR2(60 BYTE) CONSTRAINT SYS_C00131011 NOT NULL ,
	S_SEGUNDO_APELLIDO   VARCHAR2(60 BYTE) NULL ,
	N_ID_SW_PERSONA      NUMBER(15) NULL ,
	N_ID_SEXO            NUMBER(15) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX CESEC_PERSONA_PK ON CESEC_PERSONAL
(N_ID_PERSONA   ASC);



ALTER TABLE CESEC_PERSONAL
	ADD CONSTRAINT  CESEC_PERSONA_PK PRIMARY KEY (N_ID_PERSONA);



CREATE TABLE CESEC_PLAN_ESTUDIO_MATERIAS
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130137 NOT NULL ,
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130138 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130139 NOT NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PLAN_ESTUDIO_MATERIAS ON CESEC_PLAN_ESTUDIO_MATERIAS
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_PLAN_ESTUDIO_MATERIAS
	ADD CONSTRAINT  XPKCESEC_PLAN_ESTUDIO_MATERIAS PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_PLAN_ESTUDIOS
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130141 NOT NULL ,
	N_ANIO               NUMBER(4) NULL ,
	S_DESC_CORTA         VARCHAR2(30 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	N_NUM_PERIODO        NUMBER(1) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PLAN_ESTUDIOS ON CESEC_PLAN_ESTUDIOS
(N_ID_PLAN_ESTUDIOS   ASC);



ALTER TABLE CESEC_PLAN_ESTUDIOS
	ADD CONSTRAINT  XPKCESEC_PLAN_ESTUDIOS PRIMARY KEY (N_ID_PLAN_ESTUDIOS);



CREATE TABLE CESEC_PLANTEL_INCIDENCIAS
(
	N_ID_PLANTEL_INCIDENCIA NUMBER(19) CONSTRAINT SYS_C00130143 NOT NULL ,
	N_ID_PERSONA         NUMBER(9) NULL ,
	S_DESCRIPCION        VARCHAR2(4000 BYTE) NULL ,
	S_FOLIO              VARCHAR2(255 BYTE) NULL ,
	S_TEXTO              VARCHAR2(255 BYTE) NULL ,
	N_ESTATUS_INCIDENCIA NUMBER(1) NULL ,
	N_ACTIVO             VARCHAR2(255 BYTE) NOT NULL ,
	S_USUARIO_CREACION   VARCHAR2(255 BYTE) NULL ,
	D_FECHA_CREACION     DATE NULL ,
	D_FECHA_INCIDENCIA   DATE NULL ,
	N_ID_ESCUELA         NUMBER(9) NOT NULL ,
	N_ID_TIPO_INCIDENCIA NUMBER NOT NULL ,
	N_ID_ESTATUS_INCIDENCIA NUMBER NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PLANTEL_INCIDENCIAS ON CESEC_PLANTEL_INCIDENCIAS
(N_ID_PLANTEL_INCIDENCIA   ASC);



ALTER TABLE CESEC_PLANTEL_INCIDENCIAS
	ADD CONSTRAINT  XPKCESEC_PLANTEL_INCIDENCIAS PRIMARY KEY (N_ID_PLANTEL_INCIDENCIA);



CREATE TABLE CESEC_PRE_EVAL_CAMPO_FORMATIVO
(
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130147 NOT NULL ,
	N_ID_PERIODO         NUMBER(9) CONSTRAINT SYS_C00130148 NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) CONSTRAINT SYS_C00130149 NOT NULL ,
	N_ID_MATERIA         NUMBER(9) CONSTRAINT SYS_C00130150 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130151 NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) CONSTRAINT SYS_C00130152 NOT NULL ,
	S_AVANCES            VARCHAR2(18 BYTE) NULL ,
	N_INASISTENCIAS      NUMBER(2) NULL 
);



CREATE UNIQUE INDEX PKCESEC_PRE_EVAL_CAMPO_FORMAT ON CESEC_PRE_EVAL_CAMPO_FORMATIVO
(N_ID_CICLO_ESCOLAR   ASC,N_ID_PERIODO   ASC,N_ID_PLAN_ESTUDIOS   ASC,N_ID_MATERIA   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_PRE_EVAL_CAMPO_FORMATIVO
	ADD CONSTRAINT  PKCESEC_PRE_EVAL_CAMPO_FORMAT PRIMARY KEY (N_ID_CICLO_ESCOLAR,N_ID_PERIODO,N_ID_PLAN_ESTUDIOS,N_ID_MATERIA,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_PRE_EVAL_OBSERVACIONES
(
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) CONSTRAINT SYS_C00130154 NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) CONSTRAINT SYS_C00130155 NOT NULL ,
	S_OBSERVACIONES      VARCHAR2(1024 BYTE) NULL 
);



CREATE UNIQUE INDEX PKCESEC_PRE_EVAL_OBSERVACIONES ON CESEC_PRE_EVAL_OBSERVACIONES
(N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_PRE_EVAL_OBSERVACIONES
	ADD CONSTRAINT  PKCESEC_PRE_EVAL_OBSERVACIONES PRIMARY KEY (N_ID_CICLO_ESCOLAR,N_ID_ALUMNO);



CREATE TABLE CESEC_PROMEDIO_GRADO
(
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_ID_GRADO_ESCOLAR   NUMBER(6) NOT NULL ,
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NOT NULL ,
	N_CALIFICACION_PROMEDIO NUMBER(4,2) NULL ,
	D_ULTIMA_MODIFICACION DATE NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(18) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PROMEDIO_GRADO ON CESEC_PROMEDIO_GRADO
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC,N_ID_GRADO_ESCOLAR   ASC);



ALTER TABLE CESEC_PROMEDIO_GRADO
	ADD CONSTRAINT  XPKCESEC_PROMEDIO_GRADO PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO,N_ID_GRADO_ESCOLAR);



CREATE TABLE CESEC_PROMEDIO_NIVEL
(
	N_ID_PLAN_ESTUDIOS   NUMBER(9) NOT NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_CALIFICACION_PROMEDIO NUMBER(4,2) NULL ,
	D_ULTIMA_MODIFICACION DATE NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(18) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_PROMEDIO_NIVEL ON CESEC_PROMEDIO_NIVEL
(N_ID_PLAN_ESTUDIOS   ASC,N_ID_CICLO_ESCOLAR   ASC,N_ID_ALUMNO   ASC);



ALTER TABLE CESEC_PROMEDIO_NIVEL
	ADD CONSTRAINT  XPKCESEC_PROMEDIO_NIVEL PRIMARY KEY (N_ID_PLAN_ESTUDIOS,N_ID_CICLO_ESCOLAR,N_ID_ALUMNO);



CREATE TABLE CESEC_RESPONSABLE_FIRMAS
(
	N_ID_RESPONSABLE_FIRMA NUMBER(9) CONSTRAINT SYS_C00130157 NOT NULL ,
	N_ID_MODALIDAD       NUMBER(9) NULL ,
	N_ID_FUNCIONREAL     NUMBER(3) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_RESPONSABLE_FIRMAS ON CESEC_RESPONSABLE_FIRMAS
(N_ID_RESPONSABLE_FIRMA   ASC);



ALTER TABLE CESEC_RESPONSABLE_FIRMAS
	ADD CONSTRAINT  XPKCESEC_RESPONSABLE_FIRMAS PRIMARY KEY (N_ID_RESPONSABLE_FIRMA);



CREATE TABLE CESEC_SAID_CARGA
(
	N_ID_SAID_CARGA      NUMBER(9) NOT NULL ,
	S_NOMBRE_TABLA       VARCHAR2(100) NULL ,
	S_NOMBRE_ARCHIVO     VARCHAR2(250) NULL ,
	N_INTENTOS           NUMBER(3) NULL ,
	N_ID_CICLO_ESCOLAR   NUMERIC(9,0) NOT NULL ,
	N_COMPLETADO         NUMBER(1) NULL ,
	S_CRITICA            VARCHAR2(512) NULL ,
	S_NOMBRE_ARCHIVO_SAVE VARCHAR2(255) NULL ,
	S_NOMBRE_ARCHIVO_UP  VARCHAR2(250) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_SAID_CARGA ON CESEC_SAID_CARGA
(N_ID_SAID_CARGA   ASC);



ALTER TABLE CESEC_SAID_CARGA
	ADD CONSTRAINT  XPKCESEC_SAID_CARGA PRIMARY KEY (N_ID_SAID_CARGA);



CREATE TABLE CESEC_SECCIONES
(
	N_ID_SECCION         NUMBER(3) CONSTRAINT SYS_C00130159 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(120 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_SECCIONES ON CESEC_SECCIONES
(N_ID_SECCION   ASC);



ALTER TABLE CESEC_SECCIONES
	ADD CONSTRAINT  XPKCESEC_SECCIONES PRIMARY KEY (N_ID_SECCION);



CREATE TABLE CESEC_SEGUIMIENTO
(
	N_ID_SEGUIMIENTO     NUMBER NOT NULL ,
	S_COMENTARIO         VARCHAR2(255) NULL ,
	D_FECHA              DATE NULL ,
	S_USUARIO_CREACION   VARCHAR2(255) NULL ,
	S_NOMBRE_USUARIO     VARCHAR2(255) NULL ,
	D_FECHA_CREACION     DATE NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ID_PLANTEL_INCIDENCIA NUMBER(19) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_SEGUIMIENTO ON CESEC_SEGUIMIENTO
(N_ID_SEGUIMIENTO   ASC,N_ID_PLANTEL_INCIDENCIA   ASC);



ALTER TABLE CESEC_SEGUIMIENTO
	ADD CONSTRAINT  XPKCESEC_SEGUIMIENTO PRIMARY KEY (N_ID_SEGUIMIENTO,N_ID_PLANTEL_INCIDENCIA);



CREATE TABLE CESEC_SERVICIO_ESCUELAS
(
	N_ID_SERVICIO_ESCUELA NUMBER(3) CONSTRAINT SYS_C00130161 NOT NULL ,
	S_CLAVE              VARCHAR2(15 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130162 NOT NULL 
);



CREATE UNIQUE INDEX TC_SERVICIOESCUELA_PK ON CESEC_SERVICIO_ESCUELAS
(N_ID_SERVICIO_ESCUELA   ASC);



ALTER TABLE CESEC_SERVICIO_ESCUELAS
	ADD CONSTRAINT  TC_SERVICIOESCUELA_PK PRIMARY KEY (N_ID_SERVICIO_ESCUELA);



CREATE  INDEX TC_SERVICIOESCUELA_UK ON CESEC_SERVICIO_ESCUELAS
(S_CLAVE   ASC);



CREATE TABLE CESEC_SEXOS
(
	N_ID_SEXO            NUMBER CONSTRAINT SYS_C00130164 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130165 NOT NULL 
);



CREATE UNIQUE INDEX TC_SEXO_PK ON CESEC_SEXOS
(N_ID_SEXO   ASC);



ALTER TABLE CESEC_SEXOS
	ADD CONSTRAINT  TC_SEXO_PK PRIMARY KEY (N_ID_SEXO);



CREATE  INDEX TC_SEXO_UK ON CESEC_SEXOS
(S_CLAVE   ASC);



CREATE TABLE CESEC_SOSTENIMIENTO_ESCUELAS
(
	N_ID_SOSTENIMIENTO_ESCUELA NUMBER CONSTRAINT SYS_C00130167 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(250 BYTE) NULL ,
	N_ACTIVO             NUMBER NULL ,
	D_FECHA_CREACION     DATE NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL 
);



CREATE UNIQUE INDEX PKCESEC_SOSTENIMIENTO_ESCUELAS ON CESEC_SOSTENIMIENTO_ESCUELAS
(N_ID_SOSTENIMIENTO_ESCUELA   ASC);



ALTER TABLE CESEC_SOSTENIMIENTO_ESCUELAS
	ADD CONSTRAINT  PKCESEC_SOSTENIMIENTO_ESCUELAS PRIMARY KEY (N_ID_SOSTENIMIENTO_ESCUELA);



CREATE TABLE CESEC_TELEFONOS_PLANTELES
(
	N_ID_ESCUELA_TELEFONO NUMBER(6) CONSTRAINT SYS_C00130169 NOT NULL ,
	N_ID_TIPO_TELEFONO   NUMBER(3) CONSTRAINT SYS_C00130170 NOT NULL ,
	N_ID_ESCUELA         NUMBER(9) CONSTRAINT SYS_C00130171 NOT NULL ,
	S_NUMERO             VARCHAR2(20 BYTE) NULL ,
	S_COMENTARIO         VARCHAR2(156 BYTE) NULL 
);



CREATE UNIQUE INDEX TC_ESCUELATELEFONO_PK ON CESEC_TELEFONOS_PLANTELES
(N_ID_ESCUELA_TELEFONO   ASC,N_ID_TIPO_TELEFONO   ASC,N_ID_ESCUELA   ASC);



ALTER TABLE CESEC_TELEFONOS_PLANTELES
	ADD CONSTRAINT  TC_ESCUELATELEFONO_PK PRIMARY KEY (N_ID_ESCUELA_TELEFONO,N_ID_TIPO_TELEFONO,N_ID_ESCUELA);



CREATE TABLE CESEC_TIPO_ASENTAMIENTOS
(
	N_ID_TIPO_ASENTAMIENTO NUMBER(3) CONSTRAINT SYS_C00130173 NOT NULL ,
	S_NOMBRE             VARCHAR2(56 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_ASENTAMIENTOS ON CESEC_TIPO_ASENTAMIENTOS
(N_ID_TIPO_ASENTAMIENTO   ASC);



ALTER TABLE CESEC_TIPO_ASENTAMIENTOS
	ADD CONSTRAINT  XPKCESEC_TIPO_ASENTAMIENTOS PRIMARY KEY (N_ID_TIPO_ASENTAMIENTO);



CREATE TABLE CESEC_TIPO_CALENDARIOS
(
	N_ID_TIPO_CALENDARIO NUMBER(6) CONSTRAINT SYS_C00130175 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(15 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(56 BYTE) NULL ,
	N_NUM_DIAS           NUMBER NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_CALENDARIOS ON CESEC_TIPO_CALENDARIOS
(N_ID_TIPO_CALENDARIO   ASC);



ALTER TABLE CESEC_TIPO_CALENDARIOS
	ADD CONSTRAINT  XPKCESEC_TIPO_CALENDARIOS PRIMARY KEY (N_ID_TIPO_CALENDARIO);



CREATE TABLE CESEC_TIPO_ESCUELA
(
	N_ID_TIPO_ESCUELA    NUMBER(3) CONSTRAINT SYS_C00130177 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130178 NOT NULL 
);



CREATE UNIQUE INDEX TC_TIPOESCUELA_PK ON CESEC_TIPO_ESCUELA
(N_ID_TIPO_ESCUELA   ASC);



ALTER TABLE CESEC_TIPO_ESCUELA
	ADD CONSTRAINT  TC_TIPOESCUELA_PK PRIMARY KEY (N_ID_TIPO_ESCUELA);



CREATE  INDEX TC_TIPOESCUELA_UK ON CESEC_TIPO_ESCUELA
(S_CLAVE   ASC);



CREATE TABLE CESEC_TIPO_EXENCIONES
(
	N_ID_TIPO_EXENTO     NUMBER NOT NULL ,
	S_DESCRIPCION        VARCHAR2(150) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_EXEC ON CESEC_TIPO_EXENCIONES
(N_ID_TIPO_EXENTO   ASC);



ALTER TABLE CESEC_TIPO_EXENCIONES
	ADD CONSTRAINT  XPKCESEC_TIPO_EXEC PRIMARY KEY (N_ID_TIPO_EXENTO);



CREATE TABLE CESEC_TIPO_GRUPOS
(
	N_ID_TIPO_GRUPO      NUMBER CONSTRAINT SYS_C00130180 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(30 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_GRUPOS ON CESEC_TIPO_GRUPOS
(N_ID_TIPO_GRUPO   ASC);



ALTER TABLE CESEC_TIPO_GRUPOS
	ADD CONSTRAINT  XPKCESEC_TIPO_GRUPOS PRIMARY KEY (N_ID_TIPO_GRUPO);



CREATE TABLE CESEC_TIPO_INCIDENCIA
(
	N_ID_TIPO_INCIDENCIA NUMBER NOT NULL ,
	S_DESCRIPCION        VARCHAR2(20) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_INCIDENCIA ON CESEC_TIPO_INCIDENCIA
(N_ID_TIPO_INCIDENCIA   ASC);



ALTER TABLE CESEC_TIPO_INCIDENCIA
	ADD CONSTRAINT  XPKCESEC_TIPO_INCIDENCIA PRIMARY KEY (N_ID_TIPO_INCIDENCIA);



CREATE TABLE CESEC_TIPO_INCORPORACION_SEP
(
	N_ID_TIPO_INCORPORACION_SEP NUMBER(3) CONSTRAINT SYS_C00130182 NOT NULL ,
	S_CLAVE              VARCHAR2(20 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(100 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130183 NOT NULL 
);



CREATE UNIQUE INDEX TC_TIPOINCORPORACIONSEP_PK ON CESEC_TIPO_INCORPORACION_SEP
(N_ID_TIPO_INCORPORACION_SEP   ASC);



ALTER TABLE CESEC_TIPO_INCORPORACION_SEP
	ADD CONSTRAINT  TC_TIPOINCORPORACIONSEP_PK PRIMARY KEY (N_ID_TIPO_INCORPORACION_SEP);



CREATE  INDEX TC_TIPOINCORPORACIONSEP_UK ON CESEC_TIPO_INCORPORACION_SEP
(S_CLAVE   ASC);



CREATE TABLE CESEC_TIPO_PERIODO
(
	N_ID_TIPO_PERIODO    NUMBER(9) NOT NULL ,
	S_DESCRIPCION        VARCHAR2(35) NOT NULL ,
	N_ACTIVO             INTEGER NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_PERIODO ON CESEC_TIPO_PERIODO
(N_ID_TIPO_PERIODO   ASC);



ALTER TABLE CESEC_TIPO_PERIODO
	ADD CONSTRAINT  XPKCESEC_TIPO_PERIODO PRIMARY KEY (N_ID_TIPO_PERIODO);



CREATE TABLE CESEC_TIPO_REVALIDACION
(
	N_ID_TIPO_REVALIDACION NUMBER NOT NULL ,
	S_DESCRIPCION        VARCHAR(150) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TI ON CESEC_TIPO_REVALIDACION
(N_ID_TIPO_REVALIDACION   ASC);



ALTER TABLE CESEC_TIPO_REVALIDACION
	ADD CONSTRAINT  XPKCESEC_TI PRIMARY KEY (N_ID_TIPO_REVALIDACION);



CREATE TABLE CESEC_TIPO_SANGUINEOS
(
	N_ID_TIPO_SANGUINEO  NUMBER CONSTRAINT SYS_C00130185 NOT NULL ,
	S_DESCRIPCION        VARCHAR2(20 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TIPO_SANGUINEOS ON CESEC_TIPO_SANGUINEOS
(N_ID_TIPO_SANGUINEO   ASC);



ALTER TABLE CESEC_TIPO_SANGUINEOS
	ADD CONSTRAINT  XPKCESEC_TIPO_SANGUINEOS PRIMARY KEY (N_ID_TIPO_SANGUINEO);



CREATE TABLE CESEC_TIPO_TELEFONOS
(
	N_ID_TIPO_TELEFONO   NUMBER(3) CONSTRAINT SYS_C00130187 NOT NULL ,
	S_CLAVE              VARCHAR2(5 BYTE) NULL ,
	S_DESCRIPCION_LARGA  VARCHAR2(156 BYTE) NULL ,
	N_ACTIVO             NUMBER(1) CONSTRAINT SYS_C00130188 NOT NULL 
);



CREATE UNIQUE INDEX TC_TIPOTELEFONO_PK ON CESEC_TIPO_TELEFONOS
(N_ID_TIPO_TELEFONO   ASC);



ALTER TABLE CESEC_TIPO_TELEFONOS
	ADD CONSTRAINT  TC_TIPOTELEFONO_PK PRIMARY KEY (N_ID_TIPO_TELEFONO);



CREATE  INDEX TC_TIPOTELEFONO_UK ON CESEC_TIPO_TELEFONOS
(S_CLAVE   ASC);



CREATE TABLE CESEC_TRANSFERENCIA
(
	N_ID_TRANSFERENCIA   NUMBER(9) NOT NULL ,
	N_ID_ESCUELA_ORIGEN  NUMBER(9) NOT NULL ,
	N_ID_ESCUELA_DESTINO NUMBER(9) NOT NULL ,
	N_ID_ALUMNO          NUMBER(9) NOT NULL ,
	N_ACTIVO             NUMBER(1) NOT NULL ,
	N_ID_PASO            NUMBER(9) NOT NULL ,
	S_USUARIO_MODIFICACION VARCHAR2(20) NULL ,
	D_SOLICITUD          DATE NULL ,
	D_ULTIMO_MOVIMIENTO  DATE NULL ,
	S_CURP_SOLICITA      VARCHAR2(18) NOT NULL ,
	N_ID_MOTIVO          NUMBER NOT NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TRANSFERENCIA ON CESEC_TRANSFERENCIA
(N_ID_TRANSFERENCIA   ASC);



ALTER TABLE CESEC_TRANSFERENCIA
	ADD CONSTRAINT  XPKCESEC_TRANSFERENCIA PRIMARY KEY (N_ID_TRANSFERENCIA);



CREATE TABLE CESEC_TURNOS
(
	N_ID_TURNO           NUMBER(3) CONSTRAINT SYS_C00130190 NOT NULL ,
	S_DESC_CORTA         VARCHAR2(15 BYTE) NULL ,
	S_DESCRIPCION        VARCHAR2(56 BYTE) NULL 
);



CREATE UNIQUE INDEX XPKCESEC_TURNOS ON CESEC_TURNOS
(N_ID_TURNO   ASC);



ALTER TABLE CESEC_TURNOS
	ADD CONSTRAINT  XPKCESEC_TURNOS PRIMARY KEY (N_ID_TURNO);



CREATE TABLE CESEC_TURNOS_OPERANDO_ESCUELAS
(
	N_ID_OPERACION_PLANTEL_TURNOS NUMBER(9) CONSTRAINT SYS_C00130192 NOT NULL ,
	N_ID_MODALIDAD       NUMBER(9) NULL ,
	N_ID_ESCUELA         NUMBER(9) NULL ,
	N_ID_TURNO           NUMBER(3) CONSTRAINT SYS_C00130193 NOT NULL ,
	S_GRUPO_ATENCION     VARCHAR2(18 BYTE) NULL ,
	N_INGESTA            NUMBER(1) NULL 
);



CREATE UNIQUE INDEX PKCESEC_TURNOS_OPE_ESCUELAS ON CESEC_TURNOS_OPERANDO_ESCUELAS
(N_ID_OPERACION_PLANTEL_TURNOS   ASC);



ALTER TABLE CESEC_TURNOS_OPERANDO_ESCUELAS
	ADD CONSTRAINT  PKCESEC_TURNOS_OPE_ESCUELAS PRIMARY KEY (N_ID_OPERACION_PLANTEL_TURNOS);



ALTER TABLE CESEC_AL_BARRERA_APRENDIZAJES
	ADD (CONSTRAINT R_162 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_AL_BARRERA_APRENDIZAJES
	ADD (CONSTRAINT R_164 FOREIGN KEY (N_ID_BARRERA_APRENDIZAJE) REFERENCES CESEC_BARRERA_APRENDIZAJES (N_ID_BARRERA_APRENDIZAJE));



ALTER TABLE CESEC_ALUMNO_BARRERA_APOYOS
	ADD (CONSTRAINT R_163 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_ALUMNO_BARRERA_APOYOS
	ADD (CONSTRAINT R_165 FOREIGN KEY (N_ID_BARRERA_APOYO) REFERENCES CESEC_BARRERA_APOYOS (N_ID_BARRERA_APOYO));



ALTER TABLE CESEC_ALUMNO_CONTACTOS
	ADD (CONSTRAINT R_153 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNO_CONTACTOS
	ADD (CONSTRAINT R_154 FOREIGN KEY (N_ID_CONTACTO_ALUMNO) REFERENCES CESEC_CONTACTO_ALUMNOS (N_ID_CONTACTO_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNO_CONTACTOS
	ADD (CONSTRAINT R_303 FOREIGN KEY (N_ID_PARENTESCO) REFERENCES CESEC_PARENTESCOS (N_ID_PARENTESCO) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNO_LEC_EVALUA
	ADD (CONSTRAINT R_239 FOREIGN KEY (N_ID_LECTURA_EVALUACION) REFERENCES CESEC_LECTURA_EVALUACIONES (N_ID_LECTURA_EVALUACION));



ALTER TABLE CESEC_ALUMNO_LEC_EVALUA
	ADD (CONSTRAINT R_240 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_ALUMNO_RENAPO_CRITICA
	ADD (CONSTRAINT R_285 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT R_152 FOREIGN KEY (N_ID_SEXO) REFERENCES CESEC_SEXOS (N_ID_SEXO) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT R_160 FOREIGN KEY (N_ID_OTRA_NACIONALIDAD) REFERENCES CESEC_NACIONALIDADES (N_ID_NACIONALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT R_201 FOREIGN KEY (N_ID_EF_NACIMIENTO) REFERENCES CESEC_ENTIDAD_FEDERATIVAS (N_ID_ENT_FEDERATIVA));



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT CESEC_ALUMNOS_FK1 FOREIGN KEY (N_ID_MUNICIPIO) REFERENCES CESEC_MUNICIPIO_DELEGACIONES (N_ID_MUNICIPIOS_DELEGACIONES) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT R_265 FOREIGN KEY (N_ID_NACIONALIDAD) REFERENCES CESEC_NACIONALIDADES (N_ID_NACIONALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT R_266 FOREIGN KEY (N_ID_DIALECTO_INDIGENA) REFERENCES CESEC_DIALECTO_INDIGENAS (N_ID_DIALECTO_INDIGENA) ON DELETE SET NULL);



ALTER TABLE CESEC_ALUMNOS
	ADD (CONSTRAINT R_267 FOREIGN KEY (N_ID_ETNIA_INDIGENA) REFERENCES CESEC_ETNIA_INDIGENAS (N_ID_ETNIA_INDIGENA) ON DELETE SET NULL);



ALTER TABLE CESEC_ASIGNACION_FOLIOS
	ADD (CONSTRAINT R_219 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_ASIGNACION_FOLIOS
	ADD (CONSTRAINT R_220 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_AULAS
	ADD (CONSTRAINT R_304 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA) ON DELETE SET NULL);



ALTER TABLE CESEC_BARRERA_APOYOS
	ADD (CONSTRAINT R_301 FOREIGN KEY (N_ID_PARENT) REFERENCES CESEC_BARRERA_APOYOS (N_ID_BARRERA_APOYO) ON DELETE SET NULL);



ALTER TABLE CESEC_BARRERA_APRENDIZAJES
	ADD (CONSTRAINT R_192 FOREIGN KEY (N_ID_PARENT) REFERENCES CESEC_BARRERA_APRENDIZAJES (N_ID_BARRERA_APRENDIZAJE) ON DELETE SET NULL);



ALTER TABLE CESEC_BECAS
	ADD (CONSTRAINT R_229 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_BID
	ADD (CONSTRAINT R_208 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_BID
	ADD (CONSTRAINT R_187 FOREIGN KEY (N_ID_OPERACION_PLANTEL_TURNOS) REFERENCES CESEC_TURNOS_OPERANDO_ESCUELAS (N_ID_OPERACION_PLANTEL_TURNOS) ON DELETE SET NULL);



ALTER TABLE CESEC_BIOMETRICO_ALUMNOS
	ADD (CONSTRAINT R_241 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_CICLOE_TIPO_CAL
	ADD (CONSTRAINT R_151 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_CICLOE_TIPO_CAL
	ADD (CONSTRAINT R_119 FOREIGN KEY (N_ID_TIPO_CALENDARIO) REFERENCES CESEC_TIPO_CALENDARIOS (N_ID_TIPO_CALENDARIO));



ALTER TABLE CESEC_CODIGO_POSTALES
	ADD (CONSTRAINT R_264 FOREIGN KEY (N_ID_MUNICIPIOS_DELEGACIONES) REFERENCES CESEC_MUNICIPIO_DELEGACIONES (N_ID_MUNICIPIOS_DELEGACIONES) ON DELETE SET NULL);



ALTER TABLE CESEC_COL_COD_POSTALES
	ADD (CONSTRAINT R_225 FOREIGN KEY (N_ID_COLONIA) REFERENCES CESEC_COLONIAS (N_ID_COLONIA) ON DELETE SET NULL);



ALTER TABLE CESEC_COL_COD_POSTALES
	ADD (CONSTRAINT R_311 FOREIGN KEY (N_ID_CODIGO_POSTAL) REFERENCES CESEC_CODIGO_POSTALES (N_ID_CODIGO_POSTAL));



ALTER TABLE CESEC_COLONIAS
	ADD (CONSTRAINT R_226 FOREIGN KEY (N_ID_MUNICIPIOS_DELEGACIONES) REFERENCES CESEC_MUNICIPIO_DELEGACIONES (N_ID_MUNICIPIOS_DELEGACIONES) ON DELETE SET NULL);



ALTER TABLE CESEC_CONF_MAT_NO_APLICA
	ADD (CONSTRAINT R_56 FOREIGN KEY (N_ID_ASIGNATURA) REFERENCES CESEC_MATERIAS (N_ID_MATERIA));



ALTER TABLE CESEC_CONF_MAT_NO_APLICA
	ADD (CONSTRAINT R_217 FOREIGN KEY (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) REFERENCES CESEC_ESC_MODAL_PLN_EST (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_CONF_MAT_NO_APLICA
	ADD (CONSTRAINT R_256 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_176 FOREIGN KEY (N_ID_ESCOLARIDAD) REFERENCES CESEC_ESCOLARIDADES (N_ID_ESCOLARIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_189 FOREIGN KEY (N_ID_SEXO) REFERENCES CESEC_SEXOS (N_ID_SEXO) ON DELETE SET NULL);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_197 FOREIGN KEY (N_ID_PAIS) REFERENCES CESEC_PAISES (N_ID_PAIS) ON DELETE SET NULL);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_203 FOREIGN KEY (N_ID_NACIONALIDAD) REFERENCES CESEC_NACIONALIDADES (N_ID_NACIONALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_247 FOREIGN KEY (N_ID_DOMICILIO) REFERENCES CESEC_DOMICILIOS (N_ID_DOMICILIO) ON DELETE SET NULL);



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_172 FOREIGN KEY (N_ID_DIALECTO_INDIGENA) REFERENCES CESEC_DIALECTO_INDIGENAS (N_ID_DIALECTO_INDIGENA));



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_173 FOREIGN KEY (N_ID_ETNIA_INDIGENA) REFERENCES CESEC_ETNIA_INDIGENAS (N_ID_ETNIA_INDIGENA));



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_174 FOREIGN KEY (N_ID_TIPO_SANGUINEO) REFERENCES CESEC_TIPO_SANGUINEOS (N_ID_TIPO_SANGUINEO));



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_175 FOREIGN KEY (N_ID_EF_NACIMIENTO) REFERENCES CESEC_ENTIDAD_FEDERATIVAS (N_ID_ENT_FEDERATIVA));



ALTER TABLE CESEC_CONTACTO_ALUMNOS
	ADD (CONSTRAINT R_176 FOREIGN KEY (N_ID_OCUPACION) REFERENCES CESEC_OCUPACIONES (N_ID_OCUPACION));



ALTER TABLE CESEC_DOCENTE_GRUPOS
	ADD (CONSTRAINT R_210 FOREIGN KEY (N_ID_GRUPO) REFERENCES CESEC_GRUPOS (N_ID_GRUPO) ON DELETE SET NULL);



ALTER TABLE CESEC_DOMICILIOS
	ADD (CONSTRAINT R_245 FOREIGN KEY (N_ID_COLONIA) REFERENCES CESEC_COLONIAS (N_ID_COLONIA) ON DELETE SET NULL);



ALTER TABLE CESEC_DOMICILIOS
	ADD (CONSTRAINT R_246 FOREIGN KEY (N_ID_TIPO_ASENTAMIENTO) REFERENCES CESEC_TIPO_ASENTAMIENTOS (N_ID_TIPO_ASENTAMIENTO) ON DELETE SET NULL);



ALTER TABLE CESEC_DOMICILIOS
	ADD (CONSTRAINT R_270 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_ENFASIS_MATERIAS
	ADD (CONSTRAINT R_145 FOREIGN KEY (N_ID_MATERIA) REFERENCES CESEC_MATERIAS (N_ID_MATERIA));



ALTER TABLE CESEC_ENFASIS_MATERIAS
	ADD (CONSTRAINT R_146 FOREIGN KEY (N_ID_ENFASIS_TALLER) REFERENCES CESEC_ENFASIS_TALLER (N_ID_ENFASIS_TALLER));



ALTER TABLE CESEC_ENTIDAD_FEDERATIVAS
	ADD (CONSTRAINT R_263 FOREIGN KEY (N_ID_PAIS) REFERENCES CESEC_PAISES (N_ID_PAIS) ON DELETE SET NULL);



ALTER TABLE CESEC_ESC_MODAL_PLN_EST
	ADD (CONSTRAINT R_185 FOREIGN KEY (N_ID_ESCUELA, N_ID_MODALIDAD) REFERENCES CESEC_ESCUELA_MODALIDADES (N_ID_ESCUELA, N_ID_MODALIDAD));



ALTER TABLE CESEC_ESC_MODAL_PLN_EST
	ADD (CONSTRAINT R_199 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_ESCUELA_MODALIDADES
	ADD (CONSTRAINT R_177 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA));



ALTER TABLE CESEC_ESCUELA_MODALIDADES
	ADD (CONSTRAINT R_213 FOREIGN KEY (N_ID_MODALIDAD) REFERENCES CESEC_MODALIDADES (N_ID_MODALIDAD));



ALTER TABLE CESEC_ESCUELAS
	ADD (CONSTRAINT R_178 FOREIGN KEY (N_ID_TIPO_INCORPORACION_SEP) REFERENCES CESEC_TIPO_INCORPORACION_SEP (N_ID_TIPO_INCORPORACION_SEP));



ALTER TABLE CESEC_ESCUELAS
	ADD (CONSTRAINT R_180 FOREIGN KEY (N_ID_TIPO_ESCUELA) REFERENCES CESEC_TIPO_ESCUELA (N_ID_TIPO_ESCUELA));



ALTER TABLE CESEC_ESCUELAS
	ADD (CONSTRAINT R_182 FOREIGN KEY (N_ID_SERVICIO_ESCUELA) REFERENCES CESEC_SERVICIO_ESCUELAS (N_ID_SERVICIO_ESCUELA));



ALTER TABLE CESEC_ESCUELAS
	ADD (CONSTRAINT CESEC_ESCUELAS_FK1 FOREIGN KEY (N_ID_SOSTENIMIENTO_ESCUELA) REFERENCES CESEC_SOSTENIMIENTO_ESCUELAS (N_ID_SOSTENIMIENTO_ESCUELA));



ALTER TABLE CESEC_ESTADISTICA_CUADRO_CONS
	ADD (CONSTRAINT R_151 FOREIGN KEY (N_ID_GRUPO) REFERENCES CESEC_GRUPOS (N_ID_GRUPO));



ALTER TABLE CESEC_ESTADISTICA_CUADRO_CONS
	ADD (CONSTRAINT R_153 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_EVAL_CERTIFICACIONES
	ADD (CONSTRAINT R_208 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_EVAL_CERTIFICACIONES
	ADD (CONSTRAINT R_209 FOREIGN KEY (N_ID_MATERIA) REFERENCES CESEC_MATERIAS (N_ID_MATERIA));



ALTER TABLE CESEC_EVAL_CERTIFICACIONES
	ADD (CONSTRAINT R_210 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_EVAL_CERTIFICACIONES
	ADD (CONSTRAINT R_211 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_EVAL_CERTIFICACIONES
	ADD (CONSTRAINT R_212 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD (CONSTRAINT R_26 FOREIGN KEY (N_ID_NIVEL_AVANCE) REFERENCES CESEC_NIVEL_AVANCES (N_ID_NIVEL_AVANCE));



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD (CONSTRAINT R_218 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD (CONSTRAINT R_271 FOREIGN KEY (N_ID_COMPRENSION_ASPECTO) REFERENCES CESEC_COMPRENSION_ASPECTOS (N_ID_COMPRENSION_ASPECTO));



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD (CONSTRAINT R_272 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD (CONSTRAINT R_273 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_EVAL_COMPRENSIONES
	ADD (CONSTRAINT R_274 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVAL_EXAMEN_GRAL_C
	ADD (CONSTRAINT R_188 FOREIGN KEY (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) REFERENCES CESEC_ESC_MODAL_PLN_EST (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD));



ALTER TABLE CESEC_EVAL_EXAMEN_GRAL_C
	ADD (CONSTRAINT R_212 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_EVAL_EXAMEN_GRAL_C
	ADD (CONSTRAINT R_216 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVAL_HERR_FUNDAMENTALES
	ADD (CONSTRAINT R_113 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_EVAL_HERR_FUNDAMENTALES
	ADD (CONSTRAINT R_209 FOREIGN KEY (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR) REFERENCES CESEC_EVALUACION_MATERIA (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVAL_REVALIDACIONES
	ADD (CONSTRAINT R_165 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_EVAL_REVALIDACIONES
	ADD (CONSTRAINT R_166 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_EVAL_REVALIDACIONES
	ADD (CONSTRAINT R_167 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVAL_REVALIDACIONES
	ADD (CONSTRAINT R_168 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_EVAL_REVALIDACIONES
	ADD (CONSTRAINT R_169 FOREIGN KEY (N_ID_TIPO_REVALIDACION) REFERENCES CESEC_TIPO_REVALIDACION (N_ID_TIPO_REVALIDACION));



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD (CONSTRAINT R_159 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD (CONSTRAINT R_160 FOREIGN KEY (N_ID_MATERIA) REFERENCES CESEC_MATERIAS (N_ID_MATERIA));



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD (CONSTRAINT R_161 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD (CONSTRAINT R_162 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD (CONSTRAINT R_163 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVALUACION_EXECIONES
	ADD (CONSTRAINT R_164 FOREIGN KEY (N_ID_TIPO_EXENTO) REFERENCES CESEC_TIPO_EXENCIONES (N_ID_TIPO_EXENTO));



ALTER TABLE CESEC_EVALUACION_EXTRAS
	ADD (CONSTRAINT R_205 FOREIGN KEY (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR) REFERENCES CESEC_EVALUACION_MATERIA (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVALUACION_EXTRAS
	ADD (CONSTRAINT R_219 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA) ON DELETE SET NULL);



ALTER TABLE CESEC_EVALUACION_EXTRAS
	ADD (CONSTRAINT R_213 FOREIGN KEY (N_ID_PERIODO_APLICA) REFERENCES CESEC_PERIODOS (N_ID_PERIODO) ON DELETE SET NULL);



ALTER TABLE CESEC_EVALUACION_EXTRAS
	ADD (CONSTRAINT R_214 FOREIGN KEY (N_ID_CICLO_ESOLAR_APLICA) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_EVALUACION_MATERIA
	ADD (CONSTRAINT R_200 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_EVALUACION_MATERIA
	ADD (CONSTRAINT R_260 FOREIGN KEY (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_GRADO_ESCOLAR) REFERENCES CESEC_PLAN_ESTUDIO_MATERIAS (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_EVALUACION_MATERIA
	ADD (CONSTRAINT R_261 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_EVALUACION_REGULARES
	ADD (CONSTRAINT R_89 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_EVALUACION_REGULARES
	ADD (CONSTRAINT R_202 FOREIGN KEY (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR) REFERENCES CESEC_EVALUACION_MATERIA (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_FOLIO_CARTILLAS
	ADD (CONSTRAINT R_230 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_FOLIO_CARTILLAS
	ADD (CONSTRAINT R_231 FOREIGN KEY (N_ID_GRUPO) REFERENCES CESEC_GRUPOS (N_ID_GRUPO) ON DELETE SET NULL);



ALTER TABLE CESEC_FOLIO_CARTILLAS
	ADD (CONSTRAINT R_232 FOREIGN KEY (N_ID_NIVEL_ESCOLAR) REFERENCES CESEC_NIVEL_ESCOLARES (N_ID_NIVEL_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_FOLIO_CARTILLAS
	ADD (CONSTRAINT R_233 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_FOLIO_CARTILLAS
	ADD (CONSTRAINT R_234 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA) ON DELETE SET NULL);



ALTER TABLE CESEC_FOTO_ALUMNO
	ADD (CONSTRAINT R_244 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_GASTO_ESCUELA
	ADD (CONSTRAINT R_227 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA) ON DELETE SET NULL);



ALTER TABLE CESEC_GASTO_ESCUELA
	ADD (CONSTRAINT R_228 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_GRADO_ESCOLARES
	ADD (CONSTRAINT R_252 FOREIGN KEY (N_ID_NIVEL_ESCOLAR) REFERENCES CESEC_NIVEL_ESCOLARES (N_ID_NIVEL_ESCOLAR));



ALTER TABLE CESEC_GRUPOS
	ADD (CONSTRAINT R_172 FOREIGN KEY (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) REFERENCES CESEC_ESC_MODAL_PLN_EST (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_GRUPOS
	ADD (CONSTRAINT R_173 FOREIGN KEY (N_ID_SECCION) REFERENCES CESEC_SECCIONES (N_ID_SECCION));



ALTER TABLE CESEC_GRUPOS
	ADD (CONSTRAINT R_254 FOREIGN KEY (N_ID_TURNO) REFERENCES CESEC_TURNOS (N_ID_TURNO) ON DELETE SET NULL);



ALTER TABLE CESEC_GRUPOS
	ADD (CONSTRAINT R_255 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_GRUPOS
	ADD (CONSTRAINT R_257 FOREIGN KEY (N_ID_TIPO_GRUPO) REFERENCES CESEC_TIPO_GRUPOS (N_ID_TIPO_GRUPO) ON DELETE SET NULL);



ALTER TABLE CESEC_GRUPOS
	ADD (CONSTRAINT R_313 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_HISTORICO_EVAL_EXTRAS
	ADD (CONSTRAINT R_198 FOREIGN KEY (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR) REFERENCES CESEC_EVALUACION_MATERIA (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_HISTORICO_EVAL_EXTRAS
	ADD (CONSTRAINT R_199 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA) ON DELETE SET NULL);



ALTER TABLE CESEC_HISTORICO_EVAL_EXTRAS
	ADD (CONSTRAINT R_201 FOREIGN KEY (N_ID_PERIODO_APLICA) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_HISTORICO_EVAL_EXTRAS
	ADD (CONSTRAINT R_202 FOREIGN KEY (N_ID_CICLO_ESCOLAR_APLICA) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_INFO_SALUD
	ADD (CONSTRAINT R_192 FOREIGN KEY (N_ID_DERECHOHABIENCIA) REFERENCES CESEC_DERECHO_HABIENCIAS (N_ID_DERECHOHABIENCIA));



ALTER TABLE CESEC_INFO_SALUD
	ADD (CONSTRAINT R_242 FOREIGN KEY (N_ID_TIPO_SANGUINEO) REFERENCES CESEC_TIPO_SANGUINEOS (N_ID_TIPO_SANGUINEO));



ALTER TABLE CESEC_INFO_SALUD
	ADD (CONSTRAINT R_243 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_INSCRIPCION_ALUMNOS
	ADD (CONSTRAINT R_60 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_INSCRIPCION_ALUMNOS
	ADD (CONSTRAINT R_167 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_INSCRIPCION_ALUMNOS
	ADD (CONSTRAINT R_186 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_INSCRIPCION_ALUMNOS
	ADD (CONSTRAINT R_283 FOREIGN KEY (N_ID_OPERACION_PLANTEL_TURNOS) REFERENCES CESEC_TURNOS_OPERANDO_ESCUELAS (N_ID_OPERACION_PLANTEL_TURNOS) ON DELETE SET NULL);



ALTER TABLE CESEC_INSCRIPCION_ALUMNOS
	ADD (CONSTRAINT R_204 FOREIGN KEY (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) REFERENCES CESEC_ESC_MODAL_PLN_EST (N_ID_ESCUELA, N_ID_PLAN_ESTUDIOS, N_ID_MODALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_INSCRIPCION_GRUPOS
	ADD (CONSTRAINT R_316 FOREIGN KEY (N_ID_GRUPO) REFERENCES CESEC_GRUPOS (N_ID_GRUPO) ON DELETE SET NULL);



ALTER TABLE CESEC_INSCRIPCION_GRUPOS
	ADD (CONSTRAINT R_317 FOREIGN KEY (N_ID_INSCRIPCION_ALUMNO) REFERENCES CESEC_INSCRIPCION_ALUMNOS (N_ID_INSCRIPCION_ALUMNO));



ALTER TABLE CESEC_LECTURA_EVALUACIONES
	ADD (CONSTRAINT R_235 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_LECTURA_EVALUACIONES
	ADD (CONSTRAINT R_237 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO) ON DELETE SET NULL);



ALTER TABLE CESEC_LECTURA_EVALUACIONES
	ADD (CONSTRAINT R_238 FOREIGN KEY (N_ID_LECTURA_HABILIDAD) REFERENCES CESEC_LECTURA_HABILIDADES (N_ID_LECTURA_HABILIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_LECTURA_EVALUACIONES
	ADD (CONSTRAINT R_307 FOREIGN KEY (N_ID_GRUPO) REFERENCES CESEC_GRUPOS (N_ID_GRUPO) ON DELETE SET NULL);



ALTER TABLE CESEC_MAT_GPO_TALLER_ARTES
	ADD (CONSTRAINT R_259 FOREIGN KEY (N_ID_GRUPO) REFERENCES CESEC_GRUPOS (N_ID_GRUPO));



ALTER TABLE CESEC_MAT_GPO_TALLER_ARTES
	ADD (CONSTRAINT R_148 FOREIGN KEY (N_ID_ENFASIS_TALLER, N_ID_MATERIA) REFERENCES CESEC_ENFASIS_MATERIAS (N_ID_ENFASIS_TALLER, N_ID_MATERIA));



ALTER TABLE CESEC_MATERIAS
	ADD (CONSTRAINT R_5 FOREIGN KEY (N_ID_BLOQUE_ASIGNATURA) REFERENCES CESEC_BLOQUE_MATERIAS (N_ID_BLOQUE_MATERIA));



ALTER TABLE CESEC_MATERIAS
	ADD (CONSTRAINT R_14 FOREIGN KEY (N_ID_FORMA_CALIFICA_MATERIA) REFERENCES CESEC_FORMA_CALIF_MATERIAS (N_ID_FORMA_CALIFICA_MATERIA));



ALTER TABLE CESEC_MODALIDAD_PERIODOS
	ADD (CONSTRAINT R_279 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO) ON DELETE SET NULL);



ALTER TABLE CESEC_MODALIDAD_PERIODOS
	ADD (CONSTRAINT R_280 FOREIGN KEY (N_ID_MODALIDAD) REFERENCES CESEC_MODALIDADES (N_ID_MODALIDAD));



ALTER TABLE CESEC_MODALIDAD_PERIODOS
	ADD (CONSTRAINT R_281 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR) ON DELETE SET NULL);



ALTER TABLE CESEC_MODALIDADES
	ADD (CONSTRAINT R_41 FOREIGN KEY (N_ID_NIVEL_ESCOLAR) REFERENCES CESEC_NIVEL_ESCOLARES (N_ID_NIVEL_ESCOLAR));



ALTER TABLE CESEC_MODALIDADES
	ADD (CONSTRAINT R_230 FOREIGN KEY (N_ID_FAMILIA_MODALIDAD) REFERENCES CESEC_FAMILIA_MODALIDADES (N_ID_FAMILIA_MODALIDAD));



ALTER TABLE CESEC_MOTIVOS
	ADD (CONSTRAINT R_268 FOREIGN KEY (N_ID_TIPO_MOV_INSCRIPCION) REFERENCES CESEC_INSCRIPCION_TIPO_MOV (N_ID_TIPO_MOV_INSCRIPCION) ON DELETE SET NULL);



ALTER TABLE CESEC_MOVIMIENTO_ALUMNOS
	ADD (CONSTRAINT R_211 FOREIGN KEY (N_ID_INSCRIPCION_ALUMNO) REFERENCES CESEC_INSCRIPCION_ALUMNOS (N_ID_INSCRIPCION_ALUMNO) ON DELETE SET NULL);



ALTER TABLE CESEC_MOVIMIENTO_ALUMNOS
	ADD (CONSTRAINT R_269 FOREIGN KEY (N_ID_MOTIVO) REFERENCES CESEC_MOTIVOS (N_ID_MOTIVO) ON DELETE SET NULL);



ALTER TABLE CESEC_MUNICIPIO_DELEGACIONES
	ADD (CONSTRAINT R_222 FOREIGN KEY (N_ID_ENT_FEDERATIVA) REFERENCES CESEC_ENTIDAD_FEDERATIVAS (N_ID_ENT_FEDERATIVA) ON DELETE SET NULL);



ALTER TABLE CESEC_PERIODO_EVALUACIONES
	ADD (CONSTRAINT R_207 FOREIGN KEY (N_ID_MODALIDAD_PERIODO) REFERENCES CESEC_MODALIDAD_PERIODOS (N_ID_MODALIDAD_PERIODO));



ALTER TABLE CESEC_PERIODO_INASISTENCIAS
	ADD (CONSTRAINT R_275 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_PERIODO_INASISTENCIAS
	ADD (CONSTRAINT R_276 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_PERIODO_INASISTENCIAS
	ADD (CONSTRAINT R_277 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_PERIODO_INASISTENCIAS
	ADD (CONSTRAINT R_278 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_PERIODOS
	ADD (CONSTRAINT CESEC_PERIODOS_FK1 FOREIGN KEY (N_ID_NIVEL_ESCOLAR) REFERENCES CESEC_NIVEL_ESCOLARES (N_ID_NIVEL_ESCOLAR));



ALTER TABLE CESEC_PERIODOS
	ADD (CONSTRAINT R_197 FOREIGN KEY (N_ID_TIPO_PERIODO) REFERENCES CESEC_TIPO_PERIODO (N_ID_TIPO_PERIODO) ON DELETE SET NULL);



ALTER TABLE CESEC_PERSONA_PLANTELES
	ADD (CONSTRAINT CESEC_PERSONA_PLANTELES_FK1 FOREIGN KEY (N_ID_PERSONA) REFERENCES CESEC_PERSONAL (N_ID_PERSONA));



ALTER TABLE CESEC_PERSONA_PLANTELES
	ADD (CONSTRAINT R_152 FOREIGN KEY (N_ID_PLANTEL) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA));



ALTER TABLE CESEC_PERSONA_PLANTELES
	ADD (CONSTRAINT R_185 FOREIGN KEY (N_ID_FUNCION_REAL) REFERENCES CESEC_FUNCION_REALES (N_ID_FUNCION_REAL) ON DELETE SET NULL);



ALTER TABLE CESEC_PERSONAL
	ADD (CONSTRAINT CESEC_PERSONAL_FK1 FOREIGN KEY (N_ID_SEXO) REFERENCES CESEC_SEXOS (N_ID_SEXO));



ALTER TABLE CESEC_PLAN_ESTUDIO_MATERIAS
	ADD (CONSTRAINT R_220 FOREIGN KEY (N_ID_MATERIA) REFERENCES CESEC_MATERIAS (N_ID_MATERIA));



ALTER TABLE CESEC_PLAN_ESTUDIO_MATERIAS
	ADD (CONSTRAINT R_306 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_PLAN_ESTUDIO_MATERIAS
	ADD (CONSTRAINT R_37 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_PLANTEL_INCIDENCIAS
	ADD (CONSTRAINT R_154 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA));



ALTER TABLE CESEC_PLANTEL_INCIDENCIAS
	ADD (CONSTRAINT R_156 FOREIGN KEY (N_ID_TIPO_INCIDENCIA) REFERENCES CESEC_TIPO_INCIDENCIA (N_ID_TIPO_INCIDENCIA));



ALTER TABLE CESEC_PLANTEL_INCIDENCIAS
	ADD (CONSTRAINT R_157 FOREIGN KEY (N_ID_ESTATUS_INCIDENCIA) REFERENCES CESEC_ESTATUS_INCIDENCIA (N_ID_ESTATUS_INCIDENCIA));



ALTER TABLE CESEC_PRE_EVAL_CAMPO_FORMATIVO
	ADD (CONSTRAINT R_207 FOREIGN KEY (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR) REFERENCES CESEC_EVALUACION_MATERIA (N_ID_PLAN_ESTUDIOS, N_ID_MATERIA, N_ID_CICLO_ESCOLAR, N_ID_ALUMNO, N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_PRE_EVAL_CAMPO_FORMATIVO
	ADD (CONSTRAINT R_91 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_PRE_EVAL_CAMPO_FORMATIVO
	ADD (CONSTRAINT R_92 FOREIGN KEY (N_ID_PERIODO) REFERENCES CESEC_PERIODOS (N_ID_PERIODO));



ALTER TABLE CESEC_PRE_EVAL_OBSERVACIONES
	ADD (CONSTRAINT R_96 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_PRE_EVAL_OBSERVACIONES
	ADD (CONSTRAINT R_94 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_PROMEDIO_GRADO
	ADD (CONSTRAINT R_203 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_PROMEDIO_GRADO
	ADD (CONSTRAINT R_204 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_PROMEDIO_GRADO
	ADD (CONSTRAINT R_205 FOREIGN KEY (N_ID_GRADO_ESCOLAR) REFERENCES CESEC_GRADO_ESCOLARES (N_ID_GRADO_ESCOLAR));



ALTER TABLE CESEC_PROMEDIO_GRADO
	ADD (CONSTRAINT R_206 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_PROMEDIO_NIVEL
	ADD (CONSTRAINT R_216 FOREIGN KEY (N_ID_PLAN_ESTUDIOS) REFERENCES CESEC_PLAN_ESTUDIOS (N_ID_PLAN_ESTUDIOS));



ALTER TABLE CESEC_PROMEDIO_NIVEL
	ADD (CONSTRAINT R_217 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_PROMEDIO_NIVEL
	ADD (CONSTRAINT R_218 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_RESPONSABLE_FIRMAS
	ADD (CONSTRAINT R_206 FOREIGN KEY (N_ID_MODALIDAD) REFERENCES CESEC_MODALIDADES (N_ID_MODALIDAD) ON DELETE SET NULL);



ALTER TABLE CESEC_RESPONSABLE_FIRMAS
	ADD (CONSTRAINT R_182 FOREIGN KEY (N_ID_FUNCIONREAL) REFERENCES CESEC_FUNCION_REALES (N_ID_FUNCION_REAL) ON DELETE SET NULL);



ALTER TABLE CESEC_SAID_CARGA
	ADD (CONSTRAINT R_221 FOREIGN KEY (N_ID_CICLO_ESCOLAR) REFERENCES CESEC_CICLO_ESCOLARES (N_ID_CICLO_ESCOLAR));



ALTER TABLE CESEC_SEGUIMIENTO
	ADD (CONSTRAINT R_170 FOREIGN KEY (N_ID_PLANTEL_INCIDENCIA) REFERENCES CESEC_PLANTEL_INCIDENCIAS (N_ID_PLANTEL_INCIDENCIA));



ALTER TABLE CESEC_TELEFONOS_PLANTELES
	ADD (CONSTRAINT R_141 FOREIGN KEY (N_ID_TIPO_TELEFONO) REFERENCES CESEC_TIPO_TELEFONOS (N_ID_TIPO_TELEFONO));



ALTER TABLE CESEC_TELEFONOS_PLANTELES
	ADD (CONSTRAINT R_143 FOREIGN KEY (N_ID_ESCUELA) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA));



ALTER TABLE CESEC_TRANSFERENCIA
	ADD (CONSTRAINT R_223 FOREIGN KEY (N_ID_ESCUELA_ORIGEN) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA));



ALTER TABLE CESEC_TRANSFERENCIA
	ADD (CONSTRAINT R_224 FOREIGN KEY (N_ID_ESCUELA_DESTINO) REFERENCES CESEC_ESCUELAS (N_ID_ESCUELA));



ALTER TABLE CESEC_TRANSFERENCIA
	ADD (CONSTRAINT R_225 FOREIGN KEY (N_ID_ALUMNO) REFERENCES CESEC_ALUMNOS (N_ID_ALUMNO));



ALTER TABLE CESEC_TRANSFERENCIA
	ADD (CONSTRAINT R_226 FOREIGN KEY (N_ID_PASO) REFERENCES CESEC_PASOS_TRANSFERENCIA (N_ID_PASO));



ALTER TABLE CESEC_TRANSFERENCIA
	ADD (CONSTRAINT R_229 FOREIGN KEY (N_ID_MOTIVO) REFERENCES CESEC_MOTIVOS (N_ID_MOTIVO));



ALTER TABLE CESEC_TURNOS_OPERANDO_ESCUELAS
	ADD (CONSTRAINT R_63 FOREIGN KEY (N_ID_TURNO) REFERENCES CESEC_TURNOS (N_ID_TURNO));



ALTER TABLE CESEC_TURNOS_OPERANDO_ESCUELAS
	ADD (CONSTRAINT R_253 FOREIGN KEY (N_ID_ESCUELA, N_ID_MODALIDAD) REFERENCES CESEC_ESCUELA_MODALIDADES (N_ID_ESCUELA, N_ID_MODALIDAD) ON DELETE SET NULL);



CREATE  TRIGGER  tD_CESEC_ALUMNOS AFTER DELETE ON CESEC_ALUMNOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_TRANSFERENCIA on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="0019281a", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_225", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ALUMNOS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_PROMEDIO_NIVEL on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_218", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_NIVEL
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_NIVEL,:%Old," = "," AND") */
        CESEC_PROMEDIO_NIVEL.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ALUMNOS because CESEC_PROMEDIO_NIVEL exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVAL_CERTIFICACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_211", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ALUMNOS because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_PROMEDIO_GRADO on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_204", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ALUMNOS because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVAL_REVALIDACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_166", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ALUMNOS because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVALUACION_EXECIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_162", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ALUMNOS because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_BIOMETRICO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BIOMETRICO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_241", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_BIOMETRICO_ALUMNOS
      SET
        /* %SetFK(CESEC_BIOMETRICO_ALUMNOS,NULL) */
        CESEC_BIOMETRICO_ALUMNOS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_BIOMETRICO_ALUMNOS,:%Old," = "," AND") */
        CESEC_BIOMETRICO_ALUMNOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_FOTO_ALUMNO on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOTO_ALUMNO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_244", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_FOTO_ALUMNO
      SET
        /* %SetFK(CESEC_FOTO_ALUMNO,NULL) */
        CESEC_FOTO_ALUMNO.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOTO_ALUMNO,:%Old," = "," AND") */
        CESEC_FOTO_ALUMNO.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVAL_EXAMEN_GRAL_C on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_EXAMEN_GRAL_C"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_212", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_EXAMEN_GRAL_C
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_EXAMEN_GRAL_C,:%Old," = "," AND") */
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_EVAL_EXAMEN_GRAL_C exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_ALUMNO_CONTACTOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_CONTACTOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_153", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_ALUMNO_CONTACTOS
      SET
        /* %SetFK(CESEC_ALUMNO_CONTACTOS,NULL) */
        CESEC_ALUMNO_CONTACTOS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNO_CONTACTOS,:%Old," = "," AND") */
        CESEC_ALUMNO_CONTACTOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_BECAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BECAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_229", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_BECAS
      SET
        /* %SetFK(CESEC_BECAS,NULL) */
        CESEC_BECAS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_BECAS,:%Old," = "," AND") */
        CESEC_BECAS.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_PRE_EVAL_OBSERVACIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_OBSERVACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_94", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_OBSERVACIONES
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_OBSERVACIONES,:%Old," = "," AND") */
        CESEC_PRE_EVAL_OBSERVACIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_PRE_EVAL_OBSERVACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVALUACION_MATERIA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_MATERIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_200", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_MATERIA,:%Old," = "," AND") */
        CESEC_EVALUACION_MATERIA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_EVALUACION_MATERIA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_FOLIO_CARTILLAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_230", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = "," AND") */
        CESEC_FOLIO_CARTILLAS.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_INFO_SALUD on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INFO_SALUD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_243", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_INFO_SALUD
      SET
        /* %SetFK(CESEC_INFO_SALUD,NULL) */
        CESEC_INFO_SALUD.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_INFO_SALUD,:%Old," = "," AND") */
        CESEC_INFO_SALUD.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_ALUMNO_LEC_EVALUA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_LEC_EVALUA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_240", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_LEC_EVALUA
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_LEC_EVALUA,:%Old," = "," AND") */
        CESEC_ALUMNO_LEC_EVALUA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_ALUMNO_LEC_EVALUA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_ALUMNO_BARRERA_APOYOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_BARRERA_APOYOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_163", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_BARRERA_APOYOS
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_BARRERA_APOYOS,:%Old," = "," AND") */
        CESEC_ALUMNO_BARRERA_APOYOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_ALUMNO_BARRERA_APOYOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_INSCRIPCION_ALUMNOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_60", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INSCRIPCION_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_INSCRIPCION_ALUMNOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_DOMICILIOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOMICILIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_270", FK_COLUMNS="N_ID_ALUMNO" */
    UPDATE CESEC_DOMICILIOS
      SET
        /* %SetFK(CESEC_DOMICILIOS,NULL) */
        CESEC_DOMICILIOS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOMICILIOS,:%Old," = "," AND") */
        CESEC_DOMICILIOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_AL_BARRERA_APRENDIZAJES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_AL_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_162", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_AL_BARRERA_APRENDIZAJES
      WHERE
        /*  %JoinFKPK(CESEC_AL_BARRERA_APRENDIZAJES,:%Old," = "," AND") */
        CESEC_AL_BARRERA_APRENDIZAJES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_AL_BARRERA_APRENDIZAJES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_PERIODO_INASISTENCIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_276", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_ALUMNO_RENAPO_CRITICA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_RENAPO_CRITICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_285", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_RENAPO_CRITICA
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_RENAPO_CRITICA,:%Old," = "," AND") */
        CESEC_ALUMNO_RENAPO_CRITICA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_ALUMNO_RENAPO_CRITICA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVAL_COMPRENSIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_272", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ALUMNOS because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ALUMNOS AFTER UPDATE ON CESEC_ALUMNOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_TRANSFERENCIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="001ca321", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_225", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_PROMEDIO_NIVEL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_218", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_NIVEL
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_NIVEL,:%Old," = "," AND") */
        CESEC_PROMEDIO_NIVEL.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_PROMEDIO_NIVEL exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVAL_CERTIFICACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_211", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_PROMEDIO_GRADO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_204", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVAL_REVALIDACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_166", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVALUACION_EXECIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_162", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;
  END IF;

  /* CESEC_ALUMNOS  CESEC_BIOMETRICO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BIOMETRICO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_241", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_BIOMETRICO_ALUMNOS
      SET
        /* %SetFK(CESEC_BIOMETRICO_ALUMNOS,NULL) */
        CESEC_BIOMETRICO_ALUMNOS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_BIOMETRICO_ALUMNOS,:%Old," = ",",") */
        CESEC_BIOMETRICO_ALUMNOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* CESEC_ALUMNOS  CESEC_FOTO_ALUMNO on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOTO_ALUMNO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_244", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_FOTO_ALUMNO
      SET
        /* %SetFK(CESEC_FOTO_ALUMNO,NULL) */
        CESEC_FOTO_ALUMNO.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOTO_ALUMNO,:%Old," = ",",") */
        CESEC_FOTO_ALUMNO.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVAL_EXAMEN_GRAL_C on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_EXAMEN_GRAL_C"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_212", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_EXAMEN_GRAL_C
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_EXAMEN_GRAL_C,:%Old," = "," AND") */
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_EVAL_EXAMEN_GRAL_C exists.'
      );
    END IF;
  END IF;

  /* CESEC_ALUMNOS  CESEC_ALUMNO_CONTACTOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_CONTACTOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_153", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_ALUMNO_CONTACTOS
      SET
        /* %SetFK(CESEC_ALUMNO_CONTACTOS,NULL) */
        CESEC_ALUMNO_CONTACTOS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNO_CONTACTOS,:%Old," = ",",") */
        CESEC_ALUMNO_CONTACTOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* CESEC_ALUMNOS  CESEC_BECAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BECAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_229", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_BECAS
      SET
        /* %SetFK(CESEC_BECAS,NULL) */
        CESEC_BECAS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_BECAS,:%Old," = ",",") */
        CESEC_BECAS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_PRE_EVAL_OBSERVACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_OBSERVACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_94", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_OBSERVACIONES
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_OBSERVACIONES,:%Old," = "," AND") */
        CESEC_PRE_EVAL_OBSERVACIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_PRE_EVAL_OBSERVACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVALUACION_MATERIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_MATERIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_200", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_MATERIA,:%Old," = "," AND") */
        CESEC_EVALUACION_MATERIA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_EVALUACION_MATERIA exists.'
      );
    END IF;
  END IF;

  /* CESEC_ALUMNOS  CESEC_FOLIO_CARTILLAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_230", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = ",",") */
        CESEC_FOLIO_CARTILLAS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* CESEC_ALUMNOS  CESEC_INFO_SALUD on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INFO_SALUD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_243", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_INFO_SALUD
      SET
        /* %SetFK(CESEC_INFO_SALUD,NULL) */
        CESEC_INFO_SALUD.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_INFO_SALUD,:%Old," = ",",") */
        CESEC_INFO_SALUD.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_ALUMNO_LEC_EVALUA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_LEC_EVALUA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_240", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_LEC_EVALUA
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_LEC_EVALUA,:%Old," = "," AND") */
        CESEC_ALUMNO_LEC_EVALUA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_ALUMNO_LEC_EVALUA exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_ALUMNO_BARRERA_APOYOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_BARRERA_APOYOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_163", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_BARRERA_APOYOS
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_BARRERA_APOYOS,:%Old," = "," AND") */
        CESEC_ALUMNO_BARRERA_APOYOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_ALUMNO_BARRERA_APOYOS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_INSCRIPCION_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_60", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INSCRIPCION_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_INSCRIPCION_ALUMNOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_ALUMNOS  CESEC_DOMICILIOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOMICILIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_270", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    UPDATE CESEC_DOMICILIOS
      SET
        /* %SetFK(CESEC_DOMICILIOS,NULL) */
        CESEC_DOMICILIOS.N_ID_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOMICILIOS,:%Old," = ",",") */
        CESEC_DOMICILIOS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_AL_BARRERA_APRENDIZAJES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_AL_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_162", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_AL_BARRERA_APRENDIZAJES
      WHERE
        /*  %JoinFKPK(CESEC_AL_BARRERA_APRENDIZAJES,:%Old," = "," AND") */
        CESEC_AL_BARRERA_APRENDIZAJES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_AL_BARRERA_APRENDIZAJES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_PERIODO_INASISTENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_276", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_ALUMNO_RENAPO_CRITICA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_RENAPO_CRITICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_285", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_RENAPO_CRITICA
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_RENAPO_CRITICA,:%Old," = "," AND") */
        CESEC_ALUMNO_RENAPO_CRITICA.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_ALUMNO_RENAPO_CRITICA exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVAL_COMPRENSIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_272", FK_COLUMNS="N_ID_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_ALUMNO = :old.N_ID_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ALUMNOS because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_ASIGNACION_FOLIOS BEFORE INSERT ON CESEC_ASIGNACION_FOLIOS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_ASIGNACION_FOLIOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00027c03", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_220", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
        :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_ASIGNACION_FOLIOS because CESEC_GRADO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_219", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_ASIGNACION_FOLIOS because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ASIGNACION_FOLIOS AFTER UPDATE ON CESEC_ASIGNACION_FOLIOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ASIGNACION_FOLIOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="000277f7", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_220", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_GRADO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
      :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_ASIGNACION_FOLIOS because CESEC_GRADO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_219", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_ASIGNACION_FOLIOS because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_BARRERA_APOYOS AFTER DELETE ON CESEC_BARRERA_APOYOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_BARRERA_APOYOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_BARRERA_APOYOS  CESEC_ALUMNO_BARRERA_APOYOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00021f28", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APOYOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_BARRERA_APOYOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_165", FK_COLUMNS="N_ID_BARRERA_APOYO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_BARRERA_APOYOS
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_BARRERA_APOYOS,:%Old," = "," AND") */
        CESEC_ALUMNO_BARRERA_APOYOS.N_ID_BARRERA_APOYO = :old.N_ID_BARRERA_APOYO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_BARRERA_APOYOS because CESEC_ALUMNO_BARRERA_APOYOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_BARRERA_APOYOS  CESEC_BARRERA_APOYOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APOYOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BARRERA_APOYOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_301", FK_COLUMNS="N_ID_PARENT" */
    UPDATE CESEC_BARRERA_APOYOS
      SET
        /* %SetFK(CESEC_BARRERA_APOYOS,NULL) */
        CESEC_BARRERA_APOYOS.N_ID_PARENT = NULL
      WHERE
        /* %JoinFKPK(CESEC_BARRERA_APOYOS,:%Old," = "," AND") */
        CESEC_BARRERA_APOYOS.N_ID_PARENT = :old.N_ID_BARRERA_APOYO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_BARRERA_APOYOS AFTER UPDATE ON CESEC_BARRERA_APOYOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_BARRERA_APOYOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_BARRERA_APOYOS  CESEC_ALUMNO_BARRERA_APOYOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00027cc8", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APOYOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_BARRERA_APOYOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_165", FK_COLUMNS="N_ID_BARRERA_APOYO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_BARRERA_APOYO <> :new.N_ID_BARRERA_APOYO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_BARRERA_APOYOS
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_BARRERA_APOYOS,:%Old," = "," AND") */
        CESEC_ALUMNO_BARRERA_APOYOS.N_ID_BARRERA_APOYO = :old.N_ID_BARRERA_APOYO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_BARRERA_APOYOS because CESEC_ALUMNO_BARRERA_APOYOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_BARRERA_APOYOS  CESEC_BARRERA_APOYOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APOYOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BARRERA_APOYOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_301", FK_COLUMNS="N_ID_PARENT" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_BARRERA_APOYO <> :new.N_ID_BARRERA_APOYO
  THEN
    UPDATE CESEC_BARRERA_APOYOS
      SET
        /* %SetFK(CESEC_BARRERA_APOYOS,NULL) */
        CESEC_BARRERA_APOYOS.N_ID_PARENT = NULL
      WHERE
        /* %JoinFKPK(CESEC_BARRERA_APOYOS,:%Old," = ",",") */
        CESEC_BARRERA_APOYOS.N_ID_PARENT = :old.N_ID_BARRERA_APOYO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_BARRERA_APRENDIZAJES BEFORE INSERT ON CESEC_BARRERA_APRENDIZAJES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_BARRERA_APRENDIZAJES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_BARRERA_APRENDIZAJES  CESEC_BARRERA_APRENDIZAJES on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00016956", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APRENDIZAJES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_192", FK_COLUMNS="N_ID_PARENT" */
    UPDATE CESEC_BARRERA_APRENDIZAJES
      SET
        /* %SetFK(CESEC_BARRERA_APRENDIZAJES,NULL) */
        CESEC_BARRERA_APRENDIZAJES.N_ID_PARENT = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CESEC_BARRERA_APRENDIZAJES
            WHERE
              /* %JoinFKPK(:%New,CESEC_BARRERA_APRENDIZAJES," = "," AND") */
              :new.N_ID_PARENT = CESEC_BARRERA_APRENDIZAJES.N_ID_BARRERA_APRENDIZAJE
        ) 
        /* %JoinPKPK(CESEC_BARRERA_APRENDIZAJES,:%New," = "," AND") */
         and CESEC_BARRERA_APRENDIZAJES.N_ID_BARRERA_APRENDIZAJE = :new.N_ID_BARRERA_APRENDIZAJE;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CESEC_BARRERA_APRENDIZAJES AFTER DELETE ON CESEC_BARRERA_APRENDIZAJES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_BARRERA_APRENDIZAJES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_BARRERA_APRENDIZAJES  CESEC_BARRERA_APRENDIZAJES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="000255ff", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APRENDIZAJES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_192", FK_COLUMNS="N_ID_PARENT" */
    UPDATE CESEC_BARRERA_APRENDIZAJES
      SET
        /* %SetFK(CESEC_BARRERA_APRENDIZAJES,NULL) */
        CESEC_BARRERA_APRENDIZAJES.N_ID_PARENT = NULL
      WHERE
        /* %JoinFKPK(CESEC_BARRERA_APRENDIZAJES,:%Old," = "," AND") */
        CESEC_BARRERA_APRENDIZAJES.N_ID_PARENT = :old.N_ID_BARRERA_APRENDIZAJE;

    /* ERwin Builtin Trigger */
    /* CESEC_BARRERA_APRENDIZAJES  CESEC_AL_BARRERA_APRENDIZAJES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APRENDIZAJES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_AL_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_164", FK_COLUMNS="N_ID_BARRERA_APRENDIZAJE" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_AL_BARRERA_APRENDIZAJES
      WHERE
        /*  %JoinFKPK(CESEC_AL_BARRERA_APRENDIZAJES,:%Old," = "," AND") */
        CESEC_AL_BARRERA_APRENDIZAJES.N_ID_BARRERA_APRENDIZAJE = :old.N_ID_BARRERA_APRENDIZAJE;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_BARRERA_APRENDIZAJES because CESEC_AL_BARRERA_APRENDIZAJES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_BARRERA_APRENDIZAJES AFTER UPDATE ON CESEC_BARRERA_APRENDIZAJES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_BARRERA_APRENDIZAJES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_BARRERA_APRENDIZAJES  CESEC_BARRERA_APRENDIZAJES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00043f17", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APRENDIZAJES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_192", FK_COLUMNS="N_ID_PARENT" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_BARRERA_APRENDIZAJE <> :new.N_ID_BARRERA_APRENDIZAJE
  THEN
    UPDATE CESEC_BARRERA_APRENDIZAJES
      SET
        /* %SetFK(CESEC_BARRERA_APRENDIZAJES,NULL) */
        CESEC_BARRERA_APRENDIZAJES.N_ID_PARENT = NULL
      WHERE
        /* %JoinFKPK(CESEC_BARRERA_APRENDIZAJES,:%Old," = ",",") */
        CESEC_BARRERA_APRENDIZAJES.N_ID_PARENT = :old.N_ID_BARRERA_APRENDIZAJE;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_BARRERA_APRENDIZAJES  CESEC_AL_BARRERA_APRENDIZAJES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APRENDIZAJES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_AL_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_164", FK_COLUMNS="N_ID_BARRERA_APRENDIZAJE" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_BARRERA_APRENDIZAJE <> :new.N_ID_BARRERA_APRENDIZAJE
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_AL_BARRERA_APRENDIZAJES
      WHERE
        /*  %JoinFKPK(CESEC_AL_BARRERA_APRENDIZAJES,:%Old," = "," AND") */
        CESEC_AL_BARRERA_APRENDIZAJES.N_ID_BARRERA_APRENDIZAJE = :old.N_ID_BARRERA_APRENDIZAJE;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_BARRERA_APRENDIZAJES because CESEC_AL_BARRERA_APRENDIZAJES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_BARRERA_APRENDIZAJES  CESEC_BARRERA_APRENDIZAJES on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_BARRERA_APRENDIZAJES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BARRERA_APRENDIZAJES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_192", FK_COLUMNS="N_ID_PARENT" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_BARRERA_APRENDIZAJES
    WHERE
      /* %JoinFKPK(:%New,CESEC_BARRERA_APRENDIZAJES," = "," AND") */
      :new.N_ID_PARENT = CESEC_BARRERA_APRENDIZAJES.N_ID_BARRERA_APRENDIZAJE;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.N_ID_PARENT IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_BARRERA_APRENDIZAJES because CESEC_BARRERA_APRENDIZAJES does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_BLOQUE_MATERIAS AFTER DELETE ON CESEC_BLOQUE_MATERIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_BLOQUE_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_BLOQUE_MATERIAS  CESEC_MATERIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="0001033f", PARENT_OWNER="", PARENT_TABLE="CESEC_BLOQUE_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_5", FK_COLUMNS="N_ID_BLOQUE_ASIGNATURA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_MATERIAS,:%Old," = "," AND") */
        CESEC_MATERIAS.N_ID_BLOQUE_ASIGNATURA = :old.N_ID_BLOQUE_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_BLOQUE_MATERIAS because CESEC_MATERIAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_BLOQUE_MATERIAS AFTER UPDATE ON CESEC_BLOQUE_MATERIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_BLOQUE_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_BLOQUE_MATERIAS  CESEC_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00013ba7", PARENT_OWNER="", PARENT_TABLE="CESEC_BLOQUE_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_5", FK_COLUMNS="N_ID_BLOQUE_ASIGNATURA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_BLOQUE_MATERIA <> :new.N_ID_BLOQUE_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_MATERIAS,:%Old," = "," AND") */
        CESEC_MATERIAS.N_ID_BLOQUE_ASIGNATURA = :old.N_ID_BLOQUE_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_BLOQUE_MATERIAS because CESEC_MATERIAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_CICLO_ESCOLARES AFTER DELETE ON CESEC_CICLO_ESCOLARES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_CICLO_ESCOLARES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_SAID_CARGA on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="001ad055", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SAID_CARGA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_221", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_SAID_CARGA
      WHERE
        /*  %JoinFKPK(CESEC_SAID_CARGA,:%Old," = "," AND") */
        CESEC_SAID_CARGA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_SAID_CARGA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_219", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ASIGNACION_FOLIOS
      WHERE
        /*  %JoinFKPK(CESEC_ASIGNACION_FOLIOS,:%Old," = "," AND") */
        CESEC_ASIGNACION_FOLIOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_ASIGNACION_FOLIOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_NIVEL on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_217", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_NIVEL
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_NIVEL,:%Old," = "," AND") */
        CESEC_PROMEDIO_NIVEL.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_PROMEDIO_NIVEL exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXTRAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_214", FK_COLUMNS="N_ID_CICLO_ESOLAR_APLICA" */
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESOLAR_APLICA = NULL
      WHERE
        /* %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = "," AND") */
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESOLAR_APLICA = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_210", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_GRADO on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_203", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_HISTORICO_EVAL_EXTRAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_202", FK_COLUMNS="N_ID_CICLO_ESCOLAR_APLICA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_HISTORICO_EVAL_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_CICLO_ESCOLAR_APLICA = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_HISTORICO_EVAL_EXTRAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_168", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXECIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_161", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_CICLO_ESCOLARES because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PRE_EVAL_CAMPO_FORMATIVO on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_CAMPO_FORMATIVO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_91", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_CAMPO_FORMATIVO
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_CAMPO_FORMATIVO,:%Old," = "," AND") */
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CICLO_ESCOLARES because CESEC_PRE_EVAL_CAMPO_FORMATIVO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_313", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PRE_EVAL_OBSERVACIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_OBSERVACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_96", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_OBSERVACIONES
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_OBSERVACIONES,:%Old," = "," AND") */
        CESEC_PRE_EVAL_OBSERVACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CICLO_ESCOLARES because CESEC_PRE_EVAL_OBSERVACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_LECTURA_EVALUACIONES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_235", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = "," AND") */
        CESEC_LECTURA_EVALUACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_MODALIDAD_PERIODOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDAD_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_281", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_MODALIDAD_PERIODOS
      SET
        /* %SetFK(CESEC_MODALIDAD_PERIODOS,NULL) */
        CESEC_MODALIDAD_PERIODOS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_MODALIDAD_PERIODOS,:%Old," = "," AND") */
        CESEC_MODALIDAD_PERIODOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_BID on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BID"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_208", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_BID
      SET
        /* %SetFK(CESEC_BID,NULL) */
        CESEC_BID.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_BID,:%Old," = "," AND") */
        CESEC_BID.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_MATERIA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_MATERIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_261", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_MATERIA,:%Old," = "," AND") */
        CESEC_EVALUACION_MATERIA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CICLO_ESCOLARES because CESEC_EVALUACION_MATERIA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_FOLIO_CARTILLAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_233", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = "," AND") */
        CESEC_FOLIO_CARTILLAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_CICLOE_TIPO_CAL on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CICLOE_TIPO_CAL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_151", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLOE_TIPO_CAL
      WHERE
        /*  %JoinFKPK(CESEC_CICLOE_TIPO_CAL,:%Old," = "," AND") */
        CESEC_CICLOE_TIPO_CAL.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CICLO_ESCOLARES because CESEC_CICLOE_TIPO_CAL exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_INSCRIPCION_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_167", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_CONF_MAT_NO_APLICA on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONF_MAT_NO_APLICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_256", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_CONF_MAT_NO_APLICA
      SET
        /* %SetFK(CESEC_CONF_MAT_NO_APLICA,NULL) */
        CESEC_CONF_MAT_NO_APLICA.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONF_MAT_NO_APLICA,:%Old," = "," AND") */
        CESEC_CONF_MAT_NO_APLICA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PERIODO_INASISTENCIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_277", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CICLO_ESCOLARES because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_GASTO_ESCUELA on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GASTO_ESCUELA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_228", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    UPDATE CESEC_GASTO_ESCUELA
      SET
        /* %SetFK(CESEC_GASTO_ESCUELA,NULL) */
        CESEC_GASTO_ESCUELA.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_GASTO_ESCUELA,:%Old," = "," AND") */
        CESEC_GASTO_ESCUELA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_COMPRENSIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_273", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CICLO_ESCOLARES because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_CICLO_ESCOLARES AFTER UPDATE ON CESEC_CICLO_ESCOLARES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_CICLO_ESCOLARES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_SAID_CARGA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="001eae50", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SAID_CARGA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_221", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_SAID_CARGA
      WHERE
        /*  %JoinFKPK(CESEC_SAID_CARGA,:%Old," = "," AND") */
        CESEC_SAID_CARGA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_SAID_CARGA exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_219", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ASIGNACION_FOLIOS
      WHERE
        /*  %JoinFKPK(CESEC_ASIGNACION_FOLIOS,:%Old," = "," AND") */
        CESEC_ASIGNACION_FOLIOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_ASIGNACION_FOLIOS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_NIVEL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_217", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_NIVEL
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_NIVEL,:%Old," = "," AND") */
        CESEC_PROMEDIO_NIVEL.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_PROMEDIO_NIVEL exists.'
      );
    END IF;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXTRAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_214", FK_COLUMNS="N_ID_CICLO_ESOLAR_APLICA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESOLAR_APLICA = NULL
      WHERE
        /* %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = ",",") */
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESOLAR_APLICA = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_210", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_GRADO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_203", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_HISTORICO_EVAL_EXTRAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_202", FK_COLUMNS="N_ID_CICLO_ESCOLAR_APLICA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_HISTORICO_EVAL_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_CICLO_ESCOLAR_APLICA = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_HISTORICO_EVAL_EXTRAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_168", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXECIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_161", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PRE_EVAL_CAMPO_FORMATIVO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_CAMPO_FORMATIVO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_91", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_CAMPO_FORMATIVO
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_CAMPO_FORMATIVO,:%Old," = "," AND") */
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_PRE_EVAL_CAMPO_FORMATIVO exists.'
      );
    END IF;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_GRUPOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_313", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = ",",") */
        CESEC_GRUPOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PRE_EVAL_OBSERVACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_OBSERVACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_96", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_OBSERVACIONES
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_OBSERVACIONES,:%Old," = "," AND") */
        CESEC_PRE_EVAL_OBSERVACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_PRE_EVAL_OBSERVACIONES exists.'
      );
    END IF;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_LECTURA_EVALUACIONES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_235", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = ",",") */
        CESEC_LECTURA_EVALUACIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_MODALIDAD_PERIODOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDAD_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_281", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_MODALIDAD_PERIODOS
      SET
        /* %SetFK(CESEC_MODALIDAD_PERIODOS,NULL) */
        CESEC_MODALIDAD_PERIODOS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_MODALIDAD_PERIODOS,:%Old," = ",",") */
        CESEC_MODALIDAD_PERIODOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_BID on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BID"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_208", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_BID
      SET
        /* %SetFK(CESEC_BID,NULL) */
        CESEC_BID.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_BID,:%Old," = ",",") */
        CESEC_BID.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_MATERIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_MATERIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_261", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_MATERIA,:%Old," = "," AND") */
        CESEC_EVALUACION_MATERIA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_EVALUACION_MATERIA exists.'
      );
    END IF;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_FOLIO_CARTILLAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_233", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = ",",") */
        CESEC_FOLIO_CARTILLAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_CICLOE_TIPO_CAL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CICLOE_TIPO_CAL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_151", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLOE_TIPO_CAL
      WHERE
        /*  %JoinFKPK(CESEC_CICLOE_TIPO_CAL,:%Old," = "," AND") */
        CESEC_CICLOE_TIPO_CAL.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_CICLOE_TIPO_CAL exists.'
      );
    END IF;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_INSCRIPCION_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_167", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = ",",") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_CONF_MAT_NO_APLICA on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONF_MAT_NO_APLICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_256", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_CONF_MAT_NO_APLICA
      SET
        /* %SetFK(CESEC_CONF_MAT_NO_APLICA,NULL) */
        CESEC_CONF_MAT_NO_APLICA.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONF_MAT_NO_APLICA,:%Old," = ",",") */
        CESEC_CONF_MAT_NO_APLICA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PERIODO_INASISTENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_277", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;
  END IF;

  /* CESEC_CICLO_ESCOLARES  CESEC_GASTO_ESCUELA on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GASTO_ESCUELA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_228", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    UPDATE CESEC_GASTO_ESCUELA
      SET
        /* %SetFK(CESEC_GASTO_ESCUELA,NULL) */
        CESEC_GASTO_ESCUELA.N_ID_CICLO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_GASTO_ESCUELA,:%Old," = ",",") */
        CESEC_GASTO_ESCUELA.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_COMPRENSIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_273", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CICLO_ESCOLARES because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_CODIGO_POSTALES AFTER DELETE ON CESEC_CODIGO_POSTALES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_CODIGO_POSTALES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_CODIGO_POSTALES  CESEC_COL_COD_POSTALES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00011dbd", PARENT_OWNER="", PARENT_TABLE="CESEC_CODIGO_POSTALES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_COL_COD_POSTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_311", FK_COLUMNS="N_ID_CODIGO_POSTAL" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_COL_COD_POSTALES
      WHERE
        /*  %JoinFKPK(CESEC_COL_COD_POSTALES,:%Old," = "," AND") */
        CESEC_COL_COD_POSTALES.N_ID_CODIGO_POSTAL = :old.N_ID_CODIGO_POSTAL;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_CODIGO_POSTALES because CESEC_COL_COD_POSTALES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_CODIGO_POSTALES AFTER UPDATE ON CESEC_CODIGO_POSTALES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_CODIGO_POSTALES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_CODIGO_POSTALES  CESEC_COL_COD_POSTALES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00014e9b", PARENT_OWNER="", PARENT_TABLE="CESEC_CODIGO_POSTALES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_COL_COD_POSTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_311", FK_COLUMNS="N_ID_CODIGO_POSTAL" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CODIGO_POSTAL <> :new.N_ID_CODIGO_POSTAL
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_COL_COD_POSTALES
      WHERE
        /*  %JoinFKPK(CESEC_COL_COD_POSTALES,:%Old," = "," AND") */
        CESEC_COL_COD_POSTALES.N_ID_CODIGO_POSTAL = :old.N_ID_CODIGO_POSTAL;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_CODIGO_POSTALES because CESEC_COL_COD_POSTALES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_COLONIAS AFTER DELETE ON CESEC_COLONIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_COLONIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_COLONIAS  CESEC_COL_COD_POSTALES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0001d807", PARENT_OWNER="", PARENT_TABLE="CESEC_COLONIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_COL_COD_POSTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_225", FK_COLUMNS="N_ID_COLONIA" */
    UPDATE CESEC_COL_COD_POSTALES
      SET
        /* %SetFK(CESEC_COL_COD_POSTALES,NULL) */
        CESEC_COL_COD_POSTALES.N_ID_COLONIA = NULL
      WHERE
        /* %JoinFKPK(CESEC_COL_COD_POSTALES,:%Old," = "," AND") */
        CESEC_COL_COD_POSTALES.N_ID_COLONIA = :old.N_ID_COLONIA;

    /* ERwin Builtin Trigger */
    /* CESEC_COLONIAS  CESEC_DOMICILIOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_COLONIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOMICILIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_245", FK_COLUMNS="N_ID_COLONIA" */
    UPDATE CESEC_DOMICILIOS
      SET
        /* %SetFK(CESEC_DOMICILIOS,NULL) */
        CESEC_DOMICILIOS.N_ID_COLONIA = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOMICILIOS,:%Old," = "," AND") */
        CESEC_DOMICILIOS.N_ID_COLONIA = :old.N_ID_COLONIA;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_COLONIAS AFTER UPDATE ON CESEC_COLONIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_COLONIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_COLONIAS  CESEC_COL_COD_POSTALES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00021e00", PARENT_OWNER="", PARENT_TABLE="CESEC_COLONIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_COL_COD_POSTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_225", FK_COLUMNS="N_ID_COLONIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_COLONIA <> :new.N_ID_COLONIA
  THEN
    UPDATE CESEC_COL_COD_POSTALES
      SET
        /* %SetFK(CESEC_COL_COD_POSTALES,NULL) */
        CESEC_COL_COD_POSTALES.N_ID_COLONIA = NULL
      WHERE
        /* %JoinFKPK(CESEC_COL_COD_POSTALES,:%Old," = ",",") */
        CESEC_COL_COD_POSTALES.N_ID_COLONIA = :old.N_ID_COLONIA;
  END IF;

  /* CESEC_COLONIAS  CESEC_DOMICILIOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_COLONIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOMICILIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_245", FK_COLUMNS="N_ID_COLONIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_COLONIA <> :new.N_ID_COLONIA
  THEN
    UPDATE CESEC_DOMICILIOS
      SET
        /* %SetFK(CESEC_DOMICILIOS,NULL) */
        CESEC_DOMICILIOS.N_ID_COLONIA = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOMICILIOS,:%Old," = ",",") */
        CESEC_DOMICILIOS.N_ID_COLONIA = :old.N_ID_COLONIA;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_COMPRENSION_ASPECTOS AFTER DELETE ON CESEC_COMPRENSION_ASPECTOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_COMPRENSION_ASPECTOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_COMPRENSION_ASPECTOS  CESEC_EVAL_COMPRENSIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000130c6", PARENT_OWNER="", PARENT_TABLE="CESEC_COMPRENSION_ASPECTOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_271", FK_COLUMNS="N_ID_COMPRENSION_ASPECTO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_COMPRENSION_ASPECTO = :old.N_ID_COMPRENSION_ASPECTO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_COMPRENSION_ASPECTOS because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_COMPRENSION_ASPECTOS AFTER UPDATE ON CESEC_COMPRENSION_ASPECTOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_COMPRENSION_ASPECTOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_COMPRENSION_ASPECTOS  CESEC_EVAL_COMPRENSIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0001652f", PARENT_OWNER="", PARENT_TABLE="CESEC_COMPRENSION_ASPECTOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_271", FK_COLUMNS="N_ID_COMPRENSION_ASPECTO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_COMPRENSION_ASPECTO <> :new.N_ID_COMPRENSION_ASPECTO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_COMPRENSION_ASPECTO = :old.N_ID_COMPRENSION_ASPECTO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_COMPRENSION_ASPECTOS because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_CONTACTO_ALUMNOS BEFORE INSERT ON CESEC_CONTACTO_ALUMNOS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_CONTACTO_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_OCUPACIONES  CESEC_CONTACTO_ALUMNOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00066293", PARENT_OWNER="", PARENT_TABLE="CESEC_OCUPACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_176", FK_COLUMNS="N_ID_OCUPACION" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_OCUPACIONES
      WHERE
        /* %JoinFKPK(:%New,CESEC_OCUPACIONES," = "," AND") */
        :new.N_ID_OCUPACION = CESEC_OCUPACIONES.N_ID_OCUPACION;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_CONTACTO_ALUMNOS because CESEC_OCUPACIONES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_CONTACTO_ALUMNOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_175", FK_COLUMNS="N_ID_EF_NACIMIENTO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENTIDAD_FEDERATIVAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ENTIDAD_FEDERATIVAS," = "," AND") */
        :new.N_ID_EF_NACIMIENTO = CESEC_ENTIDAD_FEDERATIVAS.N_ID_ENT_FEDERATIVA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_CONTACTO_ALUMNOS because CESEC_ENTIDAD_FEDERATIVAS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_SANGUINEOS  CESEC_CONTACTO_ALUMNOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_SANGUINEOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_174", FK_COLUMNS="N_ID_TIPO_SANGUINEO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TIPO_SANGUINEOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_TIPO_SANGUINEOS," = "," AND") */
        :new.N_ID_TIPO_SANGUINEO = CESEC_TIPO_SANGUINEOS.N_ID_TIPO_SANGUINEO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_CONTACTO_ALUMNOS because CESEC_TIPO_SANGUINEOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ETNIA_INDIGENAS  CESEC_CONTACTO_ALUMNOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ETNIA_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_173", FK_COLUMNS="N_ID_ETNIA_INDIGENA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ETNIA_INDIGENAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ETNIA_INDIGENAS," = "," AND") */
        :new.N_ID_ETNIA_INDIGENA = CESEC_ETNIA_INDIGENAS.N_ID_ETNIA_INDIGENA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_CONTACTO_ALUMNOS because CESEC_ETNIA_INDIGENAS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_DIALECTO_INDIGENAS  CESEC_CONTACTO_ALUMNOS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_DIALECTO_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_172", FK_COLUMNS="N_ID_DIALECTO_INDIGENA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_DIALECTO_INDIGENAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_DIALECTO_INDIGENAS," = "," AND") */
        :new.N_ID_DIALECTO_INDIGENA = CESEC_DIALECTO_INDIGENAS.N_ID_DIALECTO_INDIGENA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_CONTACTO_ALUMNOS because CESEC_DIALECTO_INDIGENAS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CESEC_CONTACTO_ALUMNOS AFTER DELETE ON CESEC_CONTACTO_ALUMNOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_CONTACTO_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_CONTACTO_ALUMNOS  CESEC_ALUMNO_CONTACTOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000fe35", PARENT_OWNER="", PARENT_TABLE="CESEC_CONTACTO_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_CONTACTOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_154", FK_COLUMNS="N_ID_CONTACTO_ALUMNO" */
    UPDATE CESEC_ALUMNO_CONTACTOS
      SET
        /* %SetFK(CESEC_ALUMNO_CONTACTOS,NULL) */
        CESEC_ALUMNO_CONTACTOS.N_ID_CONTACTO_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNO_CONTACTOS,:%Old," = "," AND") */
        CESEC_ALUMNO_CONTACTOS.N_ID_CONTACTO_ALUMNO = :old.N_ID_CONTACTO_ALUMNO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_CONTACTO_ALUMNOS AFTER UPDATE ON CESEC_CONTACTO_ALUMNOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_CONTACTO_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_CONTACTO_ALUMNOS  CESEC_ALUMNO_CONTACTOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0007b81a", PARENT_OWNER="", PARENT_TABLE="CESEC_CONTACTO_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_CONTACTOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_154", FK_COLUMNS="N_ID_CONTACTO_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_CONTACTO_ALUMNO <> :new.N_ID_CONTACTO_ALUMNO
  THEN
    UPDATE CESEC_ALUMNO_CONTACTOS
      SET
        /* %SetFK(CESEC_ALUMNO_CONTACTOS,NULL) */
        CESEC_ALUMNO_CONTACTOS.N_ID_CONTACTO_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNO_CONTACTOS,:%Old," = ",",") */
        CESEC_ALUMNO_CONTACTOS.N_ID_CONTACTO_ALUMNO = :old.N_ID_CONTACTO_ALUMNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_OCUPACIONES  CESEC_CONTACTO_ALUMNOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_OCUPACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_176", FK_COLUMNS="N_ID_OCUPACION" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_OCUPACIONES
    WHERE
      /* %JoinFKPK(:%New,CESEC_OCUPACIONES," = "," AND") */
      :new.N_ID_OCUPACION = CESEC_OCUPACIONES.N_ID_OCUPACION;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_CONTACTO_ALUMNOS because CESEC_OCUPACIONES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_CONTACTO_ALUMNOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_175", FK_COLUMNS="N_ID_EF_NACIMIENTO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ENTIDAD_FEDERATIVAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ENTIDAD_FEDERATIVAS," = "," AND") */
      :new.N_ID_EF_NACIMIENTO = CESEC_ENTIDAD_FEDERATIVAS.N_ID_ENT_FEDERATIVA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_CONTACTO_ALUMNOS because CESEC_ENTIDAD_FEDERATIVAS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_SANGUINEOS  CESEC_CONTACTO_ALUMNOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_SANGUINEOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_174", FK_COLUMNS="N_ID_TIPO_SANGUINEO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_TIPO_SANGUINEOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_TIPO_SANGUINEOS," = "," AND") */
      :new.N_ID_TIPO_SANGUINEO = CESEC_TIPO_SANGUINEOS.N_ID_TIPO_SANGUINEO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_CONTACTO_ALUMNOS because CESEC_TIPO_SANGUINEOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ETNIA_INDIGENAS  CESEC_CONTACTO_ALUMNOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ETNIA_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_173", FK_COLUMNS="N_ID_ETNIA_INDIGENA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ETNIA_INDIGENAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ETNIA_INDIGENAS," = "," AND") */
      :new.N_ID_ETNIA_INDIGENA = CESEC_ETNIA_INDIGENAS.N_ID_ETNIA_INDIGENA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_CONTACTO_ALUMNOS because CESEC_ETNIA_INDIGENAS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_DIALECTO_INDIGENAS  CESEC_CONTACTO_ALUMNOS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_DIALECTO_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_172", FK_COLUMNS="N_ID_DIALECTO_INDIGENA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_DIALECTO_INDIGENAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_DIALECTO_INDIGENAS," = "," AND") */
      :new.N_ID_DIALECTO_INDIGENA = CESEC_DIALECTO_INDIGENAS.N_ID_DIALECTO_INDIGENA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_CONTACTO_ALUMNOS because CESEC_DIALECTO_INDIGENAS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_DERECHO_HABIENCIAS AFTER DELETE ON CESEC_DERECHO_HABIENCIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_DERECHO_HABIENCIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_DERECHO_HABIENCIAS  CESEC_INFO_SALUD on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00010aaa", PARENT_OWNER="", PARENT_TABLE="CESEC_DERECHO_HABIENCIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INFO_SALUD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_192", FK_COLUMNS="N_ID_DERECHOHABIENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INFO_SALUD
      WHERE
        /*  %JoinFKPK(CESEC_INFO_SALUD,:%Old," = "," AND") */
        CESEC_INFO_SALUD.N_ID_DERECHOHABIENCIA = :old.N_ID_DERECHOHABIENCIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_DERECHO_HABIENCIAS because CESEC_INFO_SALUD exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_DERECHO_HABIENCIAS AFTER UPDATE ON CESEC_DERECHO_HABIENCIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_DERECHO_HABIENCIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_DERECHO_HABIENCIAS  CESEC_INFO_SALUD on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0001429e", PARENT_OWNER="", PARENT_TABLE="CESEC_DERECHO_HABIENCIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INFO_SALUD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_192", FK_COLUMNS="N_ID_DERECHOHABIENCIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_DERECHOHABIENCIA <> :new.N_ID_DERECHOHABIENCIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INFO_SALUD
      WHERE
        /*  %JoinFKPK(CESEC_INFO_SALUD,:%Old," = "," AND") */
        CESEC_INFO_SALUD.N_ID_DERECHOHABIENCIA = :old.N_ID_DERECHOHABIENCIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_DERECHO_HABIENCIAS because CESEC_INFO_SALUD exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_DIALECTO_INDIGENAS AFTER DELETE ON CESEC_DIALECTO_INDIGENAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_DIALECTO_INDIGENAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_DIALECTO_INDIGENAS  CESEC_CONTACTO_ALUMNOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00022899", PARENT_OWNER="", PARENT_TABLE="CESEC_DIALECTO_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_172", FK_COLUMNS="N_ID_DIALECTO_INDIGENA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_DIALECTO_INDIGENA = :old.N_ID_DIALECTO_INDIGENA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_DIALECTO_INDIGENAS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_DIALECTO_INDIGENAS  CESEC_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_DIALECTO_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_266", FK_COLUMNS="N_ID_DIALECTO_INDIGENA" */
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_DIALECTO_INDIGENA = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_DIALECTO_INDIGENA = :old.N_ID_DIALECTO_INDIGENA;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_DIALECTO_INDIGENAS AFTER UPDATE ON CESEC_DIALECTO_INDIGENAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_DIALECTO_INDIGENAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_DIALECTO_INDIGENAS  CESEC_CONTACTO_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00027a0d", PARENT_OWNER="", PARENT_TABLE="CESEC_DIALECTO_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_172", FK_COLUMNS="N_ID_DIALECTO_INDIGENA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_DIALECTO_INDIGENA <> :new.N_ID_DIALECTO_INDIGENA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_DIALECTO_INDIGENA = :old.N_ID_DIALECTO_INDIGENA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_DIALECTO_INDIGENAS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_DIALECTO_INDIGENAS  CESEC_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_DIALECTO_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_266", FK_COLUMNS="N_ID_DIALECTO_INDIGENA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_DIALECTO_INDIGENA <> :new.N_ID_DIALECTO_INDIGENA
  THEN
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_DIALECTO_INDIGENA = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = ",",") */
        CESEC_ALUMNOS.N_ID_DIALECTO_INDIGENA = :old.N_ID_DIALECTO_INDIGENA;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_DOMICILIOS AFTER DELETE ON CESEC_DOMICILIOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_DOMICILIOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_DOMICILIOS  CESEC_CONTACTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000eca1", PARENT_OWNER="", PARENT_TABLE="CESEC_DOMICILIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_247", FK_COLUMNS="N_ID_DOMICILIO" */
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_DOMICILIO = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_DOMICILIO = :old.N_ID_DOMICILIO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_DOMICILIOS AFTER UPDATE ON CESEC_DOMICILIOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_DOMICILIOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_DOMICILIOS  CESEC_CONTACTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00011572", PARENT_OWNER="", PARENT_TABLE="CESEC_DOMICILIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_247", FK_COLUMNS="N_ID_DOMICILIO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_DOMICILIO <> :new.N_ID_DOMICILIO
  THEN
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_DOMICILIO = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = ",",") */
        CESEC_CONTACTO_ALUMNOS.N_ID_DOMICILIO = :old.N_ID_DOMICILIO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_ENFASIS_MATERIAS BEFORE INSERT ON CESEC_ENFASIS_MATERIAS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_ENFASIS_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ENFASIS_TALLER  CESEC_ENFASIS_MATERIAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00025dfd", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_TALLER"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_146", FK_COLUMNS="N_ID_ENFASIS_TALLER" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENFASIS_TALLER
      WHERE
        /* %JoinFKPK(:%New,CESEC_ENFASIS_TALLER," = "," AND") */
        :new.N_ID_ENFASIS_TALLER = CESEC_ENFASIS_TALLER.N_ID_ENFASIS_TALLER;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_ENFASIS_MATERIAS because CESEC_ENFASIS_TALLER does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_ENFASIS_MATERIAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_145", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_MATERIAS," = "," AND") */
        :new.N_ID_MATERIA = CESEC_MATERIAS.N_ID_MATERIA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_ENFASIS_MATERIAS because CESEC_MATERIAS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CESEC_ENFASIS_MATERIAS AFTER DELETE ON CESEC_ENFASIS_MATERIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ENFASIS_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ENFASIS_MATERIAS  CESEC_MAT_GPO_TALLER_ARTES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00013b7f", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MAT_GPO_TALLER_ARTES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_148", FK_COLUMNS="N_ID_MATERIA""N_ID_ENFASIS_TALLER" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MAT_GPO_TALLER_ARTES
      WHERE
        /*  %JoinFKPK(CESEC_MAT_GPO_TALLER_ARTES,:%Old," = "," AND") */
        CESEC_MAT_GPO_TALLER_ARTES.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_MAT_GPO_TALLER_ARTES.N_ID_ENFASIS_TALLER = :old.N_ID_ENFASIS_TALLER;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ENFASIS_MATERIAS because CESEC_MAT_GPO_TALLER_ARTES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ENFASIS_MATERIAS AFTER UPDATE ON CESEC_ENFASIS_MATERIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ENFASIS_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ENFASIS_MATERIAS  CESEC_MAT_GPO_TALLER_ARTES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00040b29", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MAT_GPO_TALLER_ARTES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_148", FK_COLUMNS="N_ID_MATERIA""N_ID_ENFASIS_TALLER" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_ENFASIS_TALLER <> :new.N_ID_ENFASIS_TALLER
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MAT_GPO_TALLER_ARTES
      WHERE
        /*  %JoinFKPK(CESEC_MAT_GPO_TALLER_ARTES,:%Old," = "," AND") */
        CESEC_MAT_GPO_TALLER_ARTES.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_MAT_GPO_TALLER_ARTES.N_ID_ENFASIS_TALLER = :old.N_ID_ENFASIS_TALLER;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ENFASIS_MATERIAS because CESEC_MAT_GPO_TALLER_ARTES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ENFASIS_TALLER  CESEC_ENFASIS_MATERIAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_TALLER"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_146", FK_COLUMNS="N_ID_ENFASIS_TALLER" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ENFASIS_TALLER
    WHERE
      /* %JoinFKPK(:%New,CESEC_ENFASIS_TALLER," = "," AND") */
      :new.N_ID_ENFASIS_TALLER = CESEC_ENFASIS_TALLER.N_ID_ENFASIS_TALLER;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_ENFASIS_MATERIAS because CESEC_ENFASIS_TALLER does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_ENFASIS_MATERIAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_145", FK_COLUMNS="N_ID_MATERIA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_MATERIAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_MATERIAS," = "," AND") */
      :new.N_ID_MATERIA = CESEC_MATERIAS.N_ID_MATERIA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_ENFASIS_MATERIAS because CESEC_MATERIAS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ENFASIS_TALLER AFTER DELETE ON CESEC_ENFASIS_TALLER for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ENFASIS_TALLER 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ENFASIS_TALLER  CESEC_ENFASIS_MATERIAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00011a7a", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_TALLER"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_146", FK_COLUMNS="N_ID_ENFASIS_TALLER" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENFASIS_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_ENFASIS_MATERIAS,:%Old," = "," AND") */
        CESEC_ENFASIS_MATERIAS.N_ID_ENFASIS_TALLER = :old.N_ID_ENFASIS_TALLER;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ENFASIS_TALLER because CESEC_ENFASIS_MATERIAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ENFASIS_TALLER AFTER UPDATE ON CESEC_ENFASIS_TALLER for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ENFASIS_TALLER 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ENFASIS_TALLER  CESEC_ENFASIS_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000146b7", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_TALLER"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_146", FK_COLUMNS="N_ID_ENFASIS_TALLER" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ENFASIS_TALLER <> :new.N_ID_ENFASIS_TALLER
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENFASIS_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_ENFASIS_MATERIAS,:%Old," = "," AND") */
        CESEC_ENFASIS_MATERIAS.N_ID_ENFASIS_TALLER = :old.N_ID_ENFASIS_TALLER;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ENFASIS_TALLER because CESEC_ENFASIS_MATERIAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ENTIDAD_FEDERATIVAS AFTER DELETE ON CESEC_ENTIDAD_FEDERATIVAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ENTIDAD_FEDERATIVAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_CONTACTO_ALUMNOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000359fe", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_175", FK_COLUMNS="N_ID_EF_NACIMIENTO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_EF_NACIMIENTO = :old.N_ID_ENT_FEDERATIVA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ENTIDAD_FEDERATIVAS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_MUNICIPIO_DELEGACIONES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_222", FK_COLUMNS="N_ID_ENT_FEDERATIVA" */
    UPDATE CESEC_MUNICIPIO_DELEGACIONES
      SET
        /* %SetFK(CESEC_MUNICIPIO_DELEGACIONES,NULL) */
        CESEC_MUNICIPIO_DELEGACIONES.N_ID_ENT_FEDERATIVA = NULL
      WHERE
        /* %JoinFKPK(CESEC_MUNICIPIO_DELEGACIONES,:%Old," = "," AND") */
        CESEC_MUNICIPIO_DELEGACIONES.N_ID_ENT_FEDERATIVA = :old.N_ID_ENT_FEDERATIVA;

    /* ERwin Builtin Trigger */
    /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_ALUMNOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_201", FK_COLUMNS="N_ID_EF_NACIMIENTO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_EF_NACIMIENTO = :old.N_ID_ENT_FEDERATIVA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ENTIDAD_FEDERATIVAS because CESEC_ALUMNOS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ENTIDAD_FEDERATIVAS AFTER UPDATE ON CESEC_ENTIDAD_FEDERATIVAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ENTIDAD_FEDERATIVAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_CONTACTO_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0004047f", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_175", FK_COLUMNS="N_ID_EF_NACIMIENTO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ENT_FEDERATIVA <> :new.N_ID_ENT_FEDERATIVA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_EF_NACIMIENTO = :old.N_ID_ENT_FEDERATIVA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ENTIDAD_FEDERATIVAS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_MUNICIPIO_DELEGACIONES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_222", FK_COLUMNS="N_ID_ENT_FEDERATIVA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ENT_FEDERATIVA <> :new.N_ID_ENT_FEDERATIVA
  THEN
    UPDATE CESEC_MUNICIPIO_DELEGACIONES
      SET
        /* %SetFK(CESEC_MUNICIPIO_DELEGACIONES,NULL) */
        CESEC_MUNICIPIO_DELEGACIONES.N_ID_ENT_FEDERATIVA = NULL
      WHERE
        /* %JoinFKPK(CESEC_MUNICIPIO_DELEGACIONES,:%Old," = ",",") */
        CESEC_MUNICIPIO_DELEGACIONES.N_ID_ENT_FEDERATIVA = :old.N_ID_ENT_FEDERATIVA;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ENTIDAD_FEDERATIVAS  CESEC_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_201", FK_COLUMNS="N_ID_EF_NACIMIENTO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ENT_FEDERATIVA <> :new.N_ID_ENT_FEDERATIVA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_EF_NACIMIENTO = :old.N_ID_ENT_FEDERATIVA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ENTIDAD_FEDERATIVAS because CESEC_ALUMNOS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ESC_MODAL_PLN_EST AFTER DELETE ON CESEC_ESC_MODAL_PLN_EST for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ESC_MODAL_PLN_EST 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ESC_MODAL_PLN_EST  CESEC_EVAL_EXAMEN_GRAL_C on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="0005ed63", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_EXAMEN_GRAL_C"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_188", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_EXAMEN_GRAL_C
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_EXAMEN_GRAL_C,:%Old," = "," AND") */
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ESC_MODAL_PLN_EST because CESEC_EVAL_EXAMEN_GRAL_C exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESC_MODAL_PLN_EST  CESEC_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_172", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_ESCUELA = NULL,
        CESEC_GRUPOS.N_ID_PLAN_ESTUDIOS = NULL,
        CESEC_GRUPOS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_GRUPOS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_GRUPOS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;

    /* ERwin Builtin Trigger */
    /* CESEC_ESC_MODAL_PLN_EST  CESEC_INSCRIPCION_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_204", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_ESCUELA = NULL,
        CESEC_INSCRIPCION_ALUMNOS.N_ID_PLAN_ESTUDIOS = NULL,
        CESEC_INSCRIPCION_ALUMNOS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_INSCRIPCION_ALUMNOS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_INSCRIPCION_ALUMNOS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;

    /* ERwin Builtin Trigger */
    /* CESEC_ESC_MODAL_PLN_EST  CESEC_CONF_MAT_NO_APLICA on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONF_MAT_NO_APLICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_217", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
    UPDATE CESEC_CONF_MAT_NO_APLICA
      SET
        /* %SetFK(CESEC_CONF_MAT_NO_APLICA,NULL) */
        CESEC_CONF_MAT_NO_APLICA.N_ID_ESCUELA = NULL,
        CESEC_CONF_MAT_NO_APLICA.N_ID_PLAN_ESTUDIOS = NULL,
        CESEC_CONF_MAT_NO_APLICA.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONF_MAT_NO_APLICA,:%Old," = "," AND") */
        CESEC_CONF_MAT_NO_APLICA.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_CONF_MAT_NO_APLICA.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_CONF_MAT_NO_APLICA.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ESC_MODAL_PLN_EST AFTER UPDATE ON CESEC_ESC_MODAL_PLN_EST for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ESC_MODAL_PLN_EST 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ESC_MODAL_PLN_EST  CESEC_EVAL_EXAMEN_GRAL_C on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000724a5", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_EXAMEN_GRAL_C"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_188", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA OR 
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_EXAMEN_GRAL_C
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_EXAMEN_GRAL_C,:%Old," = "," AND") */
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESC_MODAL_PLN_EST because CESEC_EVAL_EXAMEN_GRAL_C exists.'
      );
    END IF;
  END IF;

  /* CESEC_ESC_MODAL_PLN_EST  CESEC_GRUPOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_172", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA OR 
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_ESCUELA = NULL,
        CESEC_GRUPOS.N_ID_PLAN_ESTUDIOS = NULL,
        CESEC_GRUPOS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = ",",") */
        CESEC_GRUPOS.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_GRUPOS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_GRUPOS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
  END IF;

  /* CESEC_ESC_MODAL_PLN_EST  CESEC_INSCRIPCION_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_204", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA OR 
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_ESCUELA = NULL,
        CESEC_INSCRIPCION_ALUMNOS.N_ID_PLAN_ESTUDIOS = NULL,
        CESEC_INSCRIPCION_ALUMNOS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = ",",") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_INSCRIPCION_ALUMNOS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_INSCRIPCION_ALUMNOS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
  END IF;

  /* CESEC_ESC_MODAL_PLN_EST  CESEC_CONF_MAT_NO_APLICA on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESC_MODAL_PLN_EST"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONF_MAT_NO_APLICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_217", FK_COLUMNS="N_ID_ESCUELA""N_ID_PLAN_ESTUDIOS""N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA OR 
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    UPDATE CESEC_CONF_MAT_NO_APLICA
      SET
        /* %SetFK(CESEC_CONF_MAT_NO_APLICA,NULL) */
        CESEC_CONF_MAT_NO_APLICA.N_ID_ESCUELA = NULL,
        CESEC_CONF_MAT_NO_APLICA.N_ID_PLAN_ESTUDIOS = NULL,
        CESEC_CONF_MAT_NO_APLICA.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONF_MAT_NO_APLICA,:%Old," = ",",") */
        CESEC_CONF_MAT_NO_APLICA.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_CONF_MAT_NO_APLICA.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_CONF_MAT_NO_APLICA.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ESCOLARIDADES AFTER DELETE ON CESEC_ESCOLARIDADES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ESCOLARIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ESCOLARIDADES  CESEC_CONTACTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000e9d7", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCOLARIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_176", FK_COLUMNS="N_ID_ESCOLARIDAD" */
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_ESCOLARIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_ESCOLARIDAD = :old.N_ID_ESCOLARIDAD;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ESCOLARIDADES AFTER UPDATE ON CESEC_ESCOLARIDADES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ESCOLARIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_ESCOLARIDADES  CESEC_CONTACTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="000120e0", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCOLARIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_176", FK_COLUMNS="N_ID_ESCOLARIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCOLARIDAD <> :new.N_ID_ESCOLARIDAD
  THEN
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_ESCOLARIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = ",",") */
        CESEC_CONTACTO_ALUMNOS.N_ID_ESCOLARIDAD = :old.N_ID_ESCOLARIDAD;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ESCUELA_MODALIDADES AFTER DELETE ON CESEC_ESCUELA_MODALIDADES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ESCUELA_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELA_MODALIDADES  CESEC_ESC_MODAL_PLN_EST on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="0002bb0d", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESC_MODAL_PLN_EST"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_185", FK_COLUMNS="N_ID_ESCUELA""N_ID_MODALIDAD" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESC_MODAL_PLN_EST
      WHERE
        /*  %JoinFKPK(CESEC_ESC_MODAL_PLN_EST,:%Old," = "," AND") */
        CESEC_ESC_MODAL_PLN_EST.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_ESC_MODAL_PLN_EST.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ESCUELA_MODALIDADES because CESEC_ESC_MODAL_PLN_EST exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELA_MODALIDADES  CESEC_TURNOS_OPERANDO_ESCUELAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_253", FK_COLUMNS="N_ID_ESCUELA""N_ID_MODALIDAD" */
    UPDATE CESEC_TURNOS_OPERANDO_ESCUELAS
      SET
        /* %SetFK(CESEC_TURNOS_OPERANDO_ESCUELAS,NULL) */
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_ESCUELA = NULL,
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_TURNOS_OPERANDO_ESCUELAS,:%Old," = "," AND") */
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ESCUELA_MODALIDADES AFTER UPDATE ON CESEC_ESCUELA_MODALIDADES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ESCUELA_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELA_MODALIDADES  CESEC_ESC_MODAL_PLN_EST on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00031b73", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESC_MODAL_PLN_EST"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_185", FK_COLUMNS="N_ID_ESCUELA""N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA OR 
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESC_MODAL_PLN_EST
      WHERE
        /*  %JoinFKPK(CESEC_ESC_MODAL_PLN_EST,:%Old," = "," AND") */
        CESEC_ESC_MODAL_PLN_EST.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_ESC_MODAL_PLN_EST.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELA_MODALIDADES because CESEC_ESC_MODAL_PLN_EST exists.'
      );
    END IF;
  END IF;

  /* CESEC_ESCUELA_MODALIDADES  CESEC_TURNOS_OPERANDO_ESCUELAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_253", FK_COLUMNS="N_ID_ESCUELA""N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA OR 
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    UPDATE CESEC_TURNOS_OPERANDO_ESCUELAS
      SET
        /* %SetFK(CESEC_TURNOS_OPERANDO_ESCUELAS,NULL) */
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_ESCUELA = NULL,
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_TURNOS_OPERANDO_ESCUELAS,:%Old," = ",",") */
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_ESCUELA = :old.N_ID_ESCUELA AND
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ESCUELAS AFTER DELETE ON CESEC_ESCUELAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000bee94", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_224", FK_COLUMNS="N_ID_ESCUELA_DESTINO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_ESCUELA_DESTINO = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ESCUELAS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_223", FK_COLUMNS="N_ID_ESCUELA_ORIGEN" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_ESCUELA_ORIGEN = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ESCUELAS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_HISTORICO_EVAL_EXTRAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_199", FK_COLUMNS="N_ID_ESCUELA" */
    UPDATE CESEC_HISTORICO_EVAL_EXTRAS
      SET
        /* %SetFK(CESEC_HISTORICO_EVAL_EXTRAS,NULL) */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_PLANTEL_INCIDENCIAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_154", FK_COLUMNS="N_ID_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLANTEL_INCIDENCIAS,:%Old," = "," AND") */
        CESEC_PLANTEL_INCIDENCIAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ESCUELAS because CESEC_PLANTEL_INCIDENCIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_AULAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_AULAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_304", FK_COLUMNS="N_ID_ESCUELA" */
    UPDATE CESEC_AULAS
      SET
        /* %SetFK(CESEC_AULAS,NULL) */
        CESEC_AULAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_AULAS,:%Old," = "," AND") */
        CESEC_AULAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_EVALUACION_EXTRAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_219", FK_COLUMNS="N_ID_ESCUELA" */
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = "," AND") */
        CESEC_EVALUACION_EXTRAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_FOLIO_CARTILLAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_234", FK_COLUMNS="N_ID_ESCUELA" */
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = "," AND") */
        CESEC_FOLIO_CARTILLAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_PERSONA_PLANTELES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONA_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_152", FK_COLUMNS="N_ID_PLANTEL" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERSONA_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_PERSONA_PLANTELES,:%Old," = "," AND") */
        CESEC_PERSONA_PLANTELES.N_ID_PLANTEL = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ESCUELAS because CESEC_PERSONA_PLANTELES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_TELEFONOS_PLANTELES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TELEFONOS_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_143", FK_COLUMNS="N_ID_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TELEFONOS_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_TELEFONOS_PLANTELES,:%Old," = "," AND") */
        CESEC_TELEFONOS_PLANTELES.N_ID_ESCUELA = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ESCUELAS because CESEC_TELEFONOS_PLANTELES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_GASTO_ESCUELA on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GASTO_ESCUELA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_227", FK_COLUMNS="N_ID_ESCUELA" */
    UPDATE CESEC_GASTO_ESCUELA
      SET
        /* %SetFK(CESEC_GASTO_ESCUELA,NULL) */
        CESEC_GASTO_ESCUELA.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_GASTO_ESCUELA,:%Old," = "," AND") */
        CESEC_GASTO_ESCUELA.N_ID_ESCUELA = :old.N_ID_ESCUELA;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_ESCUELA_MODALIDADES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELA_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_177", FK_COLUMNS="N_ID_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELA_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELA_MODALIDADES,:%Old," = "," AND") */
        CESEC_ESCUELA_MODALIDADES.N_ID_ESCUELA = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_ESCUELAS because CESEC_ESCUELA_MODALIDADES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ESCUELAS AFTER UPDATE ON CESEC_ESCUELAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000d74ff", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_224", FK_COLUMNS="N_ID_ESCUELA_DESTINO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_ESCUELA_DESTINO = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELAS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_223", FK_COLUMNS="N_ID_ESCUELA_ORIGEN" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_ESCUELA_ORIGEN = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELAS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;
  END IF;

  /* CESEC_ESCUELAS  CESEC_HISTORICO_EVAL_EXTRAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_199", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    UPDATE CESEC_HISTORICO_EVAL_EXTRAS
      SET
        /* %SetFK(CESEC_HISTORICO_EVAL_EXTRAS,NULL) */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = ",",") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_PLANTEL_INCIDENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_154", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLANTEL_INCIDENCIAS,:%Old," = "," AND") */
        CESEC_PLANTEL_INCIDENCIAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELAS because CESEC_PLANTEL_INCIDENCIAS exists.'
      );
    END IF;
  END IF;

  /* CESEC_ESCUELAS  CESEC_AULAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_AULAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_304", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    UPDATE CESEC_AULAS
      SET
        /* %SetFK(CESEC_AULAS,NULL) */
        CESEC_AULAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_AULAS,:%Old," = ",",") */
        CESEC_AULAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;
  END IF;

  /* CESEC_ESCUELAS  CESEC_EVALUACION_EXTRAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_219", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = ",",") */
        CESEC_EVALUACION_EXTRAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;
  END IF;

  /* CESEC_ESCUELAS  CESEC_FOLIO_CARTILLAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_234", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = ",",") */
        CESEC_FOLIO_CARTILLAS.N_ID_ESCUELA = :old.N_ID_ESCUELA;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_PERSONA_PLANTELES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONA_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_152", FK_COLUMNS="N_ID_PLANTEL" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERSONA_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_PERSONA_PLANTELES,:%Old," = "," AND") */
        CESEC_PERSONA_PLANTELES.N_ID_PLANTEL = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELAS because CESEC_PERSONA_PLANTELES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_TELEFONOS_PLANTELES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TELEFONOS_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_143", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TELEFONOS_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_TELEFONOS_PLANTELES,:%Old," = "," AND") */
        CESEC_TELEFONOS_PLANTELES.N_ID_ESCUELA = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELAS because CESEC_TELEFONOS_PLANTELES exists.'
      );
    END IF;
  END IF;

  /* CESEC_ESCUELAS  CESEC_GASTO_ESCUELA on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GASTO_ESCUELA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_227", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    UPDATE CESEC_GASTO_ESCUELA
      SET
        /* %SetFK(CESEC_GASTO_ESCUELA,NULL) */
        CESEC_GASTO_ESCUELA.N_ID_ESCUELA = NULL
      WHERE
        /* %JoinFKPK(CESEC_GASTO_ESCUELA,:%Old," = ",",") */
        CESEC_GASTO_ESCUELA.N_ID_ESCUELA = :old.N_ID_ESCUELA;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_ESCUELA_MODALIDADES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELA_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_177", FK_COLUMNS="N_ID_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESCUELA <> :new.N_ID_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELA_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELA_MODALIDADES,:%Old," = "," AND") */
        CESEC_ESCUELA_MODALIDADES.N_ID_ESCUELA = :old.N_ID_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESCUELAS because CESEC_ESCUELA_MODALIDADES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_ESTADISTICA_CUADRO_CO BEFORE INSERT ON CESEC_ESTADISTICA_CUADRO_CONS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_ESTADISTICA_CUADRO_CONS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_ESTADISTICA_CUADRO_CONS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00024992", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_153", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PERIODOS," = "," AND") */
        :new.N_ID_PERIODO = CESEC_PERIODOS.N_ID_PERIODO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_ESTADISTICA_CUADRO_CONS because CESEC_PERIODOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_ESTADISTICA_CUADRO_CONS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_151", FK_COLUMNS="N_ID_GRUPO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRUPOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_GRUPOS," = "," AND") */
        :new.N_ID_GRUPO = CESEC_GRUPOS.N_ID_GRUPO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_ESTADISTICA_CUADRO_CONS because CESEC_GRUPOS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ESTADISTICA_CUADRO_CO AFTER UPDATE ON CESEC_ESTADISTICA_CUADRO_CONS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ESTADISTICA_CUADRO_CONS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_ESTADISTICA_CUADRO_CONS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00024363", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_153", FK_COLUMNS="N_ID_PERIODO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PERIODOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PERIODOS," = "," AND") */
      :new.N_ID_PERIODO = CESEC_PERIODOS.N_ID_PERIODO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_ESTADISTICA_CUADRO_CONS because CESEC_PERIODOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRUPOS  CESEC_ESTADISTICA_CUADRO_CONS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_151", FK_COLUMNS="N_ID_GRUPO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_GRUPOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_GRUPOS," = "," AND") */
      :new.N_ID_GRUPO = CESEC_GRUPOS.N_ID_GRUPO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_ESTADISTICA_CUADRO_CONS because CESEC_GRUPOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ESTATUS_INCIDENCIA AFTER DELETE ON CESEC_ESTATUS_INCIDENCIA for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ESTATUS_INCIDENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ESTATUS_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000115e1", PARENT_OWNER="", PARENT_TABLE="CESEC_ESTATUS_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_157", FK_COLUMNS="N_ID_ESTATUS_INCIDENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLANTEL_INCIDENCIAS,:%Old," = "," AND") */
        CESEC_PLANTEL_INCIDENCIAS.N_ID_ESTATUS_INCIDENCIA = :old.N_ID_ESTATUS_INCIDENCIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ESTATUS_INCIDENCIA because CESEC_PLANTEL_INCIDENCIAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ESTATUS_INCIDENCIA AFTER UPDATE ON CESEC_ESTATUS_INCIDENCIA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ESTATUS_INCIDENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ESTATUS_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00015822", PARENT_OWNER="", PARENT_TABLE="CESEC_ESTATUS_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_157", FK_COLUMNS="N_ID_ESTATUS_INCIDENCIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ESTATUS_INCIDENCIA <> :new.N_ID_ESTATUS_INCIDENCIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLANTEL_INCIDENCIAS,:%Old," = "," AND") */
        CESEC_PLANTEL_INCIDENCIAS.N_ID_ESTATUS_INCIDENCIA = :old.N_ID_ESTATUS_INCIDENCIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ESTATUS_INCIDENCIA because CESEC_PLANTEL_INCIDENCIAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_ETNIA_INDIGENAS AFTER DELETE ON CESEC_ETNIA_INDIGENAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_ETNIA_INDIGENAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ETNIA_INDIGENAS  CESEC_CONTACTO_ALUMNOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00020e96", PARENT_OWNER="", PARENT_TABLE="CESEC_ETNIA_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_173", FK_COLUMNS="N_ID_ETNIA_INDIGENA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_ETNIA_INDIGENA = :old.N_ID_ETNIA_INDIGENA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_ETNIA_INDIGENAS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ETNIA_INDIGENAS  CESEC_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ETNIA_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_267", FK_COLUMNS="N_ID_ETNIA_INDIGENA" */
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_ETNIA_INDIGENA = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_ETNIA_INDIGENA = :old.N_ID_ETNIA_INDIGENA;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_ETNIA_INDIGENAS AFTER UPDATE ON CESEC_ETNIA_INDIGENAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_ETNIA_INDIGENAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ETNIA_INDIGENAS  CESEC_CONTACTO_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00026502", PARENT_OWNER="", PARENT_TABLE="CESEC_ETNIA_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_173", FK_COLUMNS="N_ID_ETNIA_INDIGENA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ETNIA_INDIGENA <> :new.N_ID_ETNIA_INDIGENA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_ETNIA_INDIGENA = :old.N_ID_ETNIA_INDIGENA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_ETNIA_INDIGENAS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_ETNIA_INDIGENAS  CESEC_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ETNIA_INDIGENAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_267", FK_COLUMNS="N_ID_ETNIA_INDIGENA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_ETNIA_INDIGENA <> :new.N_ID_ETNIA_INDIGENA
  THEN
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_ETNIA_INDIGENA = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = ",",") */
        CESEC_ALUMNOS.N_ID_ETNIA_INDIGENA = :old.N_ID_ETNIA_INDIGENA;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_EVAL_CERTIFICACIONES BEFORE INSERT ON CESEC_EVAL_CERTIFICACIONES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_EVAL_CERTIFICACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00062b0f", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_212", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
        :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_CERTIFICACIONES because CESEC_GRADO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVAL_CERTIFICACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_211", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
        :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_CERTIFICACIONES because CESEC_ALUMNOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_210", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_CERTIFICACIONES because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_EVAL_CERTIFICACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_209", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_MATERIAS," = "," AND") */
        :new.N_ID_MATERIA = CESEC_MATERIAS.N_ID_MATERIA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_CERTIFICACIONES because CESEC_MATERIAS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_CERTIFICACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_208", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
        :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_CERTIFICACIONES because CESEC_PLAN_ESTUDIOS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_EVAL_CERTIFICACIONES AFTER UPDATE ON CESEC_EVAL_CERTIFICACIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_EVAL_CERTIFICACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0006084f", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_212", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_GRADO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
      :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_CERTIFICACIONES because CESEC_GRADO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVAL_CERTIFICACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_211", FK_COLUMNS="N_ID_ALUMNO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ALUMNOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
      :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_CERTIFICACIONES because CESEC_ALUMNOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_210", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_CERTIFICACIONES because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_EVAL_CERTIFICACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_209", FK_COLUMNS="N_ID_MATERIA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_MATERIAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_MATERIAS," = "," AND") */
      :new.N_ID_MATERIA = CESEC_MATERIAS.N_ID_MATERIA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_CERTIFICACIONES because CESEC_MATERIAS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_CERTIFICACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_208", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PLAN_ESTUDIOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
      :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_CERTIFICACIONES because CESEC_PLAN_ESTUDIOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_EVAL_REVALIDACIONES BEFORE INSERT ON CESEC_EVAL_REVALIDACIONES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_EVAL_REVALIDACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_REVALIDACION  CESEC_EVAL_REVALIDACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00063ac1", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_REVALIDACION"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_169", FK_COLUMNS="N_ID_TIPO_REVALIDACION" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TIPO_REVALIDACION
      WHERE
        /* %JoinFKPK(:%New,CESEC_TIPO_REVALIDACION," = "," AND") */
        :new.N_ID_TIPO_REVALIDACION = CESEC_TIPO_REVALIDACION.N_ID_TIPO_REVALIDACION;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_REVALIDACIONES because CESEC_TIPO_REVALIDACION does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_168", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_REVALIDACIONES because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_167", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
        :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_REVALIDACIONES because CESEC_GRADO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVAL_REVALIDACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_166", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
        :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_REVALIDACIONES because CESEC_ALUMNOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_REVALIDACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_165", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
        :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVAL_REVALIDACIONES because CESEC_PLAN_ESTUDIOS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_EVAL_REVALIDACIONES AFTER UPDATE ON CESEC_EVAL_REVALIDACIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_EVAL_REVALIDACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_REVALIDACION  CESEC_EVAL_REVALIDACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00065d38", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_REVALIDACION"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_169", FK_COLUMNS="N_ID_TIPO_REVALIDACION" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_TIPO_REVALIDACION
    WHERE
      /* %JoinFKPK(:%New,CESEC_TIPO_REVALIDACION," = "," AND") */
      :new.N_ID_TIPO_REVALIDACION = CESEC_TIPO_REVALIDACION.N_ID_TIPO_REVALIDACION;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_REVALIDACIONES because CESEC_TIPO_REVALIDACION does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_168", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_REVALIDACIONES because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_167", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_GRADO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
      :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_REVALIDACIONES because CESEC_GRADO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVAL_REVALIDACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_166", FK_COLUMNS="N_ID_ALUMNO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ALUMNOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
      :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_REVALIDACIONES because CESEC_ALUMNOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_REVALIDACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_165", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PLAN_ESTUDIOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
      :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVAL_REVALIDACIONES because CESEC_PLAN_ESTUDIOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_EVALUACION_EXECIONES BEFORE INSERT ON CESEC_EVALUACION_EXECIONES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_EVALUACION_EXECIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_EXENCIONES  CESEC_EVALUACION_EXECIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0007a322", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_EXENCIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_164", FK_COLUMNS="N_ID_TIPO_EXENTO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TIPO_EXENCIONES
      WHERE
        /* %JoinFKPK(:%New,CESEC_TIPO_EXENCIONES," = "," AND") */
        :new.N_ID_TIPO_EXENTO = CESEC_TIPO_EXENCIONES.N_ID_TIPO_EXENTO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVALUACION_EXECIONES because CESEC_TIPO_EXENCIONES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVALUACION_EXECIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_163", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
        :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVALUACION_EXECIONES because CESEC_GRADO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_EVALUACION_EXECIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_162", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
        :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVALUACION_EXECIONES because CESEC_ALUMNOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXECIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_161", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVALUACION_EXECIONES because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_EVALUACION_EXECIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_160", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_MATERIAS," = "," AND") */
        :new.N_ID_MATERIA = CESEC_MATERIAS.N_ID_MATERIA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVALUACION_EXECIONES because CESEC_MATERIAS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_EVALUACION_EXECIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_159", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
        :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_EVALUACION_EXECIONES because CESEC_PLAN_ESTUDIOS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_EVALUACION_EXECIONES AFTER UPDATE ON CESEC_EVALUACION_EXECIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_EVALUACION_EXECIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_EXENCIONES  CESEC_EVALUACION_EXECIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00077473", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_EXENCIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_164", FK_COLUMNS="N_ID_TIPO_EXENTO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_TIPO_EXENCIONES
    WHERE
      /* %JoinFKPK(:%New,CESEC_TIPO_EXENCIONES," = "," AND") */
      :new.N_ID_TIPO_EXENTO = CESEC_TIPO_EXENCIONES.N_ID_TIPO_EXENTO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXECIONES because CESEC_TIPO_EXENCIONES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVALUACION_EXECIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_163", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_GRADO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
      :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXECIONES because CESEC_GRADO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_EVALUACION_EXECIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_162", FK_COLUMNS="N_ID_ALUMNO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ALUMNOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
      :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXECIONES because CESEC_ALUMNOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXECIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_161", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXECIONES because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_EVALUACION_EXECIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_160", FK_COLUMNS="N_ID_MATERIA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_MATERIAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_MATERIAS," = "," AND") */
      :new.N_ID_MATERIA = CESEC_MATERIAS.N_ID_MATERIA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXECIONES because CESEC_MATERIAS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_EVALUACION_EXECIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_159", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PLAN_ESTUDIOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
      :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXECIONES because CESEC_PLAN_ESTUDIOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_EVALUACION_EXTRAS BEFORE INSERT ON CESEC_EVALUACION_EXTRAS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_EVALUACION_EXTRAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXTRAS on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="0003a6aa", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_214", FK_COLUMNS="N_ID_CICLO_ESOLAR_APLICA" */
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESOLAR_APLICA = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CESEC_CICLO_ESCOLARES
            WHERE
              /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
              :new.N_ID_CICLO_ESOLAR_APLICA = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR
        ) 
        /* %JoinPKPK(CESEC_EVALUACION_EXTRAS,:%New," = "," AND") */
         and CESEC_EVALUACION_EXTRAS.N_ID_MATERIA = :new.N_ID_MATERIA AND
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESCOLAR = :new.N_ID_CICLO_ESCOLAR AND
        CESEC_EVALUACION_EXTRAS.N_ID_ALUMNO = :new.N_ID_ALUMNO AND
        CESEC_EVALUACION_EXTRAS.N_ID_GRADO_ESCOLAR = :new.N_ID_GRADO_ESCOLAR AND
        CESEC_EVALUACION_EXTRAS.N_ID_PLAN_ESTUDIOS = :new.N_ID_PLAN_ESTUDIOS;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_EVALUACION_EXTRAS on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_213", FK_COLUMNS="N_ID_PERIODO_APLICA" */
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_PERIODO_APLICA = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CESEC_PERIODOS
            WHERE
              /* %JoinFKPK(:%New,CESEC_PERIODOS," = "," AND") */
              :new.N_ID_PERIODO_APLICA = CESEC_PERIODOS.N_ID_PERIODO
        ) 
        /* %JoinPKPK(CESEC_EVALUACION_EXTRAS,:%New," = "," AND") */
         and CESEC_EVALUACION_EXTRAS.N_ID_MATERIA = :new.N_ID_MATERIA AND
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESCOLAR = :new.N_ID_CICLO_ESCOLAR AND
        CESEC_EVALUACION_EXTRAS.N_ID_ALUMNO = :new.N_ID_ALUMNO AND
        CESEC_EVALUACION_EXTRAS.N_ID_GRADO_ESCOLAR = :new.N_ID_GRADO_ESCOLAR AND
        CESEC_EVALUACION_EXTRAS.N_ID_PLAN_ESTUDIOS = :new.N_ID_PLAN_ESTUDIOS;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_EVALUACION_EXTRAS AFTER UPDATE ON CESEC_EVALUACION_EXTRAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_EVALUACION_EXTRAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_EVALUACION_EXTRAS on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00029086", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_214", FK_COLUMNS="N_ID_CICLO_ESOLAR_APLICA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESOLAR_APLICA = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.N_ID_CICLO_ESOLAR_APLICA IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXTRAS because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_EVALUACION_EXTRAS on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_213", FK_COLUMNS="N_ID_PERIODO_APLICA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PERIODOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PERIODOS," = "," AND") */
      :new.N_ID_PERIODO_APLICA = CESEC_PERIODOS.N_ID_PERIODO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.N_ID_PERIODO_APLICA IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_EVALUACION_EXTRAS because CESEC_PERIODOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_EVALUACION_MATERIA AFTER DELETE ON CESEC_EVALUACION_MATERIA for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_EVALUACION_MATERIA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_EVALUACION_MATERIA  CESEC_HISTORICO_EVAL_EXTRAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00099e4f", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_198", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_HISTORICO_EVAL_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_EVALUACION_MATERIA because CESEC_HISTORICO_EVAL_EXTRAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_EVALUACION_MATERIA  CESEC_PRE_EVAL_CAMPO_FORMATIVO on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_CAMPO_FORMATIVO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_207", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_CAMPO_FORMATIVO
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_CAMPO_FORMATIVO,:%Old," = "," AND") */
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_EVALUACION_MATERIA because CESEC_PRE_EVAL_CAMPO_FORMATIVO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_EVALUACION_MATERIA  CESEC_EVALUACION_EXTRAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_205", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = "," AND") */
        CESEC_EVALUACION_EXTRAS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVALUACION_EXTRAS.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_EVALUACION_EXTRAS.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_EVALUACION_EXTRAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_EVALUACION_MATERIA because CESEC_EVALUACION_EXTRAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_EVALUACION_MATERIA  CESEC_EVAL_HERR_FUNDAMENTALES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_HERR_FUNDAMENTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_209", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_HERR_FUNDAMENTALES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_HERR_FUNDAMENTALES,:%Old," = "," AND") */
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_EVALUACION_MATERIA because CESEC_EVAL_HERR_FUNDAMENTALES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_EVALUACION_MATERIA  CESEC_EVALUACION_REGULARES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_REGULARES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_202", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_REGULARES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_REGULARES,:%Old," = "," AND") */
        CESEC_EVALUACION_REGULARES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVALUACION_REGULARES.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVALUACION_REGULARES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_EVALUACION_REGULARES.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_EVALUACION_REGULARES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_EVALUACION_MATERIA because CESEC_EVALUACION_REGULARES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_EVALUACION_MATERIA AFTER UPDATE ON CESEC_EVALUACION_MATERIA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_EVALUACION_MATERIA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_EVALUACION_MATERIA  CESEC_HISTORICO_EVAL_EXTRAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000c4253", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_198", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR OR 
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO OR 
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_HISTORICO_EVAL_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_EVALUACION_MATERIA because CESEC_HISTORICO_EVAL_EXTRAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_EVALUACION_MATERIA  CESEC_PRE_EVAL_CAMPO_FORMATIVO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_CAMPO_FORMATIVO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_207", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR OR 
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO OR 
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_CAMPO_FORMATIVO
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_CAMPO_FORMATIVO,:%Old," = "," AND") */
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_EVALUACION_MATERIA because CESEC_PRE_EVAL_CAMPO_FORMATIVO exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_EVALUACION_MATERIA  CESEC_EVALUACION_EXTRAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_205", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR OR 
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO OR 
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = "," AND") */
        CESEC_EVALUACION_EXTRAS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVALUACION_EXTRAS.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVALUACION_EXTRAS.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_EVALUACION_EXTRAS.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_EVALUACION_EXTRAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_EVALUACION_MATERIA because CESEC_EVALUACION_EXTRAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_EVALUACION_MATERIA  CESEC_EVAL_HERR_FUNDAMENTALES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_HERR_FUNDAMENTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_209", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR OR 
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO OR 
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_HERR_FUNDAMENTALES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_HERR_FUNDAMENTALES,:%Old," = "," AND") */
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_EVALUACION_MATERIA because CESEC_EVAL_HERR_FUNDAMENTALES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_EVALUACION_MATERIA  CESEC_EVALUACION_REGULARES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_REGULARES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_202", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_CICLO_ESCOLAR <> :new.N_ID_CICLO_ESCOLAR OR 
    :old.N_ID_ALUMNO <> :new.N_ID_ALUMNO OR 
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_REGULARES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_REGULARES,:%Old," = "," AND") */
        CESEC_EVALUACION_REGULARES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVALUACION_REGULARES.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVALUACION_REGULARES.N_ID_CICLO_ESCOLAR = :old.N_ID_CICLO_ESCOLAR AND
        CESEC_EVALUACION_REGULARES.N_ID_ALUMNO = :old.N_ID_ALUMNO AND
        CESEC_EVALUACION_REGULARES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_EVALUACION_MATERIA because CESEC_EVALUACION_REGULARES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_FAMILIA_MODALIDADES AFTER DELETE ON CESEC_FAMILIA_MODALIDADES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_FAMILIA_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_FAMILIA_MODALIDADES  CESEC_MODALIDADES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00010c7a", PARENT_OWNER="", PARENT_TABLE="CESEC_FAMILIA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_230", FK_COLUMNS="N_ID_FAMILIA_MODALIDAD" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_MODALIDADES,:%Old," = "," AND") */
        CESEC_MODALIDADES.N_ID_FAMILIA_MODALIDAD = :old.N_ID_FAMILIA_MODALIDAD;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_FAMILIA_MODALIDADES because CESEC_MODALIDADES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_FAMILIA_MODALIDADES AFTER UPDATE ON CESEC_FAMILIA_MODALIDADES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_FAMILIA_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_FAMILIA_MODALIDADES  CESEC_MODALIDADES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00014777", PARENT_OWNER="", PARENT_TABLE="CESEC_FAMILIA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_230", FK_COLUMNS="N_ID_FAMILIA_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_FAMILIA_MODALIDAD <> :new.N_ID_FAMILIA_MODALIDAD
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_MODALIDADES,:%Old," = "," AND") */
        CESEC_MODALIDADES.N_ID_FAMILIA_MODALIDAD = :old.N_ID_FAMILIA_MODALIDAD;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_FAMILIA_MODALIDADES because CESEC_MODALIDADES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_FORMA_CALIF_MATERIAS AFTER DELETE ON CESEC_FORMA_CALIF_MATERIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_FORMA_CALIF_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_FORMA_CALIF_MATERIAS  CESEC_MATERIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00010d55", PARENT_OWNER="", PARENT_TABLE="CESEC_FORMA_CALIF_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_14", FK_COLUMNS="N_ID_FORMA_CALIFICA_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_MATERIAS,:%Old," = "," AND") */
        CESEC_MATERIAS.N_ID_FORMA_CALIFICA_MATERIA = :old.N_ID_FORMA_CALIFICA_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_FORMA_CALIF_MATERIAS because CESEC_MATERIAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_FORMA_CALIF_MATERIAS AFTER UPDATE ON CESEC_FORMA_CALIF_MATERIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_FORMA_CALIF_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_FORMA_CALIF_MATERIAS  CESEC_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00014c26", PARENT_OWNER="", PARENT_TABLE="CESEC_FORMA_CALIF_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_14", FK_COLUMNS="N_ID_FORMA_CALIFICA_MATERIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_FORMA_CALIFICA_MATERIA <> :new.N_ID_FORMA_CALIFICA_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_MATERIAS,:%Old," = "," AND") */
        CESEC_MATERIAS.N_ID_FORMA_CALIFICA_MATERIA = :old.N_ID_FORMA_CALIFICA_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_FORMA_CALIF_MATERIAS because CESEC_MATERIAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_FUNCION_REALES AFTER DELETE ON CESEC_FUNCION_REALES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_FUNCION_REALES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_FUNCION_REALES  CESEC_RESPONSABLE_FIRMAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0002139d", PARENT_OWNER="", PARENT_TABLE="CESEC_FUNCION_REALES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_RESPONSABLE_FIRMAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_182", FK_COLUMNS="N_ID_FUNCIONREAL" */
    UPDATE CESEC_RESPONSABLE_FIRMAS
      SET
        /* %SetFK(CESEC_RESPONSABLE_FIRMAS,NULL) */
        CESEC_RESPONSABLE_FIRMAS.N_ID_FUNCIONREAL = NULL
      WHERE
        /* %JoinFKPK(CESEC_RESPONSABLE_FIRMAS,:%Old," = "," AND") */
        CESEC_RESPONSABLE_FIRMAS.N_ID_FUNCIONREAL = :old.N_ID_FUNCION_REAL;

    /* ERwin Builtin Trigger */
    /* CESEC_FUNCION_REALES  CESEC_PERSONA_PLANTELES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_FUNCION_REALES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONA_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_185", FK_COLUMNS="N_ID_FUNCION_REAL" */
    UPDATE CESEC_PERSONA_PLANTELES
      SET
        /* %SetFK(CESEC_PERSONA_PLANTELES,NULL) */
        CESEC_PERSONA_PLANTELES.N_ID_FUNCION_REAL = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERSONA_PLANTELES,:%Old," = "," AND") */
        CESEC_PERSONA_PLANTELES.N_ID_FUNCION_REAL = :old.N_ID_FUNCION_REAL;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_FUNCION_REALES AFTER UPDATE ON CESEC_FUNCION_REALES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_FUNCION_REALES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_FUNCION_REALES  CESEC_RESPONSABLE_FIRMAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00026af9", PARENT_OWNER="", PARENT_TABLE="CESEC_FUNCION_REALES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_RESPONSABLE_FIRMAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_182", FK_COLUMNS="N_ID_FUNCIONREAL" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_FUNCION_REAL <> :new.N_ID_FUNCION_REAL
  THEN
    UPDATE CESEC_RESPONSABLE_FIRMAS
      SET
        /* %SetFK(CESEC_RESPONSABLE_FIRMAS,NULL) */
        CESEC_RESPONSABLE_FIRMAS.N_ID_FUNCIONREAL = NULL
      WHERE
        /* %JoinFKPK(CESEC_RESPONSABLE_FIRMAS,:%Old," = ",",") */
        CESEC_RESPONSABLE_FIRMAS.N_ID_FUNCIONREAL = :old.N_ID_FUNCION_REAL;
  END IF;

  /* CESEC_FUNCION_REALES  CESEC_PERSONA_PLANTELES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_FUNCION_REALES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONA_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_185", FK_COLUMNS="N_ID_FUNCION_REAL" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_FUNCION_REAL <> :new.N_ID_FUNCION_REAL
  THEN
    UPDATE CESEC_PERSONA_PLANTELES
      SET
        /* %SetFK(CESEC_PERSONA_PLANTELES,NULL) */
        CESEC_PERSONA_PLANTELES.N_ID_FUNCION_REAL = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERSONA_PLANTELES,:%Old," = ",",") */
        CESEC_PERSONA_PLANTELES.N_ID_FUNCION_REAL = :old.N_ID_FUNCION_REAL;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_GRADO_ESCOLARES AFTER DELETE ON CESEC_GRADO_ESCOLARES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_GRADO_ESCOLARES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000d2e2b", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_220", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ASIGNACION_FOLIOS
      WHERE
        /*  %JoinFKPK(CESEC_ASIGNACION_FOLIOS,:%Old," = "," AND") */
        CESEC_ASIGNACION_FOLIOS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_GRADO_ESCOLARES because CESEC_ASIGNACION_FOLIOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_212", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_GRADO_ESCOLARES because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_PROMEDIO_GRADO on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_205", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_GRADO_ESCOLARES because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_167", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_GRADO_ESCOLARES because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVALUACION_EXECIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_163", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_GRADO_ESCOLARES because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_EXAMEN_GRAL_C on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_EXAMEN_GRAL_C"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_216", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_EXAMEN_GRAL_C
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_EXAMEN_GRAL_C,:%Old," = "," AND") */
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_GRADO_ESCOLARES because CESEC_EVAL_EXAMEN_GRAL_C exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_255", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_GRADO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_PLAN_ESTUDIO_MATERIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_306", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIO_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLAN_ESTUDIO_MATERIAS,:%Old," = "," AND") */
        CESEC_PLAN_ESTUDIO_MATERIAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_GRADO_ESCOLARES because CESEC_PLAN_ESTUDIO_MATERIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_INSCRIPCION_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_186", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_GRADO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_PERIODO_INASISTENCIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_278", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_GRADO_ESCOLARES because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_COMPRENSIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_274", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_GRADO_ESCOLARES because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_GRADO_ESCOLARES AFTER UPDATE ON CESEC_GRADO_ESCOLARES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_GRADO_ESCOLARES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_ASIGNACION_FOLIOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000f215e", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ASIGNACION_FOLIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_220", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ASIGNACION_FOLIOS
      WHERE
        /*  %JoinFKPK(CESEC_ASIGNACION_FOLIOS,:%Old," = "," AND") */
        CESEC_ASIGNACION_FOLIOS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_ASIGNACION_FOLIOS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_CERTIFICACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_212", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_PROMEDIO_GRADO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_205", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_REVALIDACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_167", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVALUACION_EXECIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_163", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_EXAMEN_GRAL_C on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_EXAMEN_GRAL_C"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_216", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_EXAMEN_GRAL_C
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_EXAMEN_GRAL_C,:%Old," = "," AND") */
        CESEC_EVAL_EXAMEN_GRAL_C.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_EVAL_EXAMEN_GRAL_C exists.'
      );
    END IF;
  END IF;

  /* CESEC_GRADO_ESCOLARES  CESEC_GRUPOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_255", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_GRADO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = ",",") */
        CESEC_GRUPOS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_PLAN_ESTUDIO_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_306", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIO_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLAN_ESTUDIO_MATERIAS,:%Old," = "," AND") */
        CESEC_PLAN_ESTUDIO_MATERIAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_PLAN_ESTUDIO_MATERIAS exists.'
      );
    END IF;
  END IF;

  /* CESEC_GRADO_ESCOLARES  CESEC_INSCRIPCION_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_186", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_GRADO_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = ",",") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_PERIODO_INASISTENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_278", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_EVAL_COMPRENSIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_274", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRADO_ESCOLARES because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_GRUPOS AFTER DELETE ON CESEC_GRUPOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_GRUPOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_ESTADISTICA_CUADRO_CONS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00064605", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_151", FK_COLUMNS="N_ID_GRUPO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESTADISTICA_CUADRO_CONS
      WHERE
        /*  %JoinFKPK(CESEC_ESTADISTICA_CUADRO_CONS,:%Old," = "," AND") */
        CESEC_ESTADISTICA_CUADRO_CONS.N_ID_GRUPO = :old.N_ID_GRUPO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_GRUPOS because CESEC_ESTADISTICA_CUADRO_CONS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_MAT_GPO_TALLER_ARTES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MAT_GPO_TALLER_ARTES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_259", FK_COLUMNS="N_ID_GRUPO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MAT_GPO_TALLER_ARTES
      WHERE
        /*  %JoinFKPK(CESEC_MAT_GPO_TALLER_ARTES,:%Old," = "," AND") */
        CESEC_MAT_GPO_TALLER_ARTES.N_ID_GRUPO = :old.N_ID_GRUPO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_GRUPOS because CESEC_MAT_GPO_TALLER_ARTES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_LECTURA_EVALUACIONES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_307", FK_COLUMNS="N_ID_GRUPO" */
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = "," AND") */
        CESEC_LECTURA_EVALUACIONES.N_ID_GRUPO = :old.N_ID_GRUPO;

    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_FOLIO_CARTILLAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_231", FK_COLUMNS="N_ID_GRUPO" */
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = "," AND") */
        CESEC_FOLIO_CARTILLAS.N_ID_GRUPO = :old.N_ID_GRUPO;

    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_INSCRIPCION_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_316", FK_COLUMNS="N_ID_GRUPO" */
    UPDATE CESEC_INSCRIPCION_GRUPOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_GRUPOS,NULL) */
        CESEC_INSCRIPCION_GRUPOS.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_GRUPOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_GRUPOS.N_ID_GRUPO = :old.N_ID_GRUPO;

    /* ERwin Builtin Trigger */
    /* CESEC_GRUPOS  CESEC_DOCENTE_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOCENTE_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_210", FK_COLUMNS="N_ID_GRUPO" */
    UPDATE CESEC_DOCENTE_GRUPOS
      SET
        /* %SetFK(CESEC_DOCENTE_GRUPOS,NULL) */
        CESEC_DOCENTE_GRUPOS.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOCENTE_GRUPOS,:%Old," = "," AND") */
        CESEC_DOCENTE_GRUPOS.N_ID_GRUPO = :old.N_ID_GRUPO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_GRUPOS AFTER UPDATE ON CESEC_GRUPOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_GRUPOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_GRUPOS  CESEC_ESTADISTICA_CUADRO_CONS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00072bfc", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_151", FK_COLUMNS="N_ID_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRUPO <> :new.N_ID_GRUPO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESTADISTICA_CUADRO_CONS
      WHERE
        /*  %JoinFKPK(CESEC_ESTADISTICA_CUADRO_CONS,:%Old," = "," AND") */
        CESEC_ESTADISTICA_CUADRO_CONS.N_ID_GRUPO = :old.N_ID_GRUPO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRUPOS because CESEC_ESTADISTICA_CUADRO_CONS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRUPOS  CESEC_MAT_GPO_TALLER_ARTES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MAT_GPO_TALLER_ARTES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_259", FK_COLUMNS="N_ID_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRUPO <> :new.N_ID_GRUPO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MAT_GPO_TALLER_ARTES
      WHERE
        /*  %JoinFKPK(CESEC_MAT_GPO_TALLER_ARTES,:%Old," = "," AND") */
        CESEC_MAT_GPO_TALLER_ARTES.N_ID_GRUPO = :old.N_ID_GRUPO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRUPOS because CESEC_MAT_GPO_TALLER_ARTES exists.'
      );
    END IF;
  END IF;

  /* CESEC_GRUPOS  CESEC_LECTURA_EVALUACIONES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_307", FK_COLUMNS="N_ID_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRUPO <> :new.N_ID_GRUPO
  THEN
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = ",",") */
        CESEC_LECTURA_EVALUACIONES.N_ID_GRUPO = :old.N_ID_GRUPO;
  END IF;

  /* CESEC_GRUPOS  CESEC_FOLIO_CARTILLAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_231", FK_COLUMNS="N_ID_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRUPO <> :new.N_ID_GRUPO
  THEN
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = ",",") */
        CESEC_FOLIO_CARTILLAS.N_ID_GRUPO = :old.N_ID_GRUPO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRUPOS  CESEC_INSCRIPCION_GRUPOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_316", FK_COLUMNS="N_ID_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRUPO <> :new.N_ID_GRUPO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INSCRIPCION_GRUPOS
      WHERE
        /*  %JoinFKPK(CESEC_INSCRIPCION_GRUPOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_GRUPOS.N_ID_GRUPO = :old.N_ID_GRUPO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_GRUPOS because CESEC_INSCRIPCION_GRUPOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_GRUPOS  CESEC_DOCENTE_GRUPOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOCENTE_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_210", FK_COLUMNS="N_ID_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_GRUPO <> :new.N_ID_GRUPO
  THEN
    UPDATE CESEC_DOCENTE_GRUPOS
      SET
        /* %SetFK(CESEC_DOCENTE_GRUPOS,NULL) */
        CESEC_DOCENTE_GRUPOS.N_ID_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOCENTE_GRUPOS,:%Old," = ",",") */
        CESEC_DOCENTE_GRUPOS.N_ID_GRUPO = :old.N_ID_GRUPO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_HISTORICO_EVAL_EXTRAS BEFORE INSERT ON CESEC_HISTORICO_EVAL_EXTRAS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_HISTORICO_EVAL_EXTRAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_HISTORICO_EVAL_EXTRAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="000672df", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_202", FK_COLUMNS="N_ID_CICLO_ESCOLAR_APLICA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR_APLICA = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_HISTORICO_EVAL_EXTRAS because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_HISTORICO_EVAL_EXTRAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_201", FK_COLUMNS="N_ID_PERIODO_APLICA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PERIODOS," = "," AND") */
        :new.N_ID_PERIODO_APLICA = CESEC_PERIODOS.N_ID_PERIODO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_HISTORICO_EVAL_EXTRAS because CESEC_PERIODOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_HISTORICO_EVAL_EXTRAS on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_199", FK_COLUMNS="N_ID_ESCUELA" */
    UPDATE CESEC_HISTORICO_EVAL_EXTRAS
      SET
        /* %SetFK(CESEC_HISTORICO_EVAL_EXTRAS,NULL) */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ESCUELA = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CESEC_ESCUELAS
            WHERE
              /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
              :new.N_ID_ESCUELA = CESEC_ESCUELAS.N_ID_ESCUELA
        ) 
        /* %JoinPKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%New," = "," AND") */
         and CESEC_HISTORICO_EVAL_EXTRAS.N_ID_MATERIA = :new.N_ID_MATERIA AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_CICLO_ESCOLAR = :new.N_ID_CICLO_ESCOLAR AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_ALUMNO = :new.N_ID_ALUMNO AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_GRADO_ESCOLAR = :new.N_ID_GRADO_ESCOLAR AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_PLAN_ESTUDIOS = :new.N_ID_PLAN_ESTUDIOS AND
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_PERIODO_APLICA = :new.N_ID_PERIODO_APLICA;

    /* ERwin Builtin Trigger */
    /* CESEC_EVALUACION_MATERIA  CESEC_HISTORICO_EVAL_EXTRAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_198", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /* %JoinFKPK(:%New,CESEC_EVALUACION_MATERIA," = "," AND") */
        :new.N_ID_PLAN_ESTUDIOS = CESEC_EVALUACION_MATERIA.N_ID_PLAN_ESTUDIOS AND
        :new.N_ID_MATERIA = CESEC_EVALUACION_MATERIA.N_ID_MATERIA AND
        :new.N_ID_CICLO_ESCOLAR = CESEC_EVALUACION_MATERIA.N_ID_CICLO_ESCOLAR AND
        :new.N_ID_ALUMNO = CESEC_EVALUACION_MATERIA.N_ID_ALUMNO AND
        :new.N_ID_GRADO_ESCOLAR = CESEC_EVALUACION_MATERIA.N_ID_GRADO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_HISTORICO_EVAL_EXTRAS because CESEC_EVALUACION_MATERIA does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_HISTORICO_EVAL_EXTRAS AFTER UPDATE ON CESEC_HISTORICO_EVAL_EXTRAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_HISTORICO_EVAL_EXTRAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_HISTORICO_EVAL_EXTRAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0005b29d", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_202", FK_COLUMNS="N_ID_CICLO_ESCOLAR_APLICA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR_APLICA = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_HISTORICO_EVAL_EXTRAS because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_HISTORICO_EVAL_EXTRAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_201", FK_COLUMNS="N_ID_PERIODO_APLICA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PERIODOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PERIODOS," = "," AND") */
      :new.N_ID_PERIODO_APLICA = CESEC_PERIODOS.N_ID_PERIODO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_HISTORICO_EVAL_EXTRAS because CESEC_PERIODOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_HISTORICO_EVAL_EXTRAS on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_199", FK_COLUMNS="N_ID_ESCUELA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ESCUELAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
      :new.N_ID_ESCUELA = CESEC_ESCUELAS.N_ID_ESCUELA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.N_ID_ESCUELA IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_HISTORICO_EVAL_EXTRAS because CESEC_ESCUELAS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_EVALUACION_MATERIA  CESEC_HISTORICO_EVAL_EXTRAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_EVALUACION_MATERIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_198", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_CICLO_ESCOLAR""N_ID_ALUMNO""
              N_ID_GRADO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_EVALUACION_MATERIA
    WHERE
      /* %JoinFKPK(:%New,CESEC_EVALUACION_MATERIA," = "," AND") */
      :new.N_ID_PLAN_ESTUDIOS = CESEC_EVALUACION_MATERIA.N_ID_PLAN_ESTUDIOS AND
      :new.N_ID_MATERIA = CESEC_EVALUACION_MATERIA.N_ID_MATERIA AND
      :new.N_ID_CICLO_ESCOLAR = CESEC_EVALUACION_MATERIA.N_ID_CICLO_ESCOLAR AND
      :new.N_ID_ALUMNO = CESEC_EVALUACION_MATERIA.N_ID_ALUMNO AND
      :new.N_ID_GRADO_ESCOLAR = CESEC_EVALUACION_MATERIA.N_ID_GRADO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_HISTORICO_EVAL_EXTRAS because CESEC_EVALUACION_MATERIA does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_INSCRIPCION_ALUMNOS AFTER DELETE ON CESEC_INSCRIPCION_ALUMNOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_INSCRIPCION_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_INSCRIPCION_ALUMNOS  CESEC_MOVIMIENTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="000260f7", PARENT_OWNER="", PARENT_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MOVIMIENTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_211", FK_COLUMNS="N_ID_INSCRIPCION_ALUMNO" */
    UPDATE CESEC_MOVIMIENTO_ALUMNOS
      SET
        /* %SetFK(CESEC_MOVIMIENTO_ALUMNOS,NULL) */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_INSCRIPCION_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_MOVIMIENTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_INSCRIPCION_ALUMNO = :old.N_ID_INSCRIPCION_ALUMNO;

    /* ERwin Builtin Trigger */
    /* CESEC_INSCRIPCION_ALUMNOS  CESEC_INSCRIPCION_GRUPOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_317", FK_COLUMNS="N_ID_INSCRIPCION_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INSCRIPCION_GRUPOS
      WHERE
        /*  %JoinFKPK(CESEC_INSCRIPCION_GRUPOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_GRUPOS.N_ID_INSCRIPCION_ALUMNO = :old.N_ID_INSCRIPCION_ALUMNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_INSCRIPCION_ALUMNOS because CESEC_INSCRIPCION_GRUPOS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_INSCRIPCION_ALUMNOS AFTER UPDATE ON CESEC_INSCRIPCION_ALUMNOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_INSCRIPCION_ALUMNOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_INSCRIPCION_ALUMNOS  CESEC_MOVIMIENTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0002bcfd", PARENT_OWNER="", PARENT_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MOVIMIENTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_211", FK_COLUMNS="N_ID_INSCRIPCION_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_INSCRIPCION_ALUMNO <> :new.N_ID_INSCRIPCION_ALUMNO
  THEN
    UPDATE CESEC_MOVIMIENTO_ALUMNOS
      SET
        /* %SetFK(CESEC_MOVIMIENTO_ALUMNOS,NULL) */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_INSCRIPCION_ALUMNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_MOVIMIENTO_ALUMNOS,:%Old," = ",",") */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_INSCRIPCION_ALUMNO = :old.N_ID_INSCRIPCION_ALUMNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_INSCRIPCION_ALUMNOS  CESEC_INSCRIPCION_GRUPOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_317", FK_COLUMNS="N_ID_INSCRIPCION_ALUMNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_INSCRIPCION_ALUMNO <> :new.N_ID_INSCRIPCION_ALUMNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INSCRIPCION_GRUPOS
      WHERE
        /*  %JoinFKPK(CESEC_INSCRIPCION_GRUPOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_GRUPOS.N_ID_INSCRIPCION_ALUMNO = :old.N_ID_INSCRIPCION_ALUMNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_INSCRIPCION_ALUMNOS because CESEC_INSCRIPCION_GRUPOS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_INSCRIPCION_TIPO_MOV AFTER DELETE ON CESEC_INSCRIPCION_TIPO_MOV for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_INSCRIPCION_TIPO_MOV 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_INSCRIPCION_TIPO_MOV  CESEC_MOTIVOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000ef1c", PARENT_OWNER="", PARENT_TABLE="CESEC_INSCRIPCION_TIPO_MOV"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MOTIVOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_268", FK_COLUMNS="N_ID_TIPO_MOV_INSCRIPCION" */
    UPDATE CESEC_MOTIVOS
      SET
        /* %SetFK(CESEC_MOTIVOS,NULL) */
        CESEC_MOTIVOS.N_ID_TIPO_MOV_INSCRIPCION = NULL
      WHERE
        /* %JoinFKPK(CESEC_MOTIVOS,:%Old," = "," AND") */
        CESEC_MOTIVOS.N_ID_TIPO_MOV_INSCRIPCION = :old.N_ID_TIPO_MOV_INSCRIPCION;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_INSCRIPCION_TIPO_MOV AFTER UPDATE ON CESEC_INSCRIPCION_TIPO_MOV for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_INSCRIPCION_TIPO_MOV 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_INSCRIPCION_TIPO_MOV  CESEC_MOTIVOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00011d6f", PARENT_OWNER="", PARENT_TABLE="CESEC_INSCRIPCION_TIPO_MOV"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MOTIVOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_268", FK_COLUMNS="N_ID_TIPO_MOV_INSCRIPCION" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_MOV_INSCRIPCION <> :new.N_ID_TIPO_MOV_INSCRIPCION
  THEN
    UPDATE CESEC_MOTIVOS
      SET
        /* %SetFK(CESEC_MOTIVOS,NULL) */
        CESEC_MOTIVOS.N_ID_TIPO_MOV_INSCRIPCION = NULL
      WHERE
        /* %JoinFKPK(CESEC_MOTIVOS,:%Old," = ",",") */
        CESEC_MOTIVOS.N_ID_TIPO_MOV_INSCRIPCION = :old.N_ID_TIPO_MOV_INSCRIPCION;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_LECTURA_EVALUACIONES AFTER DELETE ON CESEC_LECTURA_EVALUACIONES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_LECTURA_EVALUACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_LECTURA_EVALUACIONES  CESEC_ALUMNO_LEC_EVALUA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00012352", PARENT_OWNER="", PARENT_TABLE="CESEC_LECTURA_EVALUACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_LEC_EVALUA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_239", FK_COLUMNS="N_ID_LECTURA_EVALUACION" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_LEC_EVALUA
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_LEC_EVALUA,:%Old," = "," AND") */
        CESEC_ALUMNO_LEC_EVALUA.N_ID_LECTURA_EVALUACION = :old.N_ID_LECTURA_EVALUACION;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_LECTURA_EVALUACIONES because CESEC_ALUMNO_LEC_EVALUA exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_LECTURA_EVALUACIONES AFTER UPDATE ON CESEC_LECTURA_EVALUACIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_LECTURA_EVALUACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_LECTURA_EVALUACIONES  CESEC_ALUMNO_LEC_EVALUA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00015f03", PARENT_OWNER="", PARENT_TABLE="CESEC_LECTURA_EVALUACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_LEC_EVALUA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_239", FK_COLUMNS="N_ID_LECTURA_EVALUACION" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_LECTURA_EVALUACION <> :new.N_ID_LECTURA_EVALUACION
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNO_LEC_EVALUA
      WHERE
        /*  %JoinFKPK(CESEC_ALUMNO_LEC_EVALUA,:%Old," = "," AND") */
        CESEC_ALUMNO_LEC_EVALUA.N_ID_LECTURA_EVALUACION = :old.N_ID_LECTURA_EVALUACION;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_LECTURA_EVALUACIONES because CESEC_ALUMNO_LEC_EVALUA exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_LECTURA_HABILIDADES AFTER DELETE ON CESEC_LECTURA_HABILIDADES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_LECTURA_HABILIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_LECTURA_HABILIDADES  CESEC_LECTURA_EVALUACIONES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="000109d8", PARENT_OWNER="", PARENT_TABLE="CESEC_LECTURA_HABILIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_238", FK_COLUMNS="N_ID_LECTURA_HABILIDAD" */
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_LECTURA_HABILIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = "," AND") */
        CESEC_LECTURA_EVALUACIONES.N_ID_LECTURA_HABILIDAD = :old.N_ID_LECTURA_HABILIDAD;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_LECTURA_HABILIDADES AFTER UPDATE ON CESEC_LECTURA_HABILIDADES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_LECTURA_HABILIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_LECTURA_HABILIDADES  CESEC_LECTURA_EVALUACIONES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00013bd4", PARENT_OWNER="", PARENT_TABLE="CESEC_LECTURA_HABILIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_238", FK_COLUMNS="N_ID_LECTURA_HABILIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_LECTURA_HABILIDAD <> :new.N_ID_LECTURA_HABILIDAD
  THEN
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_LECTURA_HABILIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = ",",") */
        CESEC_LECTURA_EVALUACIONES.N_ID_LECTURA_HABILIDAD = :old.N_ID_LECTURA_HABILIDAD;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_MAT_GPO_TALLER_ARTES BEFORE INSERT ON CESEC_MAT_GPO_TALLER_ARTES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_MAT_GPO_TALLER_ARTES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ENFASIS_MATERIAS  CESEC_MAT_GPO_TALLER_ARTES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0001541f", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MAT_GPO_TALLER_ARTES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_148", FK_COLUMNS="N_ID_MATERIA""N_ID_ENFASIS_TALLER" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENFASIS_MATERIAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ENFASIS_MATERIAS," = "," AND") */
        :new.N_ID_MATERIA = CESEC_ENFASIS_MATERIAS.N_ID_MATERIA AND
        :new.N_ID_ENFASIS_TALLER = CESEC_ENFASIS_MATERIAS.N_ID_ENFASIS_TALLER;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_MAT_GPO_TALLER_ARTES because CESEC_ENFASIS_MATERIAS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_MAT_GPO_TALLER_ARTES AFTER UPDATE ON CESEC_MAT_GPO_TALLER_ARTES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_MAT_GPO_TALLER_ARTES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ENFASIS_MATERIAS  CESEC_MAT_GPO_TALLER_ARTES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0001563f", PARENT_OWNER="", PARENT_TABLE="CESEC_ENFASIS_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MAT_GPO_TALLER_ARTES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_148", FK_COLUMNS="N_ID_MATERIA""N_ID_ENFASIS_TALLER" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ENFASIS_MATERIAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ENFASIS_MATERIAS," = "," AND") */
      :new.N_ID_MATERIA = CESEC_ENFASIS_MATERIAS.N_ID_MATERIA AND
      :new.N_ID_ENFASIS_TALLER = CESEC_ENFASIS_MATERIAS.N_ID_ENFASIS_TALLER;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_MAT_GPO_TALLER_ARTES because CESEC_ENFASIS_MATERIAS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_MATERIAS AFTER DELETE ON CESEC_MATERIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_EVAL_CERTIFICACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="0005bec3", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_209", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_MATERIAS because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_EVALUACION_EXECIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_160", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_MATERIAS because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_ENFASIS_MATERIAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_145", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENFASIS_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_ENFASIS_MATERIAS,:%Old," = "," AND") */
        CESEC_ENFASIS_MATERIAS.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_MATERIAS because CESEC_ENFASIS_MATERIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_PLAN_ESTUDIO_MATERIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_220", FK_COLUMNS="N_ID_MATERIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIO_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLAN_ESTUDIO_MATERIAS,:%Old," = "," AND") */
        CESEC_PLAN_ESTUDIO_MATERIAS.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_MATERIAS because CESEC_PLAN_ESTUDIO_MATERIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MATERIAS  CESEC_CONF_MAT_NO_APLICA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONF_MAT_NO_APLICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_56", FK_COLUMNS="N_ID_ASIGNATURA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONF_MAT_NO_APLICA
      WHERE
        /*  %JoinFKPK(CESEC_CONF_MAT_NO_APLICA,:%Old," = "," AND") */
        CESEC_CONF_MAT_NO_APLICA.N_ID_ASIGNATURA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_MATERIAS because CESEC_CONF_MAT_NO_APLICA exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_MATERIAS AFTER UPDATE ON CESEC_MATERIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_EVAL_CERTIFICACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00069f88", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_209", FK_COLUMNS="N_ID_MATERIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MATERIAS because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_EVALUACION_EXECIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_160", FK_COLUMNS="N_ID_MATERIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MATERIAS because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_ENFASIS_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENFASIS_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_145", FK_COLUMNS="N_ID_MATERIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ENFASIS_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_ENFASIS_MATERIAS,:%Old," = "," AND") */
        CESEC_ENFASIS_MATERIAS.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MATERIAS because CESEC_ENFASIS_MATERIAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_PLAN_ESTUDIO_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_220", FK_COLUMNS="N_ID_MATERIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIO_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLAN_ESTUDIO_MATERIAS,:%Old," = "," AND") */
        CESEC_PLAN_ESTUDIO_MATERIAS.N_ID_MATERIA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MATERIAS because CESEC_PLAN_ESTUDIO_MATERIAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MATERIAS  CESEC_CONF_MAT_NO_APLICA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONF_MAT_NO_APLICA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_56", FK_COLUMNS="N_ID_ASIGNATURA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONF_MAT_NO_APLICA
      WHERE
        /*  %JoinFKPK(CESEC_CONF_MAT_NO_APLICA,:%Old," = "," AND") */
        CESEC_CONF_MAT_NO_APLICA.N_ID_ASIGNATURA = :old.N_ID_MATERIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MATERIAS because CESEC_CONF_MAT_NO_APLICA exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_MODALIDAD_PERIODOS AFTER DELETE ON CESEC_MODALIDAD_PERIODOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_MODALIDAD_PERIODOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MODALIDAD_PERIODOS  CESEC_PERIODO_EVALUACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000126e6", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDAD_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_207", FK_COLUMNS="N_ID_MODALIDAD_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_EVALUACIONES
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_EVALUACIONES,:%Old," = "," AND") */
        CESEC_PERIODO_EVALUACIONES.N_ID_MODALIDAD_PERIODO = :old.N_ID_MODALIDAD_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_MODALIDAD_PERIODOS because CESEC_PERIODO_EVALUACIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_MODALIDAD_PERIODOS AFTER UPDATE ON CESEC_MODALIDAD_PERIODOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_MODALIDAD_PERIODOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_MODALIDAD_PERIODOS  CESEC_PERIODO_EVALUACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00015577", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDAD_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_207", FK_COLUMNS="N_ID_MODALIDAD_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MODALIDAD_PERIODO <> :new.N_ID_MODALIDAD_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_EVALUACIONES
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_EVALUACIONES,:%Old," = "," AND") */
        CESEC_PERIODO_EVALUACIONES.N_ID_MODALIDAD_PERIODO = :old.N_ID_MODALIDAD_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MODALIDAD_PERIODOS because CESEC_PERIODO_EVALUACIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_MODALIDADES BEFORE INSERT ON CESEC_MODALIDADES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_FAMILIA_MODALIDADES  CESEC_MODALIDADES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00013738", PARENT_OWNER="", PARENT_TABLE="CESEC_FAMILIA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_230", FK_COLUMNS="N_ID_FAMILIA_MODALIDAD" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_FAMILIA_MODALIDADES
      WHERE
        /* %JoinFKPK(:%New,CESEC_FAMILIA_MODALIDADES," = "," AND") */
        :new.N_ID_FAMILIA_MODALIDAD = CESEC_FAMILIA_MODALIDADES.N_ID_FAMILIA_MODALIDAD;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_MODALIDADES because CESEC_FAMILIA_MODALIDADES does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CESEC_MODALIDADES AFTER DELETE ON CESEC_MODALIDADES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MODALIDADES  CESEC_RESPONSABLE_FIRMAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="000350df", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_RESPONSABLE_FIRMAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_206", FK_COLUMNS="N_ID_MODALIDAD" */
    UPDATE CESEC_RESPONSABLE_FIRMAS
      SET
        /* %SetFK(CESEC_RESPONSABLE_FIRMAS,NULL) */
        CESEC_RESPONSABLE_FIRMAS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_RESPONSABLE_FIRMAS,:%Old," = "," AND") */
        CESEC_RESPONSABLE_FIRMAS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;

    /* ERwin Builtin Trigger */
    /* CESEC_MODALIDADES  CESEC_MODALIDAD_PERIODOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDAD_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_280", FK_COLUMNS="N_ID_MODALIDAD" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDAD_PERIODOS
      WHERE
        /*  %JoinFKPK(CESEC_MODALIDAD_PERIODOS,:%Old," = "," AND") */
        CESEC_MODALIDAD_PERIODOS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_MODALIDADES because CESEC_MODALIDAD_PERIODOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MODALIDADES  CESEC_ESCUELA_MODALIDADES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELA_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_213", FK_COLUMNS="N_ID_MODALIDAD" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELA_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELA_MODALIDADES,:%Old," = "," AND") */
        CESEC_ESCUELA_MODALIDADES.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_MODALIDADES because CESEC_ESCUELA_MODALIDADES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_MODALIDADES AFTER UPDATE ON CESEC_MODALIDADES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_MODALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_MODALIDADES  CESEC_RESPONSABLE_FIRMAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="000530f3", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_RESPONSABLE_FIRMAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_206", FK_COLUMNS="N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    UPDATE CESEC_RESPONSABLE_FIRMAS
      SET
        /* %SetFK(CESEC_RESPONSABLE_FIRMAS,NULL) */
        CESEC_RESPONSABLE_FIRMAS.N_ID_MODALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_RESPONSABLE_FIRMAS,:%Old," = ",",") */
        CESEC_RESPONSABLE_FIRMAS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MODALIDADES  CESEC_MODALIDAD_PERIODOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDAD_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_280", FK_COLUMNS="N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDAD_PERIODOS
      WHERE
        /*  %JoinFKPK(CESEC_MODALIDAD_PERIODOS,:%Old," = "," AND") */
        CESEC_MODALIDAD_PERIODOS.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MODALIDADES because CESEC_MODALIDAD_PERIODOS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_MODALIDADES  CESEC_ESCUELA_MODALIDADES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELA_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_213", FK_COLUMNS="N_ID_MODALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MODALIDAD <> :new.N_ID_MODALIDAD
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELA_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELA_MODALIDADES,:%Old," = "," AND") */
        CESEC_ESCUELA_MODALIDADES.N_ID_MODALIDAD = :old.N_ID_MODALIDAD;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MODALIDADES because CESEC_ESCUELA_MODALIDADES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_FAMILIA_MODALIDADES  CESEC_MODALIDADES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_FAMILIA_MODALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_230", FK_COLUMNS="N_ID_FAMILIA_MODALIDAD" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_FAMILIA_MODALIDADES
    WHERE
      /* %JoinFKPK(:%New,CESEC_FAMILIA_MODALIDADES," = "," AND") */
      :new.N_ID_FAMILIA_MODALIDAD = CESEC_FAMILIA_MODALIDADES.N_ID_FAMILIA_MODALIDAD;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_MODALIDADES because CESEC_FAMILIA_MODALIDADES does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_MOTIVOS AFTER DELETE ON CESEC_MOTIVOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_MOTIVOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MOTIVOS  CESEC_TRANSFERENCIA on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000200a6", PARENT_OWNER="", PARENT_TABLE="CESEC_MOTIVOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_229", FK_COLUMNS="N_ID_MOTIVO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_MOTIVO = :old.N_ID_MOTIVO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_MOTIVOS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_MOTIVOS  CESEC_MOVIMIENTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MOTIVOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MOVIMIENTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_269", FK_COLUMNS="N_ID_MOTIVO" */
    UPDATE CESEC_MOVIMIENTO_ALUMNOS
      SET
        /* %SetFK(CESEC_MOVIMIENTO_ALUMNOS,NULL) */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_MOTIVO = NULL
      WHERE
        /* %JoinFKPK(CESEC_MOVIMIENTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_MOTIVO = :old.N_ID_MOTIVO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_MOTIVOS AFTER UPDATE ON CESEC_MOTIVOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_MOTIVOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_MOTIVOS  CESEC_TRANSFERENCIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000248e9", PARENT_OWNER="", PARENT_TABLE="CESEC_MOTIVOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_229", FK_COLUMNS="N_ID_MOTIVO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MOTIVO <> :new.N_ID_MOTIVO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_MOTIVO = :old.N_ID_MOTIVO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_MOTIVOS because CESEC_TRANSFERENCIA exists.'
      );
    END IF;
  END IF;

  /* CESEC_MOTIVOS  CESEC_MOVIMIENTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MOTIVOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MOVIMIENTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_269", FK_COLUMNS="N_ID_MOTIVO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MOTIVO <> :new.N_ID_MOTIVO
  THEN
    UPDATE CESEC_MOVIMIENTO_ALUMNOS
      SET
        /* %SetFK(CESEC_MOVIMIENTO_ALUMNOS,NULL) */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_MOTIVO = NULL
      WHERE
        /* %JoinFKPK(CESEC_MOVIMIENTO_ALUMNOS,:%Old," = ",",") */
        CESEC_MOVIMIENTO_ALUMNOS.N_ID_MOTIVO = :old.N_ID_MOTIVO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_MUNICIPIO_DELEGACIONE AFTER DELETE ON CESEC_MUNICIPIO_DELEGACIONES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_MUNICIPIO_DELEGACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MUNICIPIO_DELEGACIONES  CESEC_CODIGO_POSTALES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0003152e", PARENT_OWNER="", PARENT_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CODIGO_POSTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_264", FK_COLUMNS="N_ID_MUNICIPIOS_DELEGACIONES" */
    UPDATE CESEC_CODIGO_POSTALES
      SET
        /* %SetFK(CESEC_CODIGO_POSTALES,NULL) */
        CESEC_CODIGO_POSTALES.N_ID_MUNICIPIOS_DELEGACIONES = NULL
      WHERE
        /* %JoinFKPK(CESEC_CODIGO_POSTALES,:%Old," = "," AND") */
        CESEC_CODIGO_POSTALES.N_ID_MUNICIPIOS_DELEGACIONES = :old.N_ID_MUNICIPIOS_DELEGACIONES;

    /* ERwin Builtin Trigger */
    /* CESEC_MUNICIPIO_DELEGACIONES  CESEC_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_ALUMNOS_FK1", FK_COLUMNS="N_ID_MUNICIPIO" */
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_MUNICIPIO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_MUNICIPIO = :old.N_ID_MUNICIPIOS_DELEGACIONES;

    /* ERwin Builtin Trigger */
    /* CESEC_MUNICIPIO_DELEGACIONES  CESEC_COLONIAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_COLONIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_226", FK_COLUMNS="N_ID_MUNICIPIOS_DELEGACIONES" */
    UPDATE CESEC_COLONIAS
      SET
        /* %SetFK(CESEC_COLONIAS,NULL) */
        CESEC_COLONIAS.N_ID_MUNICIPIOS_DELEGACIONES = NULL
      WHERE
        /* %JoinFKPK(CESEC_COLONIAS,:%Old," = "," AND") */
        CESEC_COLONIAS.N_ID_MUNICIPIOS_DELEGACIONES = :old.N_ID_MUNICIPIOS_DELEGACIONES;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_MUNICIPIO_DELEGACIONE AFTER UPDATE ON CESEC_MUNICIPIO_DELEGACIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_MUNICIPIO_DELEGACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_MUNICIPIO_DELEGACIONES  CESEC_CODIGO_POSTALES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0003bf78", PARENT_OWNER="", PARENT_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CODIGO_POSTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_264", FK_COLUMNS="N_ID_MUNICIPIOS_DELEGACIONES" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MUNICIPIOS_DELEGACIONES <> :new.N_ID_MUNICIPIOS_DELEGACIONES
  THEN
    UPDATE CESEC_CODIGO_POSTALES
      SET
        /* %SetFK(CESEC_CODIGO_POSTALES,NULL) */
        CESEC_CODIGO_POSTALES.N_ID_MUNICIPIOS_DELEGACIONES = NULL
      WHERE
        /* %JoinFKPK(CESEC_CODIGO_POSTALES,:%Old," = ",",") */
        CESEC_CODIGO_POSTALES.N_ID_MUNICIPIOS_DELEGACIONES = :old.N_ID_MUNICIPIOS_DELEGACIONES;
  END IF;

  /* CESEC_MUNICIPIO_DELEGACIONES  CESEC_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_ALUMNOS_FK1", FK_COLUMNS="N_ID_MUNICIPIO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MUNICIPIOS_DELEGACIONES <> :new.N_ID_MUNICIPIOS_DELEGACIONES
  THEN
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_MUNICIPIO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = ",",") */
        CESEC_ALUMNOS.N_ID_MUNICIPIO = :old.N_ID_MUNICIPIOS_DELEGACIONES;
  END IF;

  /* CESEC_MUNICIPIO_DELEGACIONES  CESEC_COLONIAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_MUNICIPIO_DELEGACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_COLONIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_226", FK_COLUMNS="N_ID_MUNICIPIOS_DELEGACIONES" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_MUNICIPIOS_DELEGACIONES <> :new.N_ID_MUNICIPIOS_DELEGACIONES
  THEN
    UPDATE CESEC_COLONIAS
      SET
        /* %SetFK(CESEC_COLONIAS,NULL) */
        CESEC_COLONIAS.N_ID_MUNICIPIOS_DELEGACIONES = NULL
      WHERE
        /* %JoinFKPK(CESEC_COLONIAS,:%Old," = ",",") */
        CESEC_COLONIAS.N_ID_MUNICIPIOS_DELEGACIONES = :old.N_ID_MUNICIPIOS_DELEGACIONES;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_NACIONALIDADES AFTER DELETE ON CESEC_NACIONALIDADES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_NACIONALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_NACIONALIDADES  CESEC_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0002ffa4", PARENT_OWNER="", PARENT_TABLE="CESEC_NACIONALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_265", FK_COLUMNS="N_ID_NACIONALIDAD" */
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_NACIONALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_NACIONALIDAD = :old.N_ID_NACIONALIDAD;

    /* ERwin Builtin Trigger */
    /* CESEC_NACIONALIDADES  CESEC_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NACIONALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_160", FK_COLUMNS="N_ID_OTRA_NACIONALIDAD" */
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_OTRA_NACIONALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_OTRA_NACIONALIDAD = :old.N_ID_NACIONALIDAD;

    /* ERwin Builtin Trigger */
    /* CESEC_NACIONALIDADES  CESEC_CONTACTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NACIONALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_203", FK_COLUMNS="N_ID_NACIONALIDAD" */
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_NACIONALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_NACIONALIDAD = :old.N_ID_NACIONALIDAD;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_NACIONALIDADES AFTER UPDATE ON CESEC_NACIONALIDADES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_NACIONALIDADES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_NACIONALIDADES  CESEC_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00036ae9", PARENT_OWNER="", PARENT_TABLE="CESEC_NACIONALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_265", FK_COLUMNS="N_ID_NACIONALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NACIONALIDAD <> :new.N_ID_NACIONALIDAD
  THEN
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_NACIONALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = ",",") */
        CESEC_ALUMNOS.N_ID_NACIONALIDAD = :old.N_ID_NACIONALIDAD;
  END IF;

  /* CESEC_NACIONALIDADES  CESEC_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NACIONALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_160", FK_COLUMNS="N_ID_OTRA_NACIONALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NACIONALIDAD <> :new.N_ID_NACIONALIDAD
  THEN
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_OTRA_NACIONALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = ",",") */
        CESEC_ALUMNOS.N_ID_OTRA_NACIONALIDAD = :old.N_ID_NACIONALIDAD;
  END IF;

  /* CESEC_NACIONALIDADES  CESEC_CONTACTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NACIONALIDADES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_203", FK_COLUMNS="N_ID_NACIONALIDAD" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NACIONALIDAD <> :new.N_ID_NACIONALIDAD
  THEN
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_NACIONALIDAD = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = ",",") */
        CESEC_CONTACTO_ALUMNOS.N_ID_NACIONALIDAD = :old.N_ID_NACIONALIDAD;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_NIVEL_AVANCES AFTER DELETE ON CESEC_NIVEL_AVANCES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_NIVEL_AVANCES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_NIVEL_AVANCES  CESEC_EVAL_COMPRENSIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000119b3", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_AVANCES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_26", FK_COLUMNS="N_ID_NIVEL_AVANCE" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_NIVEL_AVANCE = :old.N_ID_NIVEL_AVANCE;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_NIVEL_AVANCES because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_NIVEL_AVANCES AFTER UPDATE ON CESEC_NIVEL_AVANCES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_NIVEL_AVANCES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_NIVEL_AVANCES  CESEC_EVAL_COMPRENSIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00013fc7", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_AVANCES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_26", FK_COLUMNS="N_ID_NIVEL_AVANCE" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NIVEL_AVANCE <> :new.N_ID_NIVEL_AVANCE
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_NIVEL_AVANCE = :old.N_ID_NIVEL_AVANCE;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_NIVEL_AVANCES because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_NIVEL_ESCOLARES AFTER DELETE ON CESEC_NIVEL_ESCOLARES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_NIVEL_ESCOLARES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_NIVEL_ESCOLARES  CESEC_GRADO_ESCOLARES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000467b4", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRADO_ESCOLARES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_252", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /*  %JoinFKPK(CESEC_GRADO_ESCOLARES,:%Old," = "," AND") */
        CESEC_GRADO_ESCOLARES.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_NIVEL_ESCOLARES because CESEC_GRADO_ESCOLARES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_NIVEL_ESCOLARES  CESEC_PERIODOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_PERIODOS_FK1", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODOS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODOS,:%Old," = "," AND") */
        CESEC_PERIODOS.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_NIVEL_ESCOLARES because CESEC_PERIODOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_NIVEL_ESCOLARES  CESEC_FOLIO_CARTILLAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_232", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_NIVEL_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = "," AND") */
        CESEC_FOLIO_CARTILLAS.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;

    /* ERwin Builtin Trigger */
    /* CESEC_NIVEL_ESCOLARES  CESEC_MODALIDADES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_41", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_MODALIDADES,:%Old," = "," AND") */
        CESEC_MODALIDADES.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_NIVEL_ESCOLARES because CESEC_MODALIDADES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_NIVEL_ESCOLARES AFTER UPDATE ON CESEC_NIVEL_ESCOLARES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_NIVEL_ESCOLARES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_NIVEL_ESCOLARES  CESEC_GRADO_ESCOLARES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0004fc0a", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRADO_ESCOLARES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_252", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NIVEL_ESCOLAR <> :new.N_ID_NIVEL_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /*  %JoinFKPK(CESEC_GRADO_ESCOLARES,:%Old," = "," AND") */
        CESEC_GRADO_ESCOLARES.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_NIVEL_ESCOLARES because CESEC_GRADO_ESCOLARES exists.'
      );
    END IF;
  END IF;

  /* CESEC_NIVEL_ESCOLARES  CESEC_PERIODOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_PERIODOS_FK1", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NIVEL_ESCOLAR <> :new.N_ID_NIVEL_ESCOLAR
  THEN
    UPDATE CESEC_PERIODOS
      SET
        /* %SetFK(CESEC_PERIODOS,NULL) */
        CESEC_PERIODOS.N_ID_NIVEL_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERIODOS,:%Old," = ",",") */
        CESEC_PERIODOS.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
  END IF;

  /* CESEC_NIVEL_ESCOLARES  CESEC_FOLIO_CARTILLAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_FOLIO_CARTILLAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_232", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NIVEL_ESCOLAR <> :new.N_ID_NIVEL_ESCOLAR
  THEN
    UPDATE CESEC_FOLIO_CARTILLAS
      SET
        /* %SetFK(CESEC_FOLIO_CARTILLAS,NULL) */
        CESEC_FOLIO_CARTILLAS.N_ID_NIVEL_ESCOLAR = NULL
      WHERE
        /* %JoinFKPK(CESEC_FOLIO_CARTILLAS,:%Old," = ",",") */
        CESEC_FOLIO_CARTILLAS.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_NIVEL_ESCOLARES  CESEC_MODALIDADES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_NIVEL_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDADES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_41", FK_COLUMNS="N_ID_NIVEL_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_NIVEL_ESCOLAR <> :new.N_ID_NIVEL_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDADES
      WHERE
        /*  %JoinFKPK(CESEC_MODALIDADES,:%Old," = "," AND") */
        CESEC_MODALIDADES.N_ID_NIVEL_ESCOLAR = :old.N_ID_NIVEL_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_NIVEL_ESCOLARES because CESEC_MODALIDADES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_OCUPACIONES AFTER DELETE ON CESEC_OCUPACIONES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_OCUPACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_OCUPACIONES  CESEC_CONTACTO_ALUMNOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00010ba7", PARENT_OWNER="", PARENT_TABLE="CESEC_OCUPACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_176", FK_COLUMNS="N_ID_OCUPACION" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_OCUPACION = :old.N_ID_OCUPACION;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_OCUPACIONES because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_OCUPACIONES AFTER UPDATE ON CESEC_OCUPACIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_OCUPACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_OCUPACIONES  CESEC_CONTACTO_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00013384", PARENT_OWNER="", PARENT_TABLE="CESEC_OCUPACIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_176", FK_COLUMNS="N_ID_OCUPACION" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_OCUPACION <> :new.N_ID_OCUPACION
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_OCUPACION = :old.N_ID_OCUPACION;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_OCUPACIONES because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_PAISES AFTER DELETE ON CESEC_PAISES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PAISES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PAISES  CESEC_ENTIDAD_FEDERATIVAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0001d941", PARENT_OWNER="", PARENT_TABLE="CESEC_PAISES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_263", FK_COLUMNS="N_ID_PAIS" */
    UPDATE CESEC_ENTIDAD_FEDERATIVAS
      SET
        /* %SetFK(CESEC_ENTIDAD_FEDERATIVAS,NULL) */
        CESEC_ENTIDAD_FEDERATIVAS.N_ID_PAIS = NULL
      WHERE
        /* %JoinFKPK(CESEC_ENTIDAD_FEDERATIVAS,:%Old," = "," AND") */
        CESEC_ENTIDAD_FEDERATIVAS.N_ID_PAIS = :old.N_ID_PAIS;

    /* ERwin Builtin Trigger */
    /* CESEC_PAISES  CESEC_CONTACTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PAISES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_197", FK_COLUMNS="N_ID_PAIS" */
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_PAIS = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_PAIS = :old.N_ID_PAIS;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PAISES AFTER UPDATE ON CESEC_PAISES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PAISES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_PAISES  CESEC_ENTIDAD_FEDERATIVAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0002139d", PARENT_OWNER="", PARENT_TABLE="CESEC_PAISES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ENTIDAD_FEDERATIVAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_263", FK_COLUMNS="N_ID_PAIS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PAIS <> :new.N_ID_PAIS
  THEN
    UPDATE CESEC_ENTIDAD_FEDERATIVAS
      SET
        /* %SetFK(CESEC_ENTIDAD_FEDERATIVAS,NULL) */
        CESEC_ENTIDAD_FEDERATIVAS.N_ID_PAIS = NULL
      WHERE
        /* %JoinFKPK(CESEC_ENTIDAD_FEDERATIVAS,:%Old," = ",",") */
        CESEC_ENTIDAD_FEDERATIVAS.N_ID_PAIS = :old.N_ID_PAIS;
  END IF;

  /* CESEC_PAISES  CESEC_CONTACTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PAISES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_197", FK_COLUMNS="N_ID_PAIS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PAIS <> :new.N_ID_PAIS
  THEN
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_PAIS = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = ",",") */
        CESEC_CONTACTO_ALUMNOS.N_ID_PAIS = :old.N_ID_PAIS;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_PARENTESCOS AFTER DELETE ON CESEC_PARENTESCOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PARENTESCOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PARENTESCOS  CESEC_ALUMNO_CONTACTOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000f06b", PARENT_OWNER="", PARENT_TABLE="CESEC_PARENTESCOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_CONTACTOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_303", FK_COLUMNS="N_ID_PARENTESCO" */
    UPDATE CESEC_ALUMNO_CONTACTOS
      SET
        /* %SetFK(CESEC_ALUMNO_CONTACTOS,NULL) */
        CESEC_ALUMNO_CONTACTOS.N_ID_PARENTESCO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNO_CONTACTOS,:%Old," = "," AND") */
        CESEC_ALUMNO_CONTACTOS.N_ID_PARENTESCO = :old.N_ID_PARENTESCO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PARENTESCOS AFTER UPDATE ON CESEC_PARENTESCOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PARENTESCOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_PARENTESCOS  CESEC_ALUMNO_CONTACTOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00011aaf", PARENT_OWNER="", PARENT_TABLE="CESEC_PARENTESCOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNO_CONTACTOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_303", FK_COLUMNS="N_ID_PARENTESCO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PARENTESCO <> :new.N_ID_PARENTESCO
  THEN
    UPDATE CESEC_ALUMNO_CONTACTOS
      SET
        /* %SetFK(CESEC_ALUMNO_CONTACTOS,NULL) */
        CESEC_ALUMNO_CONTACTOS.N_ID_PARENTESCO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNO_CONTACTOS,:%Old," = ",",") */
        CESEC_ALUMNO_CONTACTOS.N_ID_PARENTESCO = :old.N_ID_PARENTESCO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_PASOS_TRANSFERENCIA AFTER DELETE ON CESEC_PASOS_TRANSFERENCIA for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PASOS_TRANSFERENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PASOS_TRANSFERENCIA  CESEC_TRANSFERENCIA on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00010305", PARENT_OWNER="", PARENT_TABLE="CESEC_PASOS_TRANSFERENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_226", FK_COLUMNS="N_ID_PASO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_PASO = :old.N_ID_PASO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PASOS_TRANSFERENCIA because CESEC_TRANSFERENCIA exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PASOS_TRANSFERENCIA AFTER UPDATE ON CESEC_PASOS_TRANSFERENCIA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PASOS_TRANSFERENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PASOS_TRANSFERENCIA  CESEC_TRANSFERENCIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00012c86", PARENT_OWNER="", PARENT_TABLE="CESEC_PASOS_TRANSFERENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_226", FK_COLUMNS="N_ID_PASO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PASO <> :new.N_ID_PASO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TRANSFERENCIA
      WHERE
        /*  %JoinFKPK(CESEC_TRANSFERENCIA,:%Old," = "," AND") */
        CESEC_TRANSFERENCIA.N_ID_PASO = :old.N_ID_PASO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PASOS_TRANSFERENCIA because CESEC_TRANSFERENCIA exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_PERIODO_EVALUACIONES BEFORE INSERT ON CESEC_PERIODO_EVALUACIONES for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_PERIODO_EVALUACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MODALIDAD_PERIODOS  CESEC_PERIODO_EVALUACIONES on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00012e4d", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDAD_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_207", FK_COLUMNS="N_ID_MODALIDAD_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MODALIDAD_PERIODOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_MODALIDAD_PERIODOS," = "," AND") */
        :new.N_ID_MODALIDAD_PERIODO = CESEC_MODALIDAD_PERIODOS.N_ID_MODALIDAD_PERIODO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PERIODO_EVALUACIONES because CESEC_MODALIDAD_PERIODOS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PERIODO_EVALUACIONES AFTER UPDATE ON CESEC_PERIODO_EVALUACIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PERIODO_EVALUACIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_MODALIDAD_PERIODOS  CESEC_PERIODO_EVALUACIONES on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00012f1f", PARENT_OWNER="", PARENT_TABLE="CESEC_MODALIDAD_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_207", FK_COLUMNS="N_ID_MODALIDAD_PERIODO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_MODALIDAD_PERIODOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_MODALIDAD_PERIODOS," = "," AND") */
      :new.N_ID_MODALIDAD_PERIODO = CESEC_MODALIDAD_PERIODOS.N_ID_MODALIDAD_PERIODO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PERIODO_EVALUACIONES because CESEC_MODALIDAD_PERIODOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_PERIODOS BEFORE INSERT ON CESEC_PERIODOS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_PERIODOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_PERIODO  CESEC_PERIODOS on child insert set null */
    /* ERWIN_RELATION:CHECKSUM="00012696", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_PERIODO"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_197", FK_COLUMNS="N_ID_TIPO_PERIODO" */
    UPDATE CESEC_PERIODOS
      SET
        /* %SetFK(CESEC_PERIODOS,NULL) */
        CESEC_PERIODOS.N_ID_TIPO_PERIODO = NULL
      WHERE
        NOT EXISTS (
          SELECT * FROM CESEC_TIPO_PERIODO
            WHERE
              /* %JoinFKPK(:%New,CESEC_TIPO_PERIODO," = "," AND") */
              :new.N_ID_TIPO_PERIODO = CESEC_TIPO_PERIODO.N_ID_TIPO_PERIODO
        ) 
        /* %JoinPKPK(CESEC_PERIODOS,:%New," = "," AND") */
         and CESEC_PERIODOS.N_ID_PERIODO = :new.N_ID_PERIODO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CESEC_PERIODOS AFTER DELETE ON CESEC_PERIODOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PERIODOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_EVALUACION_EXTRAS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="000b828e", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_213", FK_COLUMNS="N_ID_PERIODO_APLICA" */
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_PERIODO_APLICA = NULL
      WHERE
        /* %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = "," AND") */
        CESEC_EVALUACION_EXTRAS.N_ID_PERIODO_APLICA = :old.N_ID_PERIODO;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_HISTORICO_EVAL_EXTRAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_201", FK_COLUMNS="N_ID_PERIODO_APLICA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_HISTORICO_EVAL_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_PERIODO_APLICA = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PERIODOS because CESEC_HISTORICO_EVAL_EXTRAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_ESTADISTICA_CUADRO_CONS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_153", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESTADISTICA_CUADRO_CONS
      WHERE
        /*  %JoinFKPK(CESEC_ESTADISTICA_CUADRO_CONS,:%Old," = "," AND") */
        CESEC_ESTADISTICA_CUADRO_CONS.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PERIODOS because CESEC_ESTADISTICA_CUADRO_CONS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_PRE_EVAL_CAMPO_FORMATIVO on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_CAMPO_FORMATIVO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_92", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_CAMPO_FORMATIVO
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_CAMPO_FORMATIVO,:%Old," = "," AND") */
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PERIODOS because CESEC_PRE_EVAL_CAMPO_FORMATIVO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_LECTURA_EVALUACIONES on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_237", FK_COLUMNS="N_ID_PERIODO" */
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_PERIODO = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = "," AND") */
        CESEC_LECTURA_EVALUACIONES.N_ID_PERIODO = :old.N_ID_PERIODO;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_MODALIDAD_PERIODOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDAD_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_279", FK_COLUMNS="N_ID_PERIODO" */
    UPDATE CESEC_MODALIDAD_PERIODOS
      SET
        /* %SetFK(CESEC_MODALIDAD_PERIODOS,NULL) */
        CESEC_MODALIDAD_PERIODOS.N_ID_PERIODO = NULL
      WHERE
        /* %JoinFKPK(CESEC_MODALIDAD_PERIODOS,:%Old," = "," AND") */
        CESEC_MODALIDAD_PERIODOS.N_ID_PERIODO = :old.N_ID_PERIODO;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_PERIODO_INASISTENCIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_275", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PERIODOS because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_EVAL_COMPRENSIONES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_218", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PERIODOS because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_EVAL_HERR_FUNDAMENTALES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_HERR_FUNDAMENTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_113", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_HERR_FUNDAMENTALES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_HERR_FUNDAMENTALES,:%Old," = "," AND") */
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PERIODOS because CESEC_EVAL_HERR_FUNDAMENTALES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PERIODOS  CESEC_EVALUACION_REGULARES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_REGULARES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_89", FK_COLUMNS="N_ID_PERIODO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_REGULARES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_REGULARES,:%Old," = "," AND") */
        CESEC_EVALUACION_REGULARES.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PERIODOS because CESEC_EVALUACION_REGULARES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PERIODOS AFTER UPDATE ON CESEC_PERIODOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PERIODOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_PERIODOS  CESEC_EVALUACION_EXTRAS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="000e5c38", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_213", FK_COLUMNS="N_ID_PERIODO_APLICA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    UPDATE CESEC_EVALUACION_EXTRAS
      SET
        /* %SetFK(CESEC_EVALUACION_EXTRAS,NULL) */
        CESEC_EVALUACION_EXTRAS.N_ID_PERIODO_APLICA = NULL
      WHERE
        /* %JoinFKPK(CESEC_EVALUACION_EXTRAS,:%Old," = ",",") */
        CESEC_EVALUACION_EXTRAS.N_ID_PERIODO_APLICA = :old.N_ID_PERIODO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_HISTORICO_EVAL_EXTRAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_HISTORICO_EVAL_EXTRAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_201", FK_COLUMNS="N_ID_PERIODO_APLICA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_HISTORICO_EVAL_EXTRAS
      WHERE
        /*  %JoinFKPK(CESEC_HISTORICO_EVAL_EXTRAS,:%Old," = "," AND") */
        CESEC_HISTORICO_EVAL_EXTRAS.N_ID_PERIODO_APLICA = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_HISTORICO_EVAL_EXTRAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_ESTADISTICA_CUADRO_CONS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESTADISTICA_CUADRO_CONS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_153", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESTADISTICA_CUADRO_CONS
      WHERE
        /*  %JoinFKPK(CESEC_ESTADISTICA_CUADRO_CONS,:%Old," = "," AND") */
        CESEC_ESTADISTICA_CUADRO_CONS.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_ESTADISTICA_CUADRO_CONS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_PRE_EVAL_CAMPO_FORMATIVO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PRE_EVAL_CAMPO_FORMATIVO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_92", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PRE_EVAL_CAMPO_FORMATIVO
      WHERE
        /*  %JoinFKPK(CESEC_PRE_EVAL_CAMPO_FORMATIVO,:%Old," = "," AND") */
        CESEC_PRE_EVAL_CAMPO_FORMATIVO.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_PRE_EVAL_CAMPO_FORMATIVO exists.'
      );
    END IF;
  END IF;

  /* CESEC_PERIODOS  CESEC_LECTURA_EVALUACIONES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_LECTURA_EVALUACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_237", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    UPDATE CESEC_LECTURA_EVALUACIONES
      SET
        /* %SetFK(CESEC_LECTURA_EVALUACIONES,NULL) */
        CESEC_LECTURA_EVALUACIONES.N_ID_PERIODO = NULL
      WHERE
        /* %JoinFKPK(CESEC_LECTURA_EVALUACIONES,:%Old," = ",",") */
        CESEC_LECTURA_EVALUACIONES.N_ID_PERIODO = :old.N_ID_PERIODO;
  END IF;

  /* CESEC_PERIODOS  CESEC_MODALIDAD_PERIODOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_MODALIDAD_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_279", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    UPDATE CESEC_MODALIDAD_PERIODOS
      SET
        /* %SetFK(CESEC_MODALIDAD_PERIODOS,NULL) */
        CESEC_MODALIDAD_PERIODOS.N_ID_PERIODO = NULL
      WHERE
        /* %JoinFKPK(CESEC_MODALIDAD_PERIODOS,:%Old," = ",",") */
        CESEC_MODALIDAD_PERIODOS.N_ID_PERIODO = :old.N_ID_PERIODO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_PERIODO_INASISTENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODO_INASISTENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_275", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERIODO_INASISTENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PERIODO_INASISTENCIAS,:%Old," = "," AND") */
        CESEC_PERIODO_INASISTENCIAS.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_PERIODO_INASISTENCIAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_EVAL_COMPRENSIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_COMPRENSIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_218", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_COMPRENSIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_COMPRENSIONES,:%Old," = "," AND") */
        CESEC_EVAL_COMPRENSIONES.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_EVAL_COMPRENSIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_EVAL_HERR_FUNDAMENTALES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_HERR_FUNDAMENTALES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_113", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_HERR_FUNDAMENTALES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_HERR_FUNDAMENTALES,:%Old," = "," AND") */
        CESEC_EVAL_HERR_FUNDAMENTALES.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_EVAL_HERR_FUNDAMENTALES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PERIODOS  CESEC_EVALUACION_REGULARES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PERIODOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_REGULARES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_89", FK_COLUMNS="N_ID_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERIODO <> :new.N_ID_PERIODO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_REGULARES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_REGULARES,:%Old," = "," AND") */
        CESEC_EVALUACION_REGULARES.N_ID_PERIODO = :old.N_ID_PERIODO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PERIODOS because CESEC_EVALUACION_REGULARES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_PERIODO  CESEC_PERIODOS on child update no action */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_PERIODO"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_197", FK_COLUMNS="N_ID_TIPO_PERIODO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_TIPO_PERIODO
    WHERE
      /* %JoinFKPK(:%New,CESEC_TIPO_PERIODO," = "," AND") */
      :new.N_ID_TIPO_PERIODO = CESEC_TIPO_PERIODO.N_ID_TIPO_PERIODO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    :new.N_ID_TIPO_PERIODO IS NOT NULL AND
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PERIODOS because CESEC_TIPO_PERIODO does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_PERSONAL AFTER DELETE ON CESEC_PERSONAL for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PERSONAL 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PERSONAL  CESEC_PERSONA_PLANTELES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000115a8", PARENT_OWNER="", PARENT_TABLE="CESEC_PERSONAL"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONA_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_PERSONA_PLANTELES_FK1", FK_COLUMNS="N_ID_PERSONA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERSONA_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_PERSONA_PLANTELES,:%Old," = "," AND") */
        CESEC_PERSONA_PLANTELES.N_ID_PERSONA = :old.N_ID_PERSONA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PERSONAL because CESEC_PERSONA_PLANTELES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PERSONAL AFTER UPDATE ON CESEC_PERSONAL for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PERSONAL 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_PERSONAL  CESEC_PERSONA_PLANTELES on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00012232", PARENT_OWNER="", PARENT_TABLE="CESEC_PERSONAL"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONA_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_PERSONA_PLANTELES_FK1", FK_COLUMNS="N_ID_PERSONA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PERSONA <> :new.N_ID_PERSONA
  THEN
    UPDATE CESEC_PERSONA_PLANTELES
      SET
        /* %SetFK(CESEC_PERSONA_PLANTELES,NULL) */
        CESEC_PERSONA_PLANTELES.N_ID_PERSONA = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERSONA_PLANTELES,:%Old," = ",",") */
        CESEC_PERSONA_PLANTELES.N_ID_PERSONA = :old.N_ID_PERSONA;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_PLAN_ESTUDIO_MATERIAS AFTER DELETE ON CESEC_PLAN_ESTUDIO_MATERIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PLAN_ESTUDIO_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIO_MATERIAS  CESEC_EVALUACION_MATERIA on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000171a2", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_MATERIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_260", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_MATERIA,:%Old," = "," AND") */
        CESEC_EVALUACION_MATERIA.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVALUACION_MATERIA.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVALUACION_MATERIA.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PLAN_ESTUDIO_MATERIAS because CESEC_EVALUACION_MATERIA exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PLAN_ESTUDIO_MATERIAS AFTER UPDATE ON CESEC_PLAN_ESTUDIO_MATERIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PLAN_ESTUDIO_MATERIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIO_MATERIAS  CESEC_EVALUACION_MATERIA on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0001d0c0", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_MATERIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_260", FK_COLUMNS="N_ID_PLAN_ESTUDIOS""N_ID_MATERIA""N_ID_GRADO_ESCOLAR" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS OR 
    :old.N_ID_MATERIA <> :new.N_ID_MATERIA OR 
    :old.N_ID_GRADO_ESCOLAR <> :new.N_ID_GRADO_ESCOLAR
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_MATERIA
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_MATERIA,:%Old," = "," AND") */
        CESEC_EVALUACION_MATERIA.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS AND
        CESEC_EVALUACION_MATERIA.N_ID_MATERIA = :old.N_ID_MATERIA AND
        CESEC_EVALUACION_MATERIA.N_ID_GRADO_ESCOLAR = :old.N_ID_GRADO_ESCOLAR;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIO_MATERIAS because CESEC_EVALUACION_MATERIA exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_PLAN_ESTUDIOS AFTER DELETE ON CESEC_PLAN_ESTUDIOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PLAN_ESTUDIOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_NIVEL on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00088b26", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_216", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_NIVEL
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_NIVEL,:%Old," = "," AND") */
        CESEC_PROMEDIO_NIVEL.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PLAN_ESTUDIOS because CESEC_PROMEDIO_NIVEL exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_CERTIFICACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_208", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PLAN_ESTUDIOS because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_GRADO on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_206", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PLAN_ESTUDIOS because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_REVALIDACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_165", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PLAN_ESTUDIOS because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_EVALUACION_EXECIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_159", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PLAN_ESTUDIOS because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_PLAN_ESTUDIO_MATERIAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_37", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIO_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLAN_ESTUDIO_MATERIAS,:%Old," = "," AND") */
        CESEC_PLAN_ESTUDIO_MATERIAS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PLAN_ESTUDIOS because CESEC_PLAN_ESTUDIO_MATERIAS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_ESC_MODAL_PLN_EST on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESC_MODAL_PLN_EST"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_199", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESC_MODAL_PLN_EST
      WHERE
        /*  %JoinFKPK(CESEC_ESC_MODAL_PLN_EST,:%Old," = "," AND") */
        CESEC_ESC_MODAL_PLN_EST.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_PLAN_ESTUDIOS because CESEC_ESC_MODAL_PLN_EST exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PLAN_ESTUDIOS AFTER UPDATE ON CESEC_PLAN_ESTUDIOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PLAN_ESTUDIOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_NIVEL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0009dab1", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_216", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_NIVEL
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_NIVEL,:%Old," = "," AND") */
        CESEC_PROMEDIO_NIVEL.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_PROMEDIO_NIVEL exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_CERTIFICACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_CERTIFICACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_208", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_CERTIFICACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_CERTIFICACIONES,:%Old," = "," AND") */
        CESEC_EVAL_CERTIFICACIONES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_EVAL_CERTIFICACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_GRADO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_206", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PROMEDIO_GRADO
      WHERE
        /*  %JoinFKPK(CESEC_PROMEDIO_GRADO,:%Old," = "," AND") */
        CESEC_PROMEDIO_GRADO.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_PROMEDIO_GRADO exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_EVAL_REVALIDACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_165", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_EVALUACION_EXECIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_159", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_PLAN_ESTUDIO_MATERIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLAN_ESTUDIO_MATERIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_37", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIO_MATERIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLAN_ESTUDIO_MATERIAS,:%Old," = "," AND") */
        CESEC_PLAN_ESTUDIO_MATERIAS.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_PLAN_ESTUDIO_MATERIAS exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_ESC_MODAL_PLN_EST on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESC_MODAL_PLN_EST"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_199", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLAN_ESTUDIOS <> :new.N_ID_PLAN_ESTUDIOS
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESC_MODAL_PLN_EST
      WHERE
        /*  %JoinFKPK(CESEC_ESC_MODAL_PLN_EST,:%Old," = "," AND") */
        CESEC_ESC_MODAL_PLN_EST.N_ID_PLAN_ESTUDIOS = :old.N_ID_PLAN_ESTUDIOS;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLAN_ESTUDIOS because CESEC_ESC_MODAL_PLN_EST exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_PLANTEL_INCIDENCIAS BEFORE INSERT ON CESEC_PLANTEL_INCIDENCIAS for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_PLANTEL_INCIDENCIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ESTATUS_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0003bdea", PARENT_OWNER="", PARENT_TABLE="CESEC_ESTATUS_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_157", FK_COLUMNS="N_ID_ESTATUS_INCIDENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESTATUS_INCIDENCIA
      WHERE
        /* %JoinFKPK(:%New,CESEC_ESTATUS_INCIDENCIA," = "," AND") */
        :new.N_ID_ESTATUS_INCIDENCIA = CESEC_ESTATUS_INCIDENCIA.N_ID_ESTATUS_INCIDENCIA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PLANTEL_INCIDENCIAS because CESEC_ESTATUS_INCIDENCIA does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_156", FK_COLUMNS="N_ID_TIPO_INCIDENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TIPO_INCIDENCIA
      WHERE
        /* %JoinFKPK(:%New,CESEC_TIPO_INCIDENCIA," = "," AND") */
        :new.N_ID_TIPO_INCIDENCIA = CESEC_TIPO_INCIDENCIA.N_ID_TIPO_INCIDENCIA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PLANTEL_INCIDENCIAS because CESEC_TIPO_INCIDENCIA does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_PLANTEL_INCIDENCIAS on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_154", FK_COLUMNS="N_ID_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
        :new.N_ID_ESCUELA = CESEC_ESCUELAS.N_ID_ESCUELA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PLANTEL_INCIDENCIAS because CESEC_ESCUELAS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER  tD_CESEC_PLANTEL_INCIDENCIAS AFTER DELETE ON CESEC_PLANTEL_INCIDENCIAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_PLANTEL_INCIDENCIAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PLANTEL_INCIDENCIAS  CESEC_SEGUIMIENTO on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00010e05", PARENT_OWNER="", PARENT_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SEGUIMIENTO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_170", FK_COLUMNS="N_ID_PLANTEL_INCIDENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_SEGUIMIENTO
      WHERE
        /*  %JoinFKPK(CESEC_SEGUIMIENTO,:%Old," = "," AND") */
        CESEC_SEGUIMIENTO.N_ID_PLANTEL_INCIDENCIA = :old.N_ID_PLANTEL_INCIDENCIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_PLANTEL_INCIDENCIAS because CESEC_SEGUIMIENTO exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PLANTEL_INCIDENCIAS AFTER UPDATE ON CESEC_PLANTEL_INCIDENCIAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PLANTEL_INCIDENCIAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PLANTEL_INCIDENCIAS  CESEC_SEGUIMIENTO on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000531eb", PARENT_OWNER="", PARENT_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SEGUIMIENTO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_170", FK_COLUMNS="N_ID_PLANTEL_INCIDENCIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_PLANTEL_INCIDENCIA <> :new.N_ID_PLANTEL_INCIDENCIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_SEGUIMIENTO
      WHERE
        /*  %JoinFKPK(CESEC_SEGUIMIENTO,:%Old," = "," AND") */
        CESEC_SEGUIMIENTO.N_ID_PLANTEL_INCIDENCIA = :old.N_ID_PLANTEL_INCIDENCIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_PLANTEL_INCIDENCIAS because CESEC_SEGUIMIENTO exists.'
      );
    END IF;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESTATUS_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESTATUS_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_157", FK_COLUMNS="N_ID_ESTATUS_INCIDENCIA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ESTATUS_INCIDENCIA
    WHERE
      /* %JoinFKPK(:%New,CESEC_ESTATUS_INCIDENCIA," = "," AND") */
      :new.N_ID_ESTATUS_INCIDENCIA = CESEC_ESTATUS_INCIDENCIA.N_ID_ESTATUS_INCIDENCIA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PLANTEL_INCIDENCIAS because CESEC_ESTATUS_INCIDENCIA does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_156", FK_COLUMNS="N_ID_TIPO_INCIDENCIA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_TIPO_INCIDENCIA
    WHERE
      /* %JoinFKPK(:%New,CESEC_TIPO_INCIDENCIA," = "," AND") */
      :new.N_ID_TIPO_INCIDENCIA = CESEC_TIPO_INCIDENCIA.N_ID_TIPO_INCIDENCIA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PLANTEL_INCIDENCIAS because CESEC_TIPO_INCIDENCIA does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_PLANTEL_INCIDENCIAS on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_154", FK_COLUMNS="N_ID_ESCUELA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ESCUELAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
      :new.N_ID_ESCUELA = CESEC_ESCUELAS.N_ID_ESCUELA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PLANTEL_INCIDENCIAS because CESEC_ESCUELAS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_PROMEDIO_GRADO BEFORE INSERT ON CESEC_PROMEDIO_GRADO for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_PROMEDIO_GRADO 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_GRADO on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0004d829", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_206", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
        :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_GRADO because CESEC_PLAN_ESTUDIOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_GRADO_ESCOLARES  CESEC_PROMEDIO_GRADO on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_205", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRADO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
        :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_GRADO because CESEC_GRADO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_PROMEDIO_GRADO on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_204", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
        :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_GRADO because CESEC_ALUMNOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_GRADO on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_203", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_GRADO because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PROMEDIO_GRADO AFTER UPDATE ON CESEC_PROMEDIO_GRADO for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PROMEDIO_GRADO 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_GRADO on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0004d4f5", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_206", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PLAN_ESTUDIOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
      :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_GRADO because CESEC_PLAN_ESTUDIOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_GRADO_ESCOLARES  CESEC_PROMEDIO_GRADO on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_GRADO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_205", FK_COLUMNS="N_ID_GRADO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_GRADO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_GRADO_ESCOLARES," = "," AND") */
      :new.N_ID_GRADO_ESCOLAR = CESEC_GRADO_ESCOLARES.N_ID_GRADO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_GRADO because CESEC_GRADO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_PROMEDIO_GRADO on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_204", FK_COLUMNS="N_ID_ALUMNO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ALUMNOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
      :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_GRADO because CESEC_ALUMNOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_GRADO on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_GRADO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_203", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_GRADO because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_PROMEDIO_NIVEL BEFORE INSERT ON CESEC_PROMEDIO_NIVEL for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_PROMEDIO_NIVEL 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_PROMEDIO_NIVEL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00039b88", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_218", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
        :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_NIVEL because CESEC_ALUMNOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_NIVEL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_217", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_NIVEL because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_NIVEL on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_216", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLAN_ESTUDIOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
        :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_PROMEDIO_NIVEL because CESEC_PLAN_ESTUDIOS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_PROMEDIO_NIVEL AFTER UPDATE ON CESEC_PROMEDIO_NIVEL for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_PROMEDIO_NIVEL 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_PROMEDIO_NIVEL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00039546", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_218", FK_COLUMNS="N_ID_ALUMNO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ALUMNOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
      :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_NIVEL because CESEC_ALUMNOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_PROMEDIO_NIVEL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_217", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_NIVEL because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PLAN_ESTUDIOS  CESEC_PROMEDIO_NIVEL on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PLAN_ESTUDIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PROMEDIO_NIVEL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_216", FK_COLUMNS="N_ID_PLAN_ESTUDIOS" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PLAN_ESTUDIOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PLAN_ESTUDIOS," = "," AND") */
      :new.N_ID_PLAN_ESTUDIOS = CESEC_PLAN_ESTUDIOS.N_ID_PLAN_ESTUDIOS;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_PROMEDIO_NIVEL because CESEC_PLAN_ESTUDIOS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_SAID_CARGA BEFORE INSERT ON CESEC_SAID_CARGA for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_SAID_CARGA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_CICLO_ESCOLARES  CESEC_SAID_CARGA on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0001220e", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SAID_CARGA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_221", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLO_ESCOLARES
      WHERE
        /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
        :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_SAID_CARGA because CESEC_CICLO_ESCOLARES does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_SAID_CARGA AFTER UPDATE ON CESEC_SAID_CARGA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_SAID_CARGA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_CICLO_ESCOLARES  CESEC_SAID_CARGA on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="000128d9", PARENT_OWNER="", PARENT_TABLE="CESEC_CICLO_ESCOLARES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SAID_CARGA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_221", FK_COLUMNS="N_ID_CICLO_ESCOLAR" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_CICLO_ESCOLARES
    WHERE
      /* %JoinFKPK(:%New,CESEC_CICLO_ESCOLARES," = "," AND") */
      :new.N_ID_CICLO_ESCOLAR = CESEC_CICLO_ESCOLARES.N_ID_CICLO_ESCOLAR;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_SAID_CARGA because CESEC_CICLO_ESCOLARES does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_SECCIONES AFTER DELETE ON CESEC_SECCIONES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_SECCIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_SECCIONES  CESEC_GRUPOS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="0000f9b4", PARENT_OWNER="", PARENT_TABLE="CESEC_SECCIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_173", FK_COLUMNS="N_ID_SECCION" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRUPOS
      WHERE
        /*  %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_SECCION = :old.N_ID_SECCION;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_SECCIONES because CESEC_GRUPOS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_SECCIONES AFTER UPDATE ON CESEC_SECCIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_SECCIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_SECCIONES  CESEC_GRUPOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00011bbf", PARENT_OWNER="", PARENT_TABLE="CESEC_SECCIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_173", FK_COLUMNS="N_ID_SECCION" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_SECCION <> :new.N_ID_SECCION
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_GRUPOS
      WHERE
        /*  %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_SECCION = :old.N_ID_SECCION;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_SECCIONES because CESEC_GRUPOS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_SEGUIMIENTO BEFORE INSERT ON CESEC_SEGUIMIENTO for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_SEGUIMIENTO 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_PLANTEL_INCIDENCIAS  CESEC_SEGUIMIENTO on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00012f6c", PARENT_OWNER="", PARENT_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SEGUIMIENTO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_170", FK_COLUMNS="N_ID_PLANTEL_INCIDENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_PLANTEL_INCIDENCIAS," = "," AND") */
        :new.N_ID_PLANTEL_INCIDENCIA = CESEC_PLANTEL_INCIDENCIAS.N_ID_PLANTEL_INCIDENCIA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_SEGUIMIENTO because CESEC_PLANTEL_INCIDENCIAS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_SEGUIMIENTO AFTER UPDATE ON CESEC_SEGUIMIENTO for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_SEGUIMIENTO 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_PLANTEL_INCIDENCIAS  CESEC_SEGUIMIENTO on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00012ffb", PARENT_OWNER="", PARENT_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_SEGUIMIENTO"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_170", FK_COLUMNS="N_ID_PLANTEL_INCIDENCIA" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PLANTEL_INCIDENCIAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_PLANTEL_INCIDENCIAS," = "," AND") */
      :new.N_ID_PLANTEL_INCIDENCIA = CESEC_PLANTEL_INCIDENCIAS.N_ID_PLANTEL_INCIDENCIA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_SEGUIMIENTO because CESEC_PLANTEL_INCIDENCIAS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_SERVICIO_ESCUELAS AFTER DELETE ON CESEC_SERVICIO_ESCUELAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_SERVICIO_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_SERVICIO_ESCUELAS  CESEC_ESCUELAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="0001040b", PARENT_OWNER="", PARENT_TABLE="CESEC_SERVICIO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_182", FK_COLUMNS="N_ID_SERVICIO_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_SERVICIO_ESCUELA = :old.N_ID_SERVICIO_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_SERVICIO_ESCUELAS because CESEC_ESCUELAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_SERVICIO_ESCUELAS AFTER UPDATE ON CESEC_SERVICIO_ESCUELAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_SERVICIO_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_SERVICIO_ESCUELAS  CESEC_ESCUELAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00013be3", PARENT_OWNER="", PARENT_TABLE="CESEC_SERVICIO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_182", FK_COLUMNS="N_ID_SERVICIO_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_SERVICIO_ESCUELA <> :new.N_ID_SERVICIO_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_SERVICIO_ESCUELA = :old.N_ID_SERVICIO_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_SERVICIO_ESCUELAS because CESEC_ESCUELAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_SEXOS AFTER DELETE ON CESEC_SEXOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_SEXOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_SEXOS  CESEC_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0002d2c5", PARENT_OWNER="", PARENT_TABLE="CESEC_SEXOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_152", FK_COLUMNS="N_ID_SEXO" */
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_SEXO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = "," AND") */
        CESEC_ALUMNOS.N_ID_SEXO = :old.N_ID_SEXO;

    /* ERwin Builtin Trigger */
    /* CESEC_SEXOS  CESEC_CONTACTO_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_SEXOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_189", FK_COLUMNS="N_ID_SEXO" */
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_SEXO = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_SEXO = :old.N_ID_SEXO;

    /* ERwin Builtin Trigger */
    /* CESEC_SEXOS  CESEC_PERSONAL on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_SEXOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONAL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_PERSONAL_FK1", FK_COLUMNS="N_ID_SEXO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PERSONAL
      WHERE
        /*  %JoinFKPK(CESEC_PERSONAL,:%Old," = "," AND") */
        CESEC_PERSONAL.N_ID_SEXO = :old.N_ID_SEXO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_SEXOS because CESEC_PERSONAL exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_SEXOS AFTER UPDATE ON CESEC_SEXOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_SEXOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_SEXOS  CESEC_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0002fc69", PARENT_OWNER="", PARENT_TABLE="CESEC_SEXOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_152", FK_COLUMNS="N_ID_SEXO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_SEXO <> :new.N_ID_SEXO
  THEN
    UPDATE CESEC_ALUMNOS
      SET
        /* %SetFK(CESEC_ALUMNOS,NULL) */
        CESEC_ALUMNOS.N_ID_SEXO = NULL
      WHERE
        /* %JoinFKPK(CESEC_ALUMNOS,:%Old," = ",",") */
        CESEC_ALUMNOS.N_ID_SEXO = :old.N_ID_SEXO;
  END IF;

  /* CESEC_SEXOS  CESEC_CONTACTO_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_SEXOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_189", FK_COLUMNS="N_ID_SEXO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_SEXO <> :new.N_ID_SEXO
  THEN
    UPDATE CESEC_CONTACTO_ALUMNOS
      SET
        /* %SetFK(CESEC_CONTACTO_ALUMNOS,NULL) */
        CESEC_CONTACTO_ALUMNOS.N_ID_SEXO = NULL
      WHERE
        /* %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = ",",") */
        CESEC_CONTACTO_ALUMNOS.N_ID_SEXO = :old.N_ID_SEXO;
  END IF;

  /* CESEC_SEXOS  CESEC_PERSONAL on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_SEXOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERSONAL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_PERSONAL_FK1", FK_COLUMNS="N_ID_SEXO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_SEXO <> :new.N_ID_SEXO
  THEN
    UPDATE CESEC_PERSONAL
      SET
        /* %SetFK(CESEC_PERSONAL,NULL) */
        CESEC_PERSONAL.N_ID_SEXO = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERSONAL,:%Old," = ",",") */
        CESEC_PERSONAL.N_ID_SEXO = :old.N_ID_SEXO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_SOSTENIMIENTO_ESCUELA AFTER DELETE ON CESEC_SOSTENIMIENTO_ESCUELAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_SOSTENIMIENTO_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_SOSTENIMIENTO_ESCUELAS  CESEC_ESCUELAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00011f8d", PARENT_OWNER="", PARENT_TABLE="CESEC_SOSTENIMIENTO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_ESCUELAS_FK1", FK_COLUMNS="N_ID_SOSTENIMIENTO_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_SOSTENIMIENTO_ESCUELA = :old.N_ID_SOSTENIMIENTO_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_SOSTENIMIENTO_ESCUELAS because CESEC_ESCUELAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_SOSTENIMIENTO_ESCUELA AFTER UPDATE ON CESEC_SOSTENIMIENTO_ESCUELAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_SOSTENIMIENTO_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_SOSTENIMIENTO_ESCUELAS  CESEC_ESCUELAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00015191", PARENT_OWNER="", PARENT_TABLE="CESEC_SOSTENIMIENTO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="CESEC_ESCUELAS_FK1", FK_COLUMNS="N_ID_SOSTENIMIENTO_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_SOSTENIMIENTO_ESCUELA <> :new.N_ID_SOSTENIMIENTO_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_SOSTENIMIENTO_ESCUELA = :old.N_ID_SOSTENIMIENTO_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_SOSTENIMIENTO_ESCUELAS because CESEC_ESCUELAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_ASENTAMIENTOS AFTER DELETE ON CESEC_TIPO_ASENTAMIENTOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_ASENTAMIENTOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_ASENTAMIENTOS  CESEC_DOMICILIOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000eec3", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_ASENTAMIENTOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOMICILIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_246", FK_COLUMNS="N_ID_TIPO_ASENTAMIENTO" */
    UPDATE CESEC_DOMICILIOS
      SET
        /* %SetFK(CESEC_DOMICILIOS,NULL) */
        CESEC_DOMICILIOS.N_ID_TIPO_ASENTAMIENTO = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOMICILIOS,:%Old," = "," AND") */
        CESEC_DOMICILIOS.N_ID_TIPO_ASENTAMIENTO = :old.N_ID_TIPO_ASENTAMIENTO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_ASENTAMIENTOS AFTER UPDATE ON CESEC_TIPO_ASENTAMIENTOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_ASENTAMIENTOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_TIPO_ASENTAMIENTOS  CESEC_DOMICILIOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00012a17", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_ASENTAMIENTOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_DOMICILIOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_246", FK_COLUMNS="N_ID_TIPO_ASENTAMIENTO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_ASENTAMIENTO <> :new.N_ID_TIPO_ASENTAMIENTO
  THEN
    UPDATE CESEC_DOMICILIOS
      SET
        /* %SetFK(CESEC_DOMICILIOS,NULL) */
        CESEC_DOMICILIOS.N_ID_TIPO_ASENTAMIENTO = NULL
      WHERE
        /* %JoinFKPK(CESEC_DOMICILIOS,:%Old," = ",",") */
        CESEC_DOMICILIOS.N_ID_TIPO_ASENTAMIENTO = :old.N_ID_TIPO_ASENTAMIENTO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_CALENDARIOS AFTER DELETE ON CESEC_TIPO_CALENDARIOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_CALENDARIOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_CALENDARIOS  CESEC_CICLOE_TIPO_CAL on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000117e4", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_CALENDARIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CICLOE_TIPO_CAL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_119", FK_COLUMNS="N_ID_TIPO_CALENDARIO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLOE_TIPO_CAL
      WHERE
        /*  %JoinFKPK(CESEC_CICLOE_TIPO_CAL,:%Old," = "," AND") */
        CESEC_CICLOE_TIPO_CAL.N_ID_TIPO_CALENDARIO = :old.N_ID_TIPO_CALENDARIO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_TIPO_CALENDARIOS because CESEC_CICLOE_TIPO_CAL exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_CALENDARIOS AFTER UPDATE ON CESEC_TIPO_CALENDARIOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_CALENDARIOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_CALENDARIOS  CESEC_CICLOE_TIPO_CAL on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0001489b", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_CALENDARIOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CICLOE_TIPO_CAL"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_119", FK_COLUMNS="N_ID_TIPO_CALENDARIO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_CALENDARIO <> :new.N_ID_TIPO_CALENDARIO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CICLOE_TIPO_CAL
      WHERE
        /*  %JoinFKPK(CESEC_CICLOE_TIPO_CAL,:%Old," = "," AND") */
        CESEC_CICLOE_TIPO_CAL.N_ID_TIPO_CALENDARIO = :old.N_ID_TIPO_CALENDARIO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_CALENDARIOS because CESEC_CICLOE_TIPO_CAL exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_ESCUELA AFTER DELETE ON CESEC_TIPO_ESCUELA for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_ESCUELA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_ESCUELA  CESEC_ESCUELAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="0001013e", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_ESCUELA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_180", FK_COLUMNS="N_ID_TIPO_ESCUELA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_TIPO_ESCUELA = :old.N_ID_TIPO_ESCUELA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_TIPO_ESCUELA because CESEC_ESCUELAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_ESCUELA AFTER UPDATE ON CESEC_TIPO_ESCUELA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_ESCUELA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_ESCUELA  CESEC_ESCUELAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00012ee6", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_ESCUELA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_180", FK_COLUMNS="N_ID_TIPO_ESCUELA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_ESCUELA <> :new.N_ID_TIPO_ESCUELA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_TIPO_ESCUELA = :old.N_ID_TIPO_ESCUELA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_ESCUELA because CESEC_ESCUELAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_EXENCIONES AFTER DELETE ON CESEC_TIPO_EXENCIONES for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_EXENCIONES 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_EXENCIONES  CESEC_EVALUACION_EXECIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00012342", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_EXENCIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_164", FK_COLUMNS="N_ID_TIPO_EXENTO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_TIPO_EXENTO = :old.N_ID_TIPO_EXENTO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_TIPO_EXENCIONES because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_EXENCIONES AFTER UPDATE ON CESEC_TIPO_EXENCIONES for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_EXENCIONES 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_EXENCIONES  CESEC_EVALUACION_EXECIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00014e14", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_EXENCIONES"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVALUACION_EXECIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_164", FK_COLUMNS="N_ID_TIPO_EXENTO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_EXENTO <> :new.N_ID_TIPO_EXENTO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVALUACION_EXECIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVALUACION_EXECIONES,:%Old," = "," AND") */
        CESEC_EVALUACION_EXECIONES.N_ID_TIPO_EXENTO = :old.N_ID_TIPO_EXENTO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_EXENCIONES because CESEC_EVALUACION_EXECIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_GRUPOS AFTER DELETE ON CESEC_TIPO_GRUPOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_GRUPOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_GRUPOS  CESEC_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000c82c", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_257", FK_COLUMNS="N_ID_TIPO_GRUPO" */
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_TIPO_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_TIPO_GRUPO = :old.N_ID_TIPO_GRUPO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_GRUPOS AFTER UPDATE ON CESEC_TIPO_GRUPOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_GRUPOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_TIPO_GRUPOS  CESEC_GRUPOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0000fb90", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_GRUPOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_257", FK_COLUMNS="N_ID_TIPO_GRUPO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_GRUPO <> :new.N_ID_TIPO_GRUPO
  THEN
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_TIPO_GRUPO = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = ",",") */
        CESEC_GRUPOS.N_ID_TIPO_GRUPO = :old.N_ID_TIPO_GRUPO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_INCIDENCIA AFTER DELETE ON CESEC_TIPO_INCIDENCIA for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_INCIDENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00012834", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_156", FK_COLUMNS="N_ID_TIPO_INCIDENCIA" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLANTEL_INCIDENCIAS,:%Old," = "," AND") */
        CESEC_PLANTEL_INCIDENCIAS.N_ID_TIPO_INCIDENCIA = :old.N_ID_TIPO_INCIDENCIA;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_TIPO_INCIDENCIA because CESEC_PLANTEL_INCIDENCIAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_INCIDENCIA AFTER UPDATE ON CESEC_TIPO_INCIDENCIA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_INCIDENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_INCIDENCIA  CESEC_PLANTEL_INCIDENCIAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="000151f9", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_INCIDENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PLANTEL_INCIDENCIAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_156", FK_COLUMNS="N_ID_TIPO_INCIDENCIA" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_INCIDENCIA <> :new.N_ID_TIPO_INCIDENCIA
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PLANTEL_INCIDENCIAS
      WHERE
        /*  %JoinFKPK(CESEC_PLANTEL_INCIDENCIAS,:%Old," = "," AND") */
        CESEC_PLANTEL_INCIDENCIAS.N_ID_TIPO_INCIDENCIA = :old.N_ID_TIPO_INCIDENCIA;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_INCIDENCIA because CESEC_PLANTEL_INCIDENCIAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_INCORPORACION_SE AFTER DELETE ON CESEC_TIPO_INCORPORACION_SEP for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_INCORPORACION_SEP 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_INCORPORACION_SEP  CESEC_ESCUELAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="000115bc", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_INCORPORACION_SEP"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_178", FK_COLUMNS="N_ID_TIPO_INCORPORACION_SEP" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_TIPO_INCORPORACION_SEP = :old.N_ID_TIPO_INCORPORACION_SEP;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_TIPO_INCORPORACION_SEP because CESEC_ESCUELAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_INCORPORACION_SE AFTER UPDATE ON CESEC_TIPO_INCORPORACION_SEP for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_INCORPORACION_SEP 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_INCORPORACION_SEP  CESEC_ESCUELAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00014a1f", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_INCORPORACION_SEP"
    CHILD_OWNER="", CHILD_TABLE="CESEC_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_178", FK_COLUMNS="N_ID_TIPO_INCORPORACION_SEP" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_INCORPORACION_SEP <> :new.N_ID_TIPO_INCORPORACION_SEP
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_ESCUELAS,:%Old," = "," AND") */
        CESEC_ESCUELAS.N_ID_TIPO_INCORPORACION_SEP = :old.N_ID_TIPO_INCORPORACION_SEP;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_INCORPORACION_SEP because CESEC_ESCUELAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_PERIODO AFTER DELETE ON CESEC_TIPO_PERIODO for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_PERIODO 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_PERIODO  CESEC_PERIODOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0000dbee", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_PERIODO"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_197", FK_COLUMNS="N_ID_TIPO_PERIODO" */
    UPDATE CESEC_PERIODOS
      SET
        /* %SetFK(CESEC_PERIODOS,NULL) */
        CESEC_PERIODOS.N_ID_TIPO_PERIODO = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERIODOS,:%Old," = "," AND") */
        CESEC_PERIODOS.N_ID_TIPO_PERIODO = :old.N_ID_TIPO_PERIODO;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_PERIODO AFTER UPDATE ON CESEC_TIPO_PERIODO for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_PERIODO 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_TIPO_PERIODO  CESEC_PERIODOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00010e3c", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_PERIODO"
    CHILD_OWNER="", CHILD_TABLE="CESEC_PERIODOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_197", FK_COLUMNS="N_ID_TIPO_PERIODO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_PERIODO <> :new.N_ID_TIPO_PERIODO
  THEN
    UPDATE CESEC_PERIODOS
      SET
        /* %SetFK(CESEC_PERIODOS,NULL) */
        CESEC_PERIODOS.N_ID_TIPO_PERIODO = NULL
      WHERE
        /* %JoinFKPK(CESEC_PERIODOS,:%Old," = ",",") */
        CESEC_PERIODOS.N_ID_TIPO_PERIODO = :old.N_ID_TIPO_PERIODO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_REVALIDACION AFTER DELETE ON CESEC_TIPO_REVALIDACION for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_REVALIDACION 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_REVALIDACION  CESEC_EVAL_REVALIDACIONES on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="000119a0", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_REVALIDACION"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_169", FK_COLUMNS="N_ID_TIPO_REVALIDACION" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_TIPO_REVALIDACION = :old.N_ID_TIPO_REVALIDACION;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_TIPO_REVALIDACION because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_REVALIDACION AFTER UPDATE ON CESEC_TIPO_REVALIDACION for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_REVALIDACION 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_REVALIDACION  CESEC_EVAL_REVALIDACIONES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00015c1f", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_REVALIDACION"
    CHILD_OWNER="", CHILD_TABLE="CESEC_EVAL_REVALIDACIONES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_169", FK_COLUMNS="N_ID_TIPO_REVALIDACION" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_REVALIDACION <> :new.N_ID_TIPO_REVALIDACION
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_EVAL_REVALIDACIONES
      WHERE
        /*  %JoinFKPK(CESEC_EVAL_REVALIDACIONES,:%Old," = "," AND") */
        CESEC_EVAL_REVALIDACIONES.N_ID_TIPO_REVALIDACION = :old.N_ID_TIPO_REVALIDACION;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_REVALIDACION because CESEC_EVAL_REVALIDACIONES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_SANGUINEOS AFTER DELETE ON CESEC_TIPO_SANGUINEOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_SANGUINEOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_SANGUINEOS  CESEC_CONTACTO_ALUMNOS on parent delete restrict */
    /* ERWIN_RELATION:CHECKSUM="00023311", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_SANGUINEOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_174", FK_COLUMNS="N_ID_TIPO_SANGUINEO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_TIPO_SANGUINEO = :old.N_ID_TIPO_SANGUINEO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot delete CESEC_TIPO_SANGUINEOS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_SANGUINEOS  CESEC_INFO_SALUD on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_SANGUINEOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INFO_SALUD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_242", FK_COLUMNS="N_ID_TIPO_SANGUINEO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_INFO_SALUD
      WHERE
        /*  %JoinFKPK(CESEC_INFO_SALUD,:%Old," = "," AND") */
        CESEC_INFO_SALUD.N_ID_TIPO_SANGUINEO = :old.N_ID_TIPO_SANGUINEO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_TIPO_SANGUINEOS because CESEC_INFO_SALUD exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_SANGUINEOS AFTER UPDATE ON CESEC_TIPO_SANGUINEOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_SANGUINEOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_SANGUINEOS  CESEC_CONTACTO_ALUMNOS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="0002766a", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_SANGUINEOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_CONTACTO_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_174", FK_COLUMNS="N_ID_TIPO_SANGUINEO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_SANGUINEO <> :new.N_ID_TIPO_SANGUINEO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_CONTACTO_ALUMNOS
      WHERE
        /*  %JoinFKPK(CESEC_CONTACTO_ALUMNOS,:%Old," = "," AND") */
        CESEC_CONTACTO_ALUMNOS.N_ID_TIPO_SANGUINEO = :old.N_ID_TIPO_SANGUINEO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_SANGUINEOS because CESEC_CONTACTO_ALUMNOS exists.'
      );
    END IF;
  END IF;

  /* CESEC_TIPO_SANGUINEOS  CESEC_INFO_SALUD on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_SANGUINEOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INFO_SALUD"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_242", FK_COLUMNS="N_ID_TIPO_SANGUINEO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_SANGUINEO <> :new.N_ID_TIPO_SANGUINEO
  THEN
    UPDATE CESEC_INFO_SALUD
      SET
        /* %SetFK(CESEC_INFO_SALUD,NULL) */
        CESEC_INFO_SALUD.N_ID_TIPO_SANGUINEO = NULL
      WHERE
        /* %JoinFKPK(CESEC_INFO_SALUD,:%Old," = ",",") */
        CESEC_INFO_SALUD.N_ID_TIPO_SANGUINEO = :old.N_ID_TIPO_SANGUINEO;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TIPO_TELEFONOS AFTER DELETE ON CESEC_TIPO_TELEFONOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TIPO_TELEFONOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TIPO_TELEFONOS  CESEC_TELEFONOS_PLANTELES on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00012082", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_TELEFONOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TELEFONOS_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_141", FK_COLUMNS="N_ID_TIPO_TELEFONO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TELEFONOS_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_TELEFONOS_PLANTELES,:%Old," = "," AND") */
        CESEC_TELEFONOS_PLANTELES.N_ID_TIPO_TELEFONO = :old.N_ID_TIPO_TELEFONO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_TIPO_TELEFONOS because CESEC_TELEFONOS_PLANTELES exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TIPO_TELEFONOS AFTER UPDATE ON CESEC_TIPO_TELEFONOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TIPO_TELEFONOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_TIPO_TELEFONOS  CESEC_TELEFONOS_PLANTELES on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00015a74", PARENT_OWNER="", PARENT_TABLE="CESEC_TIPO_TELEFONOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TELEFONOS_PLANTELES"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_141", FK_COLUMNS="N_ID_TIPO_TELEFONO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TIPO_TELEFONO <> :new.N_ID_TIPO_TELEFONO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TELEFONOS_PLANTELES
      WHERE
        /*  %JoinFKPK(CESEC_TELEFONOS_PLANTELES,:%Old," = "," AND") */
        CESEC_TELEFONOS_PLANTELES.N_ID_TIPO_TELEFONO = :old.N_ID_TIPO_TELEFONO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TIPO_TELEFONOS because CESEC_TELEFONOS_PLANTELES exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER tI_CESEC_TRANSFERENCIA BEFORE INSERT ON CESEC_TRANSFERENCIA for each row
-- ERwin Builtin Trigger
-- INSERT trigger on CESEC_TRANSFERENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_MOTIVOS  CESEC_TRANSFERENCIA on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="0005c389", PARENT_OWNER="", PARENT_TABLE="CESEC_MOTIVOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_229", FK_COLUMNS="N_ID_MOTIVO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_MOTIVOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_MOTIVOS," = "," AND") */
        :new.N_ID_MOTIVO = CESEC_MOTIVOS.N_ID_MOTIVO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_TRANSFERENCIA because CESEC_MOTIVOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_PASOS_TRANSFERENCIA  CESEC_TRANSFERENCIA on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PASOS_TRANSFERENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_226", FK_COLUMNS="N_ID_PASO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_PASOS_TRANSFERENCIA
      WHERE
        /* %JoinFKPK(:%New,CESEC_PASOS_TRANSFERENCIA," = "," AND") */
        :new.N_ID_PASO = CESEC_PASOS_TRANSFERENCIA.N_ID_PASO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_TRANSFERENCIA because CESEC_PASOS_TRANSFERENCIA does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ALUMNOS  CESEC_TRANSFERENCIA on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_225", FK_COLUMNS="N_ID_ALUMNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ALUMNOS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
        :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_TRANSFERENCIA because CESEC_ALUMNOS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_224", FK_COLUMNS="N_ID_ESCUELA_DESTINO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
        :new.N_ID_ESCUELA_DESTINO = CESEC_ESCUELAS.N_ID_ESCUELA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_TRANSFERENCIA because CESEC_ESCUELAS does not exist.'
      );
    END IF;

    /* ERwin Builtin Trigger */
    /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on child insert restrict */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_223", FK_COLUMNS="N_ID_ESCUELA_ORIGEN" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_ESCUELAS
      WHERE
        /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
        :new.N_ID_ESCUELA_ORIGEN = CESEC_ESCUELAS.N_ID_ESCUELA;
    IF (
      /* %NotnullFK(:%New," IS NOT NULL AND") */
      
      NUMROWS = 0
    )
    THEN
      raise_application_error(
        -20002,
        'Cannot insert CESEC_TRANSFERENCIA because CESEC_ESCUELAS does not exist.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TRANSFERENCIA AFTER UPDATE ON CESEC_TRANSFERENCIA for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TRANSFERENCIA 
DECLARE NUMROWS INTEGER;
BEGIN
  /* ERwin Builtin Trigger */
  /* CESEC_MOTIVOS  CESEC_TRANSFERENCIA on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="0005cb72", PARENT_OWNER="", PARENT_TABLE="CESEC_MOTIVOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_229", FK_COLUMNS="N_ID_MOTIVO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_MOTIVOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_MOTIVOS," = "," AND") */
      :new.N_ID_MOTIVO = CESEC_MOTIVOS.N_ID_MOTIVO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_TRANSFERENCIA because CESEC_MOTIVOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_PASOS_TRANSFERENCIA  CESEC_TRANSFERENCIA on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_PASOS_TRANSFERENCIA"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_226", FK_COLUMNS="N_ID_PASO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_PASOS_TRANSFERENCIA
    WHERE
      /* %JoinFKPK(:%New,CESEC_PASOS_TRANSFERENCIA," = "," AND") */
      :new.N_ID_PASO = CESEC_PASOS_TRANSFERENCIA.N_ID_PASO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_TRANSFERENCIA because CESEC_PASOS_TRANSFERENCIA does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ALUMNOS  CESEC_TRANSFERENCIA on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ALUMNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_225", FK_COLUMNS="N_ID_ALUMNO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ALUMNOS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ALUMNOS," = "," AND") */
      :new.N_ID_ALUMNO = CESEC_ALUMNOS.N_ID_ALUMNO;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_TRANSFERENCIA because CESEC_ALUMNOS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_224", FK_COLUMNS="N_ID_ESCUELA_DESTINO" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ESCUELAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
      :new.N_ID_ESCUELA_DESTINO = CESEC_ESCUELAS.N_ID_ESCUELA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_TRANSFERENCIA because CESEC_ESCUELAS does not exist.'
    );
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_ESCUELAS  CESEC_TRANSFERENCIA on child update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TRANSFERENCIA"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_223", FK_COLUMNS="N_ID_ESCUELA_ORIGEN" */
  SELECT count(*) INTO NUMROWS
    FROM CESEC_ESCUELAS
    WHERE
      /* %JoinFKPK(:%New,CESEC_ESCUELAS," = "," AND") */
      :new.N_ID_ESCUELA_ORIGEN = CESEC_ESCUELAS.N_ID_ESCUELA;
  IF (
    /* %NotnullFK(:%New," IS NOT NULL AND") */
    
    NUMROWS = 0
  )
  THEN
    raise_application_error(
      -20007,
      'Cannot update CESEC_TRANSFERENCIA because CESEC_ESCUELAS does not exist.'
    );
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TURNOS AFTER DELETE ON CESEC_TURNOS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TURNOS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TURNOS  CESEC_GRUPOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="0001f6b4", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_254", FK_COLUMNS="N_ID_TURNO" */
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_TURNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = "," AND") */
        CESEC_GRUPOS.N_ID_TURNO = :old.N_ID_TURNO;

    /* ERwin Builtin Trigger */
    /* CESEC_TURNOS  CESEC_TURNOS_OPERANDO_ESCUELAS on parent delete no action */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_63", FK_COLUMNS="N_ID_TURNO" */
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TURNOS_OPERANDO_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_TURNOS_OPERANDO_ESCUELAS,:%Old," = "," AND") */
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_TURNO = :old.N_ID_TURNO;
    IF (NUMROWS > 0)
    THEN
      raise_application_error(
        -20001,
        'Cannot DELETE CESEC_TURNOS because CESEC_TURNOS_OPERANDO_ESCUELAS exists.'
      );
    END IF;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TURNOS AFTER UPDATE ON CESEC_TURNOS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TURNOS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_TURNOS  CESEC_GRUPOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="0002436f", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_GRUPOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_254", FK_COLUMNS="N_ID_TURNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TURNO <> :new.N_ID_TURNO
  THEN
    UPDATE CESEC_GRUPOS
      SET
        /* %SetFK(CESEC_GRUPOS,NULL) */
        CESEC_GRUPOS.N_ID_TURNO = NULL
      WHERE
        /* %JoinFKPK(CESEC_GRUPOS,:%Old," = ",",") */
        CESEC_GRUPOS.N_ID_TURNO = :old.N_ID_TURNO;
  END IF;

  /* ERwin Builtin Trigger */
  /* CESEC_TURNOS  CESEC_TURNOS_OPERANDO_ESCUELAS on parent update restrict */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_63", FK_COLUMNS="N_ID_TURNO" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_TURNO <> :new.N_ID_TURNO
  THEN
    SELECT count(*) INTO NUMROWS
      FROM CESEC_TURNOS_OPERANDO_ESCUELAS
      WHERE
        /*  %JoinFKPK(CESEC_TURNOS_OPERANDO_ESCUELAS,:%Old," = "," AND") */
        CESEC_TURNOS_OPERANDO_ESCUELAS.N_ID_TURNO = :old.N_ID_TURNO;
    IF (NUMROWS > 0)
    THEN 
      raise_application_error(
        -20005,
        'Cannot update CESEC_TURNOS because CESEC_TURNOS_OPERANDO_ESCUELAS exists.'
      );
    END IF;
  END IF;


-- ERwin Builtin Trigger
END;
/


CREATE  TRIGGER  tD_CESEC_TURNOS_OPERANDO_ESCUE AFTER DELETE ON CESEC_TURNOS_OPERANDO_ESCUELAS for each row
-- ERwin Builtin Trigger
-- DELETE trigger on CESEC_TURNOS_OPERANDO_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
    /* ERwin Builtin Trigger */
    /* CESEC_TURNOS_OPERANDO_ESCUELAS  CESEC_BID on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00022af7", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BID"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_187", FK_COLUMNS="N_ID_OPERACION_PLANTEL_TURNOS" */
    UPDATE CESEC_BID
      SET
        /* %SetFK(CESEC_BID,NULL) */
        CESEC_BID.N_ID_OPERACION_PLANTEL_TURNOS = NULL
      WHERE
        /* %JoinFKPK(CESEC_BID,:%Old," = "," AND") */
        CESEC_BID.N_ID_OPERACION_PLANTEL_TURNOS = :old.N_ID_OPERACION_PLANTEL_TURNOS;

    /* ERwin Builtin Trigger */
    /* CESEC_TURNOS_OPERANDO_ESCUELAS  CESEC_INSCRIPCION_ALUMNOS on parent delete set null */
    /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_283", FK_COLUMNS="N_ID_OPERACION_PLANTEL_TURNOS" */
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_OPERACION_PLANTEL_TURNOS = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = "," AND") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_OPERACION_PLANTEL_TURNOS = :old.N_ID_OPERACION_PLANTEL_TURNOS;


-- ERwin Builtin Trigger
END;
/

CREATE  TRIGGER tU_CESEC_TURNOS_OPERANDO_ESCUE AFTER UPDATE ON CESEC_TURNOS_OPERANDO_ESCUELAS for each row
-- ERwin Builtin Trigger
-- UPDATE trigger on CESEC_TURNOS_OPERANDO_ESCUELAS 
DECLARE NUMROWS INTEGER;
BEGIN
  /* CESEC_TURNOS_OPERANDO_ESCUELAS  CESEC_BID on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="000286c2", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_BID"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_187", FK_COLUMNS="N_ID_OPERACION_PLANTEL_TURNOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_OPERACION_PLANTEL_TURNOS <> :new.N_ID_OPERACION_PLANTEL_TURNOS
  THEN
    UPDATE CESEC_BID
      SET
        /* %SetFK(CESEC_BID,NULL) */
        CESEC_BID.N_ID_OPERACION_PLANTEL_TURNOS = NULL
      WHERE
        /* %JoinFKPK(CESEC_BID,:%Old," = ",",") */
        CESEC_BID.N_ID_OPERACION_PLANTEL_TURNOS = :old.N_ID_OPERACION_PLANTEL_TURNOS;
  END IF;

  /* CESEC_TURNOS_OPERANDO_ESCUELAS  CESEC_INSCRIPCION_ALUMNOS on parent update set null */
  /* ERWIN_RELATION:CHECKSUM="00000000", PARENT_OWNER="", PARENT_TABLE="CESEC_TURNOS_OPERANDO_ESCUELAS"
    CHILD_OWNER="", CHILD_TABLE="CESEC_INSCRIPCION_ALUMNOS"
    P2C_VERB_PHRASE="", C2P_VERB_PHRASE="", 
    FK_CONSTRAINT="R_283", FK_COLUMNS="N_ID_OPERACION_PLANTEL_TURNOS" */
  IF
    /* %JoinPKPK(:%Old,:%New," <> "," OR ") */
    :old.N_ID_OPERACION_PLANTEL_TURNOS <> :new.N_ID_OPERACION_PLANTEL_TURNOS
  THEN
    UPDATE CESEC_INSCRIPCION_ALUMNOS
      SET
        /* %SetFK(CESEC_INSCRIPCION_ALUMNOS,NULL) */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_OPERACION_PLANTEL_TURNOS = NULL
      WHERE
        /* %JoinFKPK(CESEC_INSCRIPCION_ALUMNOS,:%Old," = ",",") */
        CESEC_INSCRIPCION_ALUMNOS.N_ID_OPERACION_PLANTEL_TURNOS = :old.N_ID_OPERACION_PLANTEL_TURNOS;
  END IF;


-- ERwin Builtin Trigger
END;
/



CREATE  OR REPLACE  TRIGGER TRG_CESEC_CODIGO_POSTALES
 BEFORE INSERT
 ON CESEC_CODIGO_POSTALES
 REFERENCING OLD AS OLD NEW AS NEW
 for each row
 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.N_ID_CODIGO_POSTAL IS NULL THEN
      SELECT SEQ_CESEC_CODIGO_POSTALES.NEXTVAL INTO :NEW.N_ID_CODIGO_POSTAL FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/





ALTER TRIGGER TRG_CESEC_CODIGO_POSTALES
	ENABLE;




CREATE  OR REPLACE  TRIGGER TRG_CESEC_INSCRIPCION_ALUMNOS
 BEFORE INSERT
 ON CESEC_INSCRIPCION_ALUMNOS
 REFERENCING OLD AS OLD NEW AS NEW
 for each row
 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.N_ID_INSCRIPCION_ALUMNO IS NULL THEN
      SELECT SEQ_CESEC_INSCRIPCION_ALUMNOS.NEXTVAL INTO :NEW.N_ID_INSCRIPCION_ALUMNO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/





ALTER TRIGGER TRG_CESEC_INSCRIPCION_ALUMNOS
	ENABLE;




CREATE  OR REPLACE  TRIGGER TRG_CESEC_MOVIMIENTO_ALUMNOS
 BEFORE INSERT
 ON CESEC_MOVIMIENTO_ALUMNOS
 REFERENCING OLD AS OLD NEW AS NEW
 for each row
 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.N_ID_INSCRIPCION_MOVIMIENTOS IS NULL THEN
      SELECT SEQ_CESEC_MOVIMIENTO_ALUMNOS.NEXTVAL INTO :NEW.N_ID_INSCRIPCION_MOVIMIENTOS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/





ALTER TRIGGER TRG_CESEC_MOVIMIENTO_ALUMNOS
	ENABLE;


